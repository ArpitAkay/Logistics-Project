{
	"id": "0b2a2ca839cc3dc6523f884aba9c650a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GeekToken/GeekToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./Types.sol\";\nimport \"./Events.sol\";\n\ncontract GeekToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable {\n    uint256 internal maxSupply = 10000000 * (10 ** decimals());     // 1 crore = 10 million\n    constructor(address initialOwner)\n        ERC20(\"GeekToken\", \"GTK\")\n        Ownable(initialOwner)\n    {\n        _mint(msg.sender, 2500000 * 10 ** decimals());  // 25 lakh = 2.5 million\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(totalSupply() + amount <= maxSupply, \"We sold out\");\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n\n    function tokenReward(uint256 cargoInsuredValue, Types.Acceptance acceptance) internal view returns (uint256) {\n        uint256 _reward = 0;\n        uint256 _totalSupply = totalSupply();\n        if(_totalSupply >= (maxSupply * 25 / 100) && _totalSupply < (maxSupply * 50 / 100)) {\n            if(acceptance == Types.Acceptance.CONDITIONAL)\n                _reward = 2 * cargoInsuredValue * (10 ** decimals()) / 100;\n            else\n                _reward = 1 * cargoInsuredValue * (10 ** decimals()) / 100;\n        } else if(_totalSupply >= (maxSupply * 50 / 100) && _totalSupply < (maxSupply * 75 / 100)) {\n             if(acceptance == Types.Acceptance.CONDITIONAL)\n                _reward = 1 * cargoInsuredValue * (10 ** decimals()) / 100;\n            else\n                _reward = 5 * cargoInsuredValue * (10 ** decimals()) / 1000;\n        } else if(_totalSupply >= (maxSupply * 75 / 100) && _totalSupply < (maxSupply * 95 / 100)) {\n             if(acceptance == Types.Acceptance.CONDITIONAL)\n                _reward = 5 * cargoInsuredValue * (10 ** decimals()) / 1000;\n            else\n                _reward = 25 * cargoInsuredValue * (10 ** decimals()) / 10000;\n        } else {\n            _reward = 0;\n        }\n\n        return _reward;\n    }\n\n    function transferTokens(address to, uint256 cargoInsurableValue, Types.Acceptance acceptance) external {\n        uint256 tokensToReward = tokenReward(cargoInsurableValue, acceptance);\n        transfer(to, tokensToReward);\n\n        emit Events.TransferedTokens(address(this), to, tokensToReward);\n    }\n}\n"
			},
			"contracts/GeekToken/Events.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nlibrary Events {\n    event TransferedTokens(address from, address to, uint256 tokens);\n}"
			},
			"contracts/GeekToken/Types.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nlibrary Types {\n    enum Acceptance {\n        CONDITIONAL, UNCONDITIONAL\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1022,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1022,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GeekToken/Events.sol": {
				"Events": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "TransferedTokens",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GeekToken/Events.sol\":58:146  library Events {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GeekToken/Events.sol\":58:146  library Events {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208281fc9483a8980515c958f46c6405b2fad03d9f632b6fdf6a6e2fc91588ebe564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208281fc9483a8980515c958f46c6405b2fad03d9f632b6fdf6a6e2fc91588ebe564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 DUP2 0xFC SWAP5 DUP4 0xA8 SWAP9 SDIV ISZERO 0xC9 PC DELEGATECALL PUSH13 0x6405B2FAD03D9F632B6FDF6A6E 0x2F 0xC9 ISZERO DUP9 0xEB 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "58:88:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208281fc9483a8980515c958f46c6405b2fad03d9f632b6fdf6a6e2fc91588ebe564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 DUP2 0xFC SWAP5 DUP4 0xA8 SWAP9 SDIV ISZERO 0xC9 PC DELEGATECALL PUSH13 0x6405B2FAD03D9F632B6FDF6A6E 0x2F 0xC9 ISZERO DUP9 0xEB 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "58:88:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 146,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 58,
									"end": 146,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208281fc9483a8980515c958f46c6405b2fad03d9f632b6fdf6a6e2fc91588ebe564736f6c63430008180033",
									".code": [
										{
											"begin": 58,
											"end": 146,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 58,
											"end": 146,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 58,
											"end": 146,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 58,
											"end": 146,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 58,
											"end": 146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 58,
											"end": 146,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"contracts/GeekToken/Events.sol",
								"contracts/GeekToken/GeekToken.sol",
								"contracts/GeekToken/Types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"TransferedTokens\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GeekToken/Events.sol\":\"Events\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GeekToken/Events.sol\":{\"keccak256\":\"0xaeb3f20e537bf461954b1c8a958458239598f588032371563de9b52277b2a655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://685ab03cd0028686e0268aaba92b17655dc98a3ad27fba7817fb19ced8d236c6\",\"dweb:/ipfs/QmVWD2DAGonLPXACXk7dc9LWa7VgXqsze6WvhGesmYe3Qg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GeekToken/GeekToken.sol": {
				"GeekToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								}
							],
							"name": "TransferedTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cargoInsurableValue",
									"type": "uint256"
								},
								{
									"internalType": "enum Types.Acceptance",
									"name": "acceptance",
									"type": "uint8"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GeekToken/GeekToken.sol\":363:2829  contract GeekToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GeekToken/GeekToken.sol\":483:493  decimals() */\n  tag_1\n    /* \"contracts/GeekToken/GeekToken.sol\":483:491  decimals */\n  shl(0x20, tag_2)\n    /* \"contracts/GeekToken/GeekToken.sol\":483:493  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"contracts/GeekToken/GeekToken.sol\":477:479  10 */\n  0x0a\n    /* \"contracts/GeekToken/GeekToken.sol\":477:493  10 ** decimals() */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"contracts/GeekToken/GeekToken.sol\":465:473  10000000 */\n  0x989680\n    /* \"contracts/GeekToken/GeekToken.sol\":465:494  10000000 * (10 ** decimals()) */\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/GeekToken/GeekToken.sol\":436:494  uint256 internal maxSupply = 10000000 * (10 ** decimals()) */\n  0x06\n  sstore\n    /* \"contracts/GeekToken/GeekToken.sol\":528:718  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"contracts/GeekToken/GeekToken.sol\":612:624  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x4765656b546f6b656e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x47544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_17\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_17:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_20\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_23\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/GeekToken/GeekToken.sol\":640:685  _mint(msg.sender, 2500000 * 10 ** decimals()) */\n  tag_26\n    /* \"contracts/GeekToken/GeekToken.sol\":646:656  msg.sender */\n  caller\n    /* \"contracts/GeekToken/GeekToken.sol\":674:684  decimals() */\n  tag_27\n    /* \"contracts/GeekToken/GeekToken.sol\":674:682  decimals */\n  shl(0x20, tag_2)\n    /* \"contracts/GeekToken/GeekToken.sol\":674:684  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/GeekToken/GeekToken.sol\":668:670  10 */\n  0x0a\n    /* \"contracts/GeekToken/GeekToken.sol\":668:684  10 ** decimals() */\n  tag_28\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_28:\n    /* \"contracts/GeekToken/GeekToken.sol\":658:665  2500000 */\n  0x2625a0\n    /* \"contracts/GeekToken/GeekToken.sol\":658:684  2500000 * 10 ** decimals() */\n  tag_29\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_29:\n    /* \"contracts/GeekToken/GeekToken.sol\":640:645  _mint */\n  shl(0x20, tag_30)\n    /* \"contracts/GeekToken/GeekToken.sol\":640:685  _mint(msg.sender, 2500000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"contracts/GeekToken/GeekToken.sol\":528:718  constructor(address initialOwner)... */\n  pop\n    /* \"contracts/GeekToken/GeekToken.sol\":363:2829  contract GeekToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable {... */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/GeekToken/GeekToken.sol\":1094:1259  function _update(address from, address to, uint256 value)... */\ntag_38:\n    /* \"contracts/GeekToken/GeekToken.sol\":1222:1252  super._update(from, to, value) */\n  tag_40\n    /* \"contracts/GeekToken/GeekToken.sol\":1236:1240  from */\n  dup4\n    /* \"contracts/GeekToken/GeekToken.sol\":1242:1244  to */\n  dup4\n    /* \"contracts/GeekToken/GeekToken.sol\":1246:1251  value */\n  dup4\n    /* \"contracts/GeekToken/GeekToken.sol\":1222:1235  super._update */\n  shl(0x20, tag_41)\n    /* \"contracts/GeekToken/GeekToken.sol\":1222:1252  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"contracts/GeekToken/GeekToken.sol\":1094:1259  function _update(address from, address to, uint256 value)... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\ntag_41:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  tag_43\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n  shl(0x20, tag_44)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  tag_46\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n  shl(0x20, tag_47)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\ntag_44:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  tag_49\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n  shl(0x20, tag_50)\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_49:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n  iszero\n  tag_51\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n  mload(0x40)\n  0xd93c066500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\ntag_51:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_56)\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_58\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_61)\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_62\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\ntag_50:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_65:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x11\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":193:295   */\ntag_66:\n    /* \"#utility.yul\":235:243   */\n  0x00\n    /* \"#utility.yul\":282:287   */\n  dup2\n    /* \"#utility.yul\":279:280   */\n  0x01\n    /* \"#utility.yul\":275:288   */\n  shr\n    /* \"#utility.yul\":254:288   */\n  swap1\n  pop\n    /* \"#utility.yul\":193:295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":301:1149   */\ntag_67:\n    /* \"#utility.yul\":362:367   */\n  0x00\n    /* \"#utility.yul\":369:373   */\n  dup1\n    /* \"#utility.yul\":393:399   */\n  dup3\n    /* \"#utility.yul\":384:399   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:422   */\n  dup4\n    /* \"#utility.yul\":408:422   */\n  swap1\n  pop\n    /* \"#utility.yul\":431:1143   */\ntag_103:\n    /* \"#utility.yul\":452:453   */\n  0x01\n    /* \"#utility.yul\":442:450   */\n  dup6\n    /* \"#utility.yul\":439:454   */\n  gt\n    /* \"#utility.yul\":431:1143   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":547:551   */\n  dup1\n    /* \"#utility.yul\":542:545   */\n  dup7\n    /* \"#utility.yul\":538:552   */\n  div\n    /* \"#utility.yul\":532:536   */\n  dup2\n    /* \"#utility.yul\":529:553   */\n  gt\n    /* \"#utility.yul\":526:576   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":556:574   */\n  tag_107\n  tag_65\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":526:576   */\ntag_106:\n    /* \"#utility.yul\":606:607   */\n  0x01\n    /* \"#utility.yul\":596:604   */\n  dup6\n    /* \"#utility.yul\":592:608   */\n  and\n    /* \"#utility.yul\":589:1040   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":1021:1025   */\n  dup1\n    /* \"#utility.yul\":1014:1019   */\n  dup3\n    /* \"#utility.yul\":1010:1026   */\n  mul\n    /* \"#utility.yul\":1001:1026   */\n  swap2\n  pop\n    /* \"#utility.yul\":589:1040   */\ntag_108:\n    /* \"#utility.yul\":1071:1075   */\n  dup1\n    /* \"#utility.yul\":1065:1069   */\n  dup2\n    /* \"#utility.yul\":1061:1076   */\n  mul\n    /* \"#utility.yul\":1053:1076   */\n  swap1\n  pop\n    /* \"#utility.yul\":1101:1133   */\n  tag_109\n    /* \"#utility.yul\":1124:1132   */\n  dup6\n    /* \"#utility.yul\":1101:1133   */\n  tag_66\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1089:1133   */\n  swap5\n  pop\n    /* \"#utility.yul\":431:1143   */\n  jump(tag_103)\ntag_105:\n    /* \"#utility.yul\":301:1149   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1155:2228   */\ntag_68:\n    /* \"#utility.yul\":1209:1214   */\n  0x00\n    /* \"#utility.yul\":1400:1408   */\n  dup3\n    /* \"#utility.yul\":1390:1430   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1421:1422   */\n  0x01\n    /* \"#utility.yul\":1412:1422   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1428   */\n  jump(tag_110)\n    /* \"#utility.yul\":1390:1430   */\ntag_111:\n    /* \"#utility.yul\":1449:1453   */\n  dup2\n    /* \"#utility.yul\":1439:1475   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":1466:1467   */\n  0x00\n    /* \"#utility.yul\":1457:1467   */\n  swap1\n  pop\n    /* \"#utility.yul\":1468:1473   */\n  jump(tag_110)\n    /* \"#utility.yul\":1439:1475   */\ntag_112:\n    /* \"#utility.yul\":1535:1539   */\n  dup2\n    /* \"#utility.yul\":1583:1584   */\n  0x01\n    /* \"#utility.yul\":1578:1605   */\n  dup2\n  eq\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1619:1620   */\n  0x02\n    /* \"#utility.yul\":1614:1805   */\n  dup2\n  eq\n  tag_115\n  jumpi\n    /* \"#utility.yul\":1528:1805   */\n  jump(tag_113)\n    /* \"#utility.yul\":1578:1605   */\ntag_114:\n    /* \"#utility.yul\":1596:1597   */\n  0x01\n    /* \"#utility.yul\":1587:1597   */\n  swap2\n  pop\n    /* \"#utility.yul\":1598:1603   */\n  pop\n  jump(tag_110)\n    /* \"#utility.yul\":1614:1805   */\ntag_115:\n    /* \"#utility.yul\":1659:1662   */\n  0xff\n    /* \"#utility.yul\":1649:1657   */\n  dup5\n    /* \"#utility.yul\":1646:1663   */\n  gt\n    /* \"#utility.yul\":1643:1686   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":1666:1684   */\n  tag_117\n  tag_65\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1643:1686   */\ntag_116:\n    /* \"#utility.yul\":1715:1723   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  0x02\n    /* \"#utility.yul\":1708:1724   */\n  exp\n    /* \"#utility.yul\":1699:1724   */\n  swap2\n  pop\n    /* \"#utility.yul\":1750:1753   */\n  dup5\n    /* \"#utility.yul\":1743:1748   */\n  dup3\n    /* \"#utility.yul\":1740:1754   */\n  gt\n    /* \"#utility.yul\":1737:1777   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":1757:1775   */\n  tag_119\n  tag_65\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1737:1777   */\ntag_118:\n    /* \"#utility.yul\":1790:1795   */\n  pop\n  jump(tag_110)\n    /* \"#utility.yul\":1528:1805   */\ntag_113:\n  pop\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1904:1912   */\n  dup4\n    /* \"#utility.yul\":1901:1917   */\n  lt\n    /* \"#utility.yul\":1895:1898   */\n  0x0133\n    /* \"#utility.yul\":1889:1893   */\n  dup4\n    /* \"#utility.yul\":1886:1899   */\n  lt\n    /* \"#utility.yul\":1882:1918   */\n  and\n    /* \"#utility.yul\":1864:1866   */\n  0x4e\n    /* \"#utility.yul\":1854:1862   */\n  dup5\n    /* \"#utility.yul\":1851:1867   */\n  lt\n    /* \"#utility.yul\":1846:1848   */\n  0x0b\n    /* \"#utility.yul\":1840:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  lt\n    /* \"#utility.yul\":1833:1868   */\n  and\n    /* \"#utility.yul\":1817:1928   */\n  or\n    /* \"#utility.yul\":1814:2060   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":1970:1978   */\n  dup3\n    /* \"#utility.yul\":1964:1968   */\n  dup3\n    /* \"#utility.yul\":1960:1979   */\n  exp\n    /* \"#utility.yul\":1951:1979   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2008   */\n  dup4\n    /* \"#utility.yul\":1998:2003   */\n  dup2\n    /* \"#utility.yul\":1995:2009   */\n  gt\n    /* \"#utility.yul\":1992:2032   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":2012:2030   */\n  tag_122\n  tag_65\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1992:2032   */\ntag_121:\n    /* \"#utility.yul\":2045:2050   */\n  jump(tag_110)\n    /* \"#utility.yul\":1814:2060   */\ntag_120:\n    /* \"#utility.yul\":2085:2127   */\n  tag_123\n    /* \"#utility.yul\":2123:2126   */\n  dup5\n    /* \"#utility.yul\":2113:2121   */\n  dup5\n    /* \"#utility.yul\":2107:2111   */\n  dup5\n    /* \"#utility.yul\":2104:2105   */\n  0x01\n    /* \"#utility.yul\":2085:2127   */\n  tag_67\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2070:2127   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2163   */\n  dup2\n    /* \"#utility.yul\":2154:2157   */\n  dup5\n    /* \"#utility.yul\":2150:2164   */\n  div\n    /* \"#utility.yul\":2143:2148   */\n  dup2\n    /* \"#utility.yul\":2140:2165   */\n  gt\n    /* \"#utility.yul\":2137:2188   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2168:2186   */\n  tag_125\n  tag_65\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2137:2188   */\ntag_124:\n    /* \"#utility.yul\":2217:2221   */\n  dup2\n    /* \"#utility.yul\":2210:2215   */\n  dup2\n    /* \"#utility.yul\":2206:2222   */\n  mul\n    /* \"#utility.yul\":2197:2222   */\n  swap1\n  pop\n    /* \"#utility.yul\":1155:2228   */\ntag_110:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2234:2311   */\ntag_69:\n    /* \"#utility.yul\":2271:2278   */\n  0x00\n    /* \"#utility.yul\":2300:2305   */\n  dup2\n    /* \"#utility.yul\":2289:2305   */\n  swap1\n  pop\n    /* \"#utility.yul\":2234:2311   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2317:2403   */\ntag_70:\n    /* \"#utility.yul\":2352:2359   */\n  0x00\n    /* \"#utility.yul\":2392:2396   */\n  0xff\n    /* \"#utility.yul\":2385:2390   */\n  dup3\n    /* \"#utility.yul\":2381:2397   */\n  and\n    /* \"#utility.yul\":2370:2397   */\n  swap1\n  pop\n    /* \"#utility.yul\":2317:2403   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2409:2690   */\ntag_4:\n    /* \"#utility.yul\":2467:2472   */\n  0x00\n    /* \"#utility.yul\":2491:2514   */\n  tag_129\n    /* \"#utility.yul\":2509:2513   */\n  dup3\n    /* \"#utility.yul\":2491:2514   */\n  tag_69\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2483:2514   */\n  swap2\n  pop\n    /* \"#utility.yul\":2535:2560   */\n  tag_130\n    /* \"#utility.yul\":2551:2559   */\n  dup4\n    /* \"#utility.yul\":2535:2560   */\n  tag_70\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2523:2560   */\n  swap3\n  pop\n    /* \"#utility.yul\":2579:2683   */\n  tag_131\n    /* \"#utility.yul\":2616:2682   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2606:2614   */\n  dup5\n    /* \"#utility.yul\":2600:2604   */\n  dup5\n    /* \"#utility.yul\":2579:2683   */\n  tag_68\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2570:2683   */\n  swap1\n  pop\n    /* \"#utility.yul\":2409:2690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2696:3106   */\ntag_6:\n    /* \"#utility.yul\":2736:2743   */\n  0x00\n    /* \"#utility.yul\":2759:2779   */\n  tag_133\n    /* \"#utility.yul\":2777:2778   */\n  dup3\n    /* \"#utility.yul\":2759:2779   */\n  tag_69\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2754:2779   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:2813   */\n  tag_134\n    /* \"#utility.yul\":2811:2812   */\n  dup4\n    /* \"#utility.yul\":2793:2813   */\n  tag_69\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2788:2813   */\n  swap3\n  pop\n    /* \"#utility.yul\":2848:2849   */\n  dup3\n    /* \"#utility.yul\":2845:2846   */\n  dup3\n    /* \"#utility.yul\":2841:2850   */\n  mul\n    /* \"#utility.yul\":2870:2900   */\n  tag_135\n    /* \"#utility.yul\":2888:2899   */\n  dup2\n    /* \"#utility.yul\":2870:2900   */\n  tag_69\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2859:2900   */\n  swap2\n  pop\n    /* \"#utility.yul\":3049:3050   */\n  dup3\n    /* \"#utility.yul\":3040:3047   */\n  dup3\n    /* \"#utility.yul\":3036:3051   */\n  div\n    /* \"#utility.yul\":3033:3034   */\n  dup5\n    /* \"#utility.yul\":3030:3052   */\n  eq\n    /* \"#utility.yul\":3010:3011   */\n  dup4\n    /* \"#utility.yul\":3003:3012   */\n  iszero\n    /* \"#utility.yul\":2983:3066   */\n  or\n    /* \"#utility.yul\":2960:3099   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":3079:3097   */\n  tag_137\n  tag_65\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":2960:3099   */\ntag_136:\n    /* \"#utility.yul\":2744:3106   */\n  pop\n    /* \"#utility.yul\":2696:3106   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3193:3310   */\ntag_72:\n    /* \"#utility.yul\":3302:3303   */\n  0x00\n    /* \"#utility.yul\":3299:3300   */\n  dup1\n    /* \"#utility.yul\":3292:3304   */\n  revert\n    /* \"#utility.yul\":3439:3565   */\ntag_74:\n    /* \"#utility.yul\":3476:3483   */\n  0x00\n    /* \"#utility.yul\":3516:3558   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3509:3514   */\n  dup3\n    /* \"#utility.yul\":3505:3559   */\n  and\n    /* \"#utility.yul\":3494:3559   */\n  swap1\n  pop\n    /* \"#utility.yul\":3439:3565   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3571:3667   */\ntag_75:\n    /* \"#utility.yul\":3608:3615   */\n  0x00\n    /* \"#utility.yul\":3637:3661   */\n  tag_143\n    /* \"#utility.yul\":3655:3660   */\n  dup3\n    /* \"#utility.yul\":3637:3661   */\n  tag_74\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3626:3661   */\n  swap1\n  pop\n    /* \"#utility.yul\":3571:3667   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3673:3795   */\ntag_76:\n    /* \"#utility.yul\":3746:3770   */\n  tag_145\n    /* \"#utility.yul\":3764:3769   */\n  dup2\n    /* \"#utility.yul\":3746:3770   */\n  tag_75\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":3739:3744   */\n  dup2\n    /* \"#utility.yul\":3736:3771   */\n  eq\n    /* \"#utility.yul\":3726:3789   */\n  tag_146\n  jumpi\n    /* \"#utility.yul\":3785:3786   */\n  0x00\n    /* \"#utility.yul\":3782:3783   */\n  dup1\n    /* \"#utility.yul\":3775:3787   */\n  revert\n    /* \"#utility.yul\":3726:3789   */\ntag_146:\n    /* \"#utility.yul\":3673:3795   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3801:3944   */\ntag_77:\n    /* \"#utility.yul\":3858:3863   */\n  0x00\n    /* \"#utility.yul\":3889:3895   */\n  dup2\n    /* \"#utility.yul\":3883:3896   */\n  mload\n    /* \"#utility.yul\":3874:3896   */\n  swap1\n  pop\n    /* \"#utility.yul\":3905:3938   */\n  tag_148\n    /* \"#utility.yul\":3932:3937   */\n  dup2\n    /* \"#utility.yul\":3905:3938   */\n  tag_76\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":3801:3944   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3950:4301   */\ntag_9:\n    /* \"#utility.yul\":4020:4026   */\n  0x00\n    /* \"#utility.yul\":4069:4071   */\n  0x20\n    /* \"#utility.yul\":4057:4066   */\n  dup3\n    /* \"#utility.yul\":4048:4055   */\n  dup5\n    /* \"#utility.yul\":4044:4067   */\n  sub\n    /* \"#utility.yul\":4040:4072   */\n  slt\n    /* \"#utility.yul\":4037:4156   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":4075:4154   */\n  tag_151\n  tag_72\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4037:4156   */\ntag_150:\n    /* \"#utility.yul\":4195:4196   */\n  0x00\n    /* \"#utility.yul\":4220:4284   */\n  tag_152\n    /* \"#utility.yul\":4276:4283   */\n  dup5\n    /* \"#utility.yul\":4267:4273   */\n  dup3\n    /* \"#utility.yul\":4256:4265   */\n  dup6\n    /* \"#utility.yul\":4252:4274   */\n  add\n    /* \"#utility.yul\":4220:4284   */\n  tag_77\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4210:4284   */\n  swap2\n  pop\n    /* \"#utility.yul\":4166:4294   */\n  pop\n    /* \"#utility.yul\":3950:4301   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4307:4406   */\ntag_78:\n    /* \"#utility.yul\":4359:4365   */\n  0x00\n    /* \"#utility.yul\":4393:4398   */\n  dup2\n    /* \"#utility.yul\":4387:4399   */\n  mload\n    /* \"#utility.yul\":4377:4399   */\n  swap1\n  pop\n    /* \"#utility.yul\":4307:4406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4412:4592   */\ntag_79:\n    /* \"#utility.yul\":4460:4537   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4457:4458   */\n  0x00\n    /* \"#utility.yul\":4450:4538   */\n  mstore\n    /* \"#utility.yul\":4557:4561   */\n  0x41\n    /* \"#utility.yul\":4554:4555   */\n  0x04\n    /* \"#utility.yul\":4547:4562   */\n  mstore\n    /* \"#utility.yul\":4581:4585   */\n  0x24\n    /* \"#utility.yul\":4578:4579   */\n  0x00\n    /* \"#utility.yul\":4571:4586   */\n  revert\n    /* \"#utility.yul\":4598:4778   */\ntag_80:\n    /* \"#utility.yul\":4646:4723   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4643:4644   */\n  0x00\n    /* \"#utility.yul\":4636:4724   */\n  mstore\n    /* \"#utility.yul\":4743:4747   */\n  0x22\n    /* \"#utility.yul\":4740:4741   */\n  0x04\n    /* \"#utility.yul\":4733:4748   */\n  mstore\n    /* \"#utility.yul\":4767:4771   */\n  0x24\n    /* \"#utility.yul\":4764:4765   */\n  0x00\n    /* \"#utility.yul\":4757:4772   */\n  revert\n    /* \"#utility.yul\":4784:5104   */\ntag_81:\n    /* \"#utility.yul\":4828:4834   */\n  0x00\n    /* \"#utility.yul\":4865:4866   */\n  0x02\n    /* \"#utility.yul\":4859:4863   */\n  dup3\n    /* \"#utility.yul\":4855:4867   */\n  div\n    /* \"#utility.yul\":4845:4867   */\n  swap1\n  pop\n    /* \"#utility.yul\":4912:4913   */\n  0x01\n    /* \"#utility.yul\":4906:4910   */\n  dup3\n    /* \"#utility.yul\":4902:4914   */\n  and\n    /* \"#utility.yul\":4933:4951   */\n  dup1\n    /* \"#utility.yul\":4923:5004   */\n  tag_157\n  jumpi\n    /* \"#utility.yul\":4989:4993   */\n  0x7f\n    /* \"#utility.yul\":4981:4987   */\n  dup3\n    /* \"#utility.yul\":4977:4994   */\n  and\n    /* \"#utility.yul\":4967:4994   */\n  swap2\n  pop\n    /* \"#utility.yul\":4923:5004   */\ntag_157:\n    /* \"#utility.yul\":5051:5053   */\n  0x20\n    /* \"#utility.yul\":5043:5049   */\n  dup3\n    /* \"#utility.yul\":5040:5054   */\n  lt\n    /* \"#utility.yul\":5020:5038   */\n  dup2\n    /* \"#utility.yul\":5017:5055   */\n  sub\n    /* \"#utility.yul\":5014:5098   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":5070:5088   */\n  tag_159\n  tag_80\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5014:5098   */\ntag_158:\n    /* \"#utility.yul\":4835:5104   */\n  pop\n    /* \"#utility.yul\":4784:5104   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5110:5251   */\ntag_82:\n    /* \"#utility.yul\":5159:5163   */\n  0x00\n    /* \"#utility.yul\":5182:5185   */\n  dup2\n    /* \"#utility.yul\":5174:5185   */\n  swap1\n  pop\n    /* \"#utility.yul\":5205:5208   */\n  dup2\n    /* \"#utility.yul\":5202:5203   */\n  0x00\n    /* \"#utility.yul\":5195:5209   */\n  mstore\n    /* \"#utility.yul\":5239:5243   */\n  0x20\n    /* \"#utility.yul\":5236:5237   */\n  0x00\n    /* \"#utility.yul\":5226:5244   */\n  keccak256\n    /* \"#utility.yul\":5218:5244   */\n  swap1\n  pop\n    /* \"#utility.yul\":5110:5251   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5257:5350   */\ntag_83:\n    /* \"#utility.yul\":5294:5300   */\n  0x00\n    /* \"#utility.yul\":5341:5343   */\n  0x20\n    /* \"#utility.yul\":5336:5338   */\n  0x1f\n    /* \"#utility.yul\":5329:5334   */\n  dup4\n    /* \"#utility.yul\":5325:5339   */\n  add\n    /* \"#utility.yul\":5321:5344   */\n  div\n    /* \"#utility.yul\":5311:5344   */\n  swap1\n  pop\n    /* \"#utility.yul\":5257:5350   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5356:5463   */\ntag_84:\n    /* \"#utility.yul\":5400:5408   */\n  0x00\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup3\n    /* \"#utility.yul\":5440:5456   */\n  shl\n    /* \"#utility.yul\":5419:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5356:5463   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5469:5862   */\ntag_85:\n    /* \"#utility.yul\":5538:5544   */\n  0x00\n    /* \"#utility.yul\":5588:5589   */\n  0x08\n    /* \"#utility.yul\":5576:5586   */\n  dup4\n    /* \"#utility.yul\":5572:5590   */\n  mul\n    /* \"#utility.yul\":5611:5708   */\n  tag_164\n    /* \"#utility.yul\":5641:5707   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5630:5639   */\n  dup3\n    /* \"#utility.yul\":5611:5708   */\n  tag_84\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":5729:5768   */\n  tag_165\n    /* \"#utility.yul\":5759:5767   */\n  dup7\n    /* \"#utility.yul\":5748:5757   */\n  dup4\n    /* \"#utility.yul\":5729:5768   */\n  tag_84\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":5717:5768   */\n  swap6\n  pop\n    /* \"#utility.yul\":5801:5805   */\n  dup1\n    /* \"#utility.yul\":5797:5806   */\n  not\n    /* \"#utility.yul\":5790:5795   */\n  dup5\n    /* \"#utility.yul\":5786:5807   */\n  and\n    /* \"#utility.yul\":5777:5807   */\n  swap4\n  pop\n    /* \"#utility.yul\":5850:5854   */\n  dup1\n    /* \"#utility.yul\":5840:5848   */\n  dup7\n    /* \"#utility.yul\":5836:5855   */\n  and\n    /* \"#utility.yul\":5829:5834   */\n  dup5\n    /* \"#utility.yul\":5826:5856   */\n  or\n    /* \"#utility.yul\":5816:5856   */\n  swap3\n  pop\n    /* \"#utility.yul\":5545:5862   */\n  pop\n  pop\n    /* \"#utility.yul\":5469:5862   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5868:5928   */\ntag_86:\n    /* \"#utility.yul\":5896:5899   */\n  0x00\n    /* \"#utility.yul\":5917:5922   */\n  dup2\n    /* \"#utility.yul\":5910:5922   */\n  swap1\n  pop\n    /* \"#utility.yul\":5868:5928   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5934:6076   */\ntag_87:\n    /* \"#utility.yul\":5984:5993   */\n  0x00\n    /* \"#utility.yul\":6017:6070   */\n  tag_168\n    /* \"#utility.yul\":6035:6069   */\n  tag_169\n    /* \"#utility.yul\":6044:6068   */\n  tag_170\n    /* \"#utility.yul\":6062:6067   */\n  dup5\n    /* \"#utility.yul\":6044:6068   */\n  tag_69\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6035:6069   */\n  tag_86\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6017:6070   */\n  tag_69\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6004:6070   */\n  swap1\n  pop\n    /* \"#utility.yul\":5934:6076   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6082:6157   */\ntag_88:\n    /* \"#utility.yul\":6125:6128   */\n  0x00\n    /* \"#utility.yul\":6146:6151   */\n  dup2\n    /* \"#utility.yul\":6139:6151   */\n  swap1\n  pop\n    /* \"#utility.yul\":6082:6157   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6163:6432   */\ntag_89:\n    /* \"#utility.yul\":6273:6312   */\n  tag_173\n    /* \"#utility.yul\":6304:6311   */\n  dup4\n    /* \"#utility.yul\":6273:6312   */\n  tag_87\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":6334:6425   */\n  tag_174\n    /* \"#utility.yul\":6383:6424   */\n  tag_175\n    /* \"#utility.yul\":6407:6423   */\n  dup3\n    /* \"#utility.yul\":6383:6424   */\n  tag_88\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6375:6381   */\n  dup5\n    /* \"#utility.yul\":6368:6372   */\n  dup5\n    /* \"#utility.yul\":6362:6373   */\n  sload\n    /* \"#utility.yul\":6334:6425   */\n  tag_85\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6328:6332   */\n  dup3\n    /* \"#utility.yul\":6321:6426   */\n  sstore\n    /* \"#utility.yul\":6239:6432   */\n  pop\n    /* \"#utility.yul\":6163:6432   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6438:6511   */\ntag_90:\n    /* \"#utility.yul\":6483:6486   */\n  0x00\n    /* \"#utility.yul\":6438:6511   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6517:6706   */\ntag_91:\n    /* \"#utility.yul\":6594:6626   */\n  tag_178\n  tag_90\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6635:6700   */\n  tag_179\n    /* \"#utility.yul\":6693:6699   */\n  dup2\n    /* \"#utility.yul\":6685:6691   */\n  dup5\n    /* \"#utility.yul\":6679:6683   */\n  dup5\n    /* \"#utility.yul\":6635:6700   */\n  tag_89\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":6570:6706   */\n  pop\n    /* \"#utility.yul\":6517:6706   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6712:6898   */\ntag_92:\n    /* \"#utility.yul\":6772:6892   */\ntag_181:\n    /* \"#utility.yul\":6789:6792   */\n  dup2\n    /* \"#utility.yul\":6782:6787   */\n  dup2\n    /* \"#utility.yul\":6779:6793   */\n  lt\n    /* \"#utility.yul\":6772:6892   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":6843:6882   */\n  tag_184\n    /* \"#utility.yul\":6880:6881   */\n  0x00\n    /* \"#utility.yul\":6873:6878   */\n  dup3\n    /* \"#utility.yul\":6843:6882   */\n  tag_91\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":6816:6817   */\n  0x01\n    /* \"#utility.yul\":6809:6814   */\n  dup2\n    /* \"#utility.yul\":6805:6818   */\n  add\n    /* \"#utility.yul\":6796:6818   */\n  swap1\n  pop\n    /* \"#utility.yul\":6772:6892   */\n  jump(tag_181)\ntag_183:\n    /* \"#utility.yul\":6712:6898   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6904:7447   */\ntag_93:\n    /* \"#utility.yul\":7005:7007   */\n  0x1f\n    /* \"#utility.yul\":7000:7003   */\n  dup3\n    /* \"#utility.yul\":6997:7008   */\n  gt\n    /* \"#utility.yul\":6994:7440   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":7039:7077   */\n  tag_187\n    /* \"#utility.yul\":7071:7076   */\n  dup2\n    /* \"#utility.yul\":7039:7077   */\n  tag_82\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7123:7152   */\n  tag_188\n    /* \"#utility.yul\":7141:7151   */\n  dup5\n    /* \"#utility.yul\":7123:7152   */\n  tag_83\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7113:7121   */\n  dup2\n    /* \"#utility.yul\":7109:7153   */\n  add\n    /* \"#utility.yul\":7306:7308   */\n  0x20\n    /* \"#utility.yul\":7294:7304   */\n  dup6\n    /* \"#utility.yul\":7291:7309   */\n  lt\n    /* \"#utility.yul\":7288:7337   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":7327:7335   */\n  dup2\n    /* \"#utility.yul\":7312:7335   */\n  swap1\n  pop\n    /* \"#utility.yul\":7288:7337   */\ntag_189:\n    /* \"#utility.yul\":7350:7430   */\n  tag_190\n    /* \"#utility.yul\":7406:7428   */\n  tag_191\n    /* \"#utility.yul\":7424:7427   */\n  dup6\n    /* \"#utility.yul\":7406:7428   */\n  tag_83\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":7396:7404   */\n  dup4\n    /* \"#utility.yul\":7392:7429   */\n  add\n    /* \"#utility.yul\":7379:7390   */\n  dup3\n    /* \"#utility.yul\":7350:7430   */\n  tag_92\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7009:7440   */\n  pop\n  pop\n    /* \"#utility.yul\":6994:7440   */\ntag_186:\n    /* \"#utility.yul\":6904:7447   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7453:7570   */\ntag_94:\n    /* \"#utility.yul\":7507:7515   */\n  0x00\n    /* \"#utility.yul\":7557:7562   */\n  dup3\n    /* \"#utility.yul\":7551:7555   */\n  dup3\n    /* \"#utility.yul\":7547:7563   */\n  shr\n    /* \"#utility.yul\":7526:7563   */\n  swap1\n  pop\n    /* \"#utility.yul\":7453:7570   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7576:7745   */\ntag_95:\n    /* \"#utility.yul\":7620:7626   */\n  0x00\n    /* \"#utility.yul\":7653:7704   */\n  tag_194\n    /* \"#utility.yul\":7701:7702   */\n  0x00\n    /* \"#utility.yul\":7697:7703   */\n  not\n    /* \"#utility.yul\":7689:7694   */\n  dup5\n    /* \"#utility.yul\":7686:7687   */\n  0x08\n    /* \"#utility.yul\":7682:7695   */\n  mul\n    /* \"#utility.yul\":7653:7704   */\n  tag_94\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7649:7705   */\n  not\n    /* \"#utility.yul\":7734:7738   */\n  dup1\n    /* \"#utility.yul\":7728:7732   */\n  dup4\n    /* \"#utility.yul\":7724:7739   */\n  and\n    /* \"#utility.yul\":7714:7739   */\n  swap2\n  pop\n    /* \"#utility.yul\":7627:7745   */\n  pop\n    /* \"#utility.yul\":7576:7745   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7750:8045   */\ntag_96:\n    /* \"#utility.yul\":7826:7830   */\n  0x00\n    /* \"#utility.yul\":7972:8001   */\n  tag_196\n    /* \"#utility.yul\":7997:8000   */\n  dup4\n    /* \"#utility.yul\":7991:7995   */\n  dup4\n    /* \"#utility.yul\":7972:8001   */\n  tag_95\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7964:8001   */\n  swap2\n  pop\n    /* \"#utility.yul\":8034:8037   */\n  dup3\n    /* \"#utility.yul\":8031:8032   */\n  0x02\n    /* \"#utility.yul\":8027:8038   */\n  mul\n    /* \"#utility.yul\":8021:8025   */\n  dup3\n    /* \"#utility.yul\":8018:8039   */\n  or\n    /* \"#utility.yul\":8010:8039   */\n  swap1\n  pop\n    /* \"#utility.yul\":7750:8045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8050:9445   */\ntag_16:\n    /* \"#utility.yul\":8167:8204   */\n  tag_198\n    /* \"#utility.yul\":8200:8203   */\n  dup3\n    /* \"#utility.yul\":8167:8204   */\n  tag_78\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8269:8287   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8261:8267   */\n  dup2\n    /* \"#utility.yul\":8258:8288   */\n  gt\n    /* \"#utility.yul\":8255:8311   */\n  iszero\n  tag_199\n  jumpi\n    /* \"#utility.yul\":8291:8309   */\n  tag_200\n  tag_79\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8255:8311   */\ntag_199:\n    /* \"#utility.yul\":8335:8373   */\n  tag_201\n    /* \"#utility.yul\":8367:8371   */\n  dup3\n    /* \"#utility.yul\":8361:8372   */\n  sload\n    /* \"#utility.yul\":8335:8373   */\n  tag_81\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":8420:8487   */\n  tag_202\n    /* \"#utility.yul\":8480:8486   */\n  dup3\n    /* \"#utility.yul\":8472:8478   */\n  dup3\n    /* \"#utility.yul\":8466:8470   */\n  dup6\n    /* \"#utility.yul\":8420:8487   */\n  tag_93\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8514:8515   */\n  0x00\n    /* \"#utility.yul\":8538:8542   */\n  0x20\n    /* \"#utility.yul\":8525:8542   */\n  swap1\n  pop\n    /* \"#utility.yul\":8570:8572   */\n  0x1f\n    /* \"#utility.yul\":8562:8568   */\n  dup4\n    /* \"#utility.yul\":8559:8573   */\n  gt\n    /* \"#utility.yul\":8587:8588   */\n  0x01\n    /* \"#utility.yul\":8582:9200   */\n  dup2\n  eq\n  tag_204\n  jumpi\n    /* \"#utility.yul\":9244:9245   */\n  0x00\n    /* \"#utility.yul\":9261:9267   */\n  dup5\n    /* \"#utility.yul\":9258:9335   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":9310:9319   */\n  dup3\n    /* \"#utility.yul\":9305:9308   */\n  dup8\n    /* \"#utility.yul\":9301:9320   */\n  add\n    /* \"#utility.yul\":9295:9321   */\n  mload\n    /* \"#utility.yul\":9286:9321   */\n  swap1\n  pop\n    /* \"#utility.yul\":9258:9335   */\ntag_205:\n    /* \"#utility.yul\":9361:9428   */\n  tag_206\n    /* \"#utility.yul\":9421:9427   */\n  dup6\n    /* \"#utility.yul\":9414:9419   */\n  dup3\n    /* \"#utility.yul\":9361:9428   */\n  tag_96\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":9355:9359   */\n  dup7\n    /* \"#utility.yul\":9348:9429   */\n  sstore\n    /* \"#utility.yul\":9217:9439   */\n  pop\n    /* \"#utility.yul\":8552:9439   */\n  jump(tag_203)\n    /* \"#utility.yul\":8582:9200   */\ntag_204:\n    /* \"#utility.yul\":8634:8638   */\n  0x1f\n    /* \"#utility.yul\":8630:8639   */\n  not\n    /* \"#utility.yul\":8622:8628   */\n  dup5\n    /* \"#utility.yul\":8618:8640   */\n  and\n    /* \"#utility.yul\":8668:8705   */\n  tag_207\n    /* \"#utility.yul\":8700:8704   */\n  dup7\n    /* \"#utility.yul\":8668:8705   */\n  tag_82\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":8727:8728   */\n  0x00\n    /* \"#utility.yul\":8741:8949   */\ntag_208:\n    /* \"#utility.yul\":8755:8762   */\n  dup3\n    /* \"#utility.yul\":8752:8753   */\n  dup2\n    /* \"#utility.yul\":8749:8763   */\n  lt\n    /* \"#utility.yul\":8741:8949   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":8834:8843   */\n  dup5\n    /* \"#utility.yul\":8829:8832   */\n  dup10\n    /* \"#utility.yul\":8825:8844   */\n  add\n    /* \"#utility.yul\":8819:8845   */\n  mload\n    /* \"#utility.yul\":8811:8817   */\n  dup3\n    /* \"#utility.yul\":8804:8846   */\n  sstore\n    /* \"#utility.yul\":8885:8886   */\n  0x01\n    /* \"#utility.yul\":8877:8883   */\n  dup3\n    /* \"#utility.yul\":8873:8887   */\n  add\n    /* \"#utility.yul\":8863:8887   */\n  swap2\n  pop\n    /* \"#utility.yul\":8932:8934   */\n  0x20\n    /* \"#utility.yul\":8921:8930   */\n  dup6\n    /* \"#utility.yul\":8917:8935   */\n  add\n    /* \"#utility.yul\":8904:8935   */\n  swap5\n  pop\n    /* \"#utility.yul\":8778:8782   */\n  0x20\n    /* \"#utility.yul\":8775:8776   */\n  dup2\n    /* \"#utility.yul\":8771:8783   */\n  add\n    /* \"#utility.yul\":8766:8783   */\n  swap1\n  pop\n    /* \"#utility.yul\":8741:8949   */\n  jump(tag_208)\ntag_210:\n    /* \"#utility.yul\":8977:8983   */\n  dup7\n    /* \"#utility.yul\":8968:8975   */\n  dup4\n    /* \"#utility.yul\":8965:8984   */\n  lt\n    /* \"#utility.yul\":8962:9141   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":9035:9044   */\n  dup5\n    /* \"#utility.yul\":9030:9033   */\n  dup10\n    /* \"#utility.yul\":9026:9045   */\n  add\n    /* \"#utility.yul\":9020:9046   */\n  mload\n    /* \"#utility.yul\":9078:9126   */\n  tag_212\n    /* \"#utility.yul\":9120:9124   */\n  0x1f\n    /* \"#utility.yul\":9112:9118   */\n  dup10\n    /* \"#utility.yul\":9108:9125   */\n  and\n    /* \"#utility.yul\":9097:9106   */\n  dup3\n    /* \"#utility.yul\":9078:9126   */\n  tag_95\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9070:9076   */\n  dup4\n    /* \"#utility.yul\":9063:9127   */\n  sstore\n    /* \"#utility.yul\":8985:9141   */\n  pop\n    /* \"#utility.yul\":8962:9141   */\ntag_211:\n    /* \"#utility.yul\":9187:9188   */\n  0x01\n    /* \"#utility.yul\":9183:9184   */\n  0x02\n    /* \"#utility.yul\":9175:9181   */\n  dup9\n    /* \"#utility.yul\":9171:9185   */\n  mul\n    /* \"#utility.yul\":9167:9189   */\n  add\n    /* \"#utility.yul\":9161:9165   */\n  dup9\n    /* \"#utility.yul\":9154:9190   */\n  sstore\n    /* \"#utility.yul\":8589:9200   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8552:9439   */\ntag_203:\n  pop\n    /* \"#utility.yul\":8142:9445   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8050:9445   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9451:9569   */\ntag_97:\n    /* \"#utility.yul\":9538:9562   */\n  tag_214\n    /* \"#utility.yul\":9556:9561   */\n  dup2\n    /* \"#utility.yul\":9538:9562   */\n  tag_75\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9533:9536   */\n  dup3\n    /* \"#utility.yul\":9526:9563   */\n  mstore\n    /* \"#utility.yul\":9451:9569   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9575:9797   */\ntag_22:\n    /* \"#utility.yul\":9668:9672   */\n  0x00\n    /* \"#utility.yul\":9706:9708   */\n  0x20\n    /* \"#utility.yul\":9695:9704   */\n  dup3\n    /* \"#utility.yul\":9691:9709   */\n  add\n    /* \"#utility.yul\":9683:9709   */\n  swap1\n  pop\n    /* \"#utility.yul\":9719:9790   */\n  tag_216\n    /* \"#utility.yul\":9787:9788   */\n  0x00\n    /* \"#utility.yul\":9776:9785   */\n  dup4\n    /* \"#utility.yul\":9772:9789   */\n  add\n    /* \"#utility.yul\":9763:9769   */\n  dup5\n    /* \"#utility.yul\":9719:9790   */\n  tag_97\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9575:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_55:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_218\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_69\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_219\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_69\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_220\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_221\n  tag_65\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":9951:9987   */\ntag_220:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_98:\n    /* \"#utility.yul\":10087:10111   */\n  tag_223\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_69\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_59:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_225\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_97\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":10405:10477   */\n  tag_226\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_98\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10487:10559   */\n  tag_227\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_98\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_63:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_229\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_98\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/GeekToken/GeekToken.sol\":363:2829  contract GeekToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable {... */\ntag_31:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GeekToken/GeekToken.sol\":363:2829  contract GeekToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x48659097\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeekToken/GeekToken.sol\":789:852  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/GeekToken/GeekToken.sol\":858:1020  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/GeekToken/GeekToken.sol\":2526:2827  function transferTokens(address to, uint256 cargoInsurableValue, Types.Acceptance acceptance) external {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/GeekToken/GeekToken.sol\":724:783  function pause() public onlyOwner {... */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GeekToken/GeekToken.sol\":789:852  function unpause() public onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/GeekToken/GeekToken.sol\":835:845  _unpause() */\n      tag_119\n        /* \"contracts/GeekToken/GeekToken.sol\":835:843  _unpause */\n      tag_120\n        /* \"contracts/GeekToken/GeekToken.sol\":835:845  _unpause() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/GeekToken/GeekToken.sol\":789:852  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GeekToken/GeekToken.sol\":858:1020  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/GeekToken/GeekToken.sol\":961:970  maxSupply */\n      sload(0x06)\n        /* \"contracts/GeekToken/GeekToken.sol\":951:957  amount */\n      dup2\n        /* \"contracts/GeekToken/GeekToken.sol\":935:948  totalSupply() */\n      tag_124\n        /* \"contracts/GeekToken/GeekToken.sol\":935:946  totalSupply */\n      tag_36\n        /* \"contracts/GeekToken/GeekToken.sol\":935:948  totalSupply() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/GeekToken/GeekToken.sol\":935:957  totalSupply() + amount */\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"contracts/GeekToken/GeekToken.sol\":935:970  totalSupply() + amount <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/GeekToken/GeekToken.sol\":927:986  require(totalSupply() + amount <= maxSupply, \"We sold out\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/GeekToken/GeekToken.sol\":996:1013  _mint(to, amount) */\n      tag_130\n        /* \"contracts/GeekToken/GeekToken.sol\":1002:1004  to */\n      dup3\n        /* \"contracts/GeekToken/GeekToken.sol\":1006:1012  amount */\n      dup3\n        /* \"contracts/GeekToken/GeekToken.sol\":996:1001  _mint */\n      tag_131\n        /* \"contracts/GeekToken/GeekToken.sol\":996:1013  _mint(to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/GeekToken/GeekToken.sol\":858:1020  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/GeekToken/GeekToken.sol\":2526:2827  function transferTokens(address to, uint256 cargoInsurableValue, Types.Acceptance acceptance) external {... */\n    tag_60:\n        /* \"contracts/GeekToken/GeekToken.sol\":2639:2661  uint256 tokensToReward */\n      0x00\n        /* \"contracts/GeekToken/GeekToken.sol\":2664:2708  tokenReward(cargoInsurableValue, acceptance) */\n      tag_137\n        /* \"contracts/GeekToken/GeekToken.sol\":2676:2695  cargoInsurableValue */\n      dup4\n        /* \"contracts/GeekToken/GeekToken.sol\":2697:2707  acceptance */\n      dup4\n        /* \"contracts/GeekToken/GeekToken.sol\":2664:2675  tokenReward */\n      tag_138\n        /* \"contracts/GeekToken/GeekToken.sol\":2664:2708  tokenReward(cargoInsurableValue, acceptance) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/GeekToken/GeekToken.sol\":2639:2708  uint256 tokensToReward = tokenReward(cargoInsurableValue, acceptance) */\n      swap1\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":2718:2746  transfer(to, tokensToReward) */\n      tag_139\n        /* \"contracts/GeekToken/GeekToken.sol\":2727:2729  to */\n      dup5\n        /* \"contracts/GeekToken/GeekToken.sol\":2731:2745  tokensToReward */\n      dup3\n        /* \"contracts/GeekToken/GeekToken.sol\":2718:2726  transfer */\n      tag_85\n        /* \"contracts/GeekToken/GeekToken.sol\":2718:2746  transfer(to, tokensToReward) */\n      jump\t// in\n    tag_139:\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":2762:2820  Events.TransferedTokens(address(this), to, tokensToReward) */\n      0xfb5428f39f62fa9aa68d6c0db25fff3552d2958850e862561354749ea2bbef3d\n        /* \"contracts/GeekToken/GeekToken.sol\":2794:2798  this */\n      address\n        /* \"contracts/GeekToken/GeekToken.sol\":2801:2803  to */\n      dup6\n        /* \"contracts/GeekToken/GeekToken.sol\":2805:2819  tokensToReward */\n      dup4\n        /* \"contracts/GeekToken/GeekToken.sol\":2762:2820  Events.TransferedTokens(address(this), to, tokensToReward) */\n      mload(0x40)\n      tag_140\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GeekToken/GeekToken.sol\":2629:2827  {... */\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":2526:2827  function transferTokens(address to, uint256 cargoInsurableValue, Types.Acceptance acceptance) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeekToken/GeekToken.sol\":724:783  function pause() public onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/GeekToken/GeekToken.sol\":768:776  _pause() */\n      tag_156\n        /* \"contracts/GeekToken/GeekToken.sol\":768:774  _pause */\n      tag_157\n        /* \"contracts/GeekToken/GeekToken.sol\":768:776  _pause() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/GeekToken/GeekToken.sol\":724:783  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_97\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_97\n      jump\t// in\n    tag_161:\n      dup1\n      iszero\n      tag_162\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_163\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_162)\n    tag_163:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_164:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_164\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_201\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeekToken/GeekToken.sol\":1265:2520  function tokenReward(uint256 cargoInsuredValue, Types.Acceptance acceptance) internal view returns (uint256) {... */\n    tag_138:\n        /* \"contracts/GeekToken/GeekToken.sol\":1365:1372  uint256 */\n      0x00\n        /* \"contracts/GeekToken/GeekToken.sol\":1384:1399  uint256 _reward */\n      dup1\n        /* \"contracts/GeekToken/GeekToken.sol\":1402:1403  0 */\n      0x00\n        /* \"contracts/GeekToken/GeekToken.sol\":1384:1403  uint256 _reward = 0 */\n      swap1\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1413:1433  uint256 _totalSupply */\n      0x00\n        /* \"contracts/GeekToken/GeekToken.sol\":1436:1449  totalSupply() */\n      tag_214\n        /* \"contracts/GeekToken/GeekToken.sol\":1436:1447  totalSupply */\n      tag_36\n        /* \"contracts/GeekToken/GeekToken.sol\":1436:1449  totalSupply() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/GeekToken/GeekToken.sol\":1413:1449  uint256 _totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1496:1499  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":1491:1493  25 */\n      0x19\n        /* \"contracts/GeekToken/GeekToken.sol\":1479:1488  maxSupply */\n      sload(0x06)\n        /* \"contracts/GeekToken/GeekToken.sol\":1479:1493  maxSupply * 25 */\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"contracts/GeekToken/GeekToken.sol\":1479:1499  maxSupply * 25 / 100 */\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"contracts/GeekToken/GeekToken.sol\":1462:1474  _totalSupply */\n      dup2\n        /* \"contracts/GeekToken/GeekToken.sol\":1462:1500  _totalSupply >= (maxSupply * 25 / 100) */\n      lt\n      iszero\n        /* \"contracts/GeekToken/GeekToken.sol\":1462:1541  _totalSupply >= (maxSupply * 25 / 100) && _totalSupply < (maxSupply * 50 / 100) */\n      dup1\n      iszero\n      tag_219\n      jumpi\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1537:1540  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":1532:1534  50 */\n      0x32\n        /* \"contracts/GeekToken/GeekToken.sol\":1520:1529  maxSupply */\n      sload(0x06)\n        /* \"contracts/GeekToken/GeekToken.sol\":1520:1534  maxSupply * 50 */\n      tag_220\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_220:\n        /* \"contracts/GeekToken/GeekToken.sol\":1520:1540  maxSupply * 50 / 100 */\n      tag_221\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_221:\n        /* \"contracts/GeekToken/GeekToken.sol\":1504:1516  _totalSupply */\n      dup2\n        /* \"contracts/GeekToken/GeekToken.sol\":1504:1541  _totalSupply < (maxSupply * 50 / 100) */\n      lt\n        /* \"contracts/GeekToken/GeekToken.sol\":1462:1541  _totalSupply >= (maxSupply * 25 / 100) && _totalSupply < (maxSupply * 50 / 100) */\n    tag_219:\n        /* \"contracts/GeekToken/GeekToken.sol\":1459:2489  if(_totalSupply >= (maxSupply * 25 / 100) && _totalSupply < (maxSupply * 50 / 100)) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/GeekToken/GeekToken.sol\":1574:1602  Types.Acceptance.CONDITIONAL */\n      0x00\n        /* \"contracts/GeekToken/GeekToken.sol\":1560:1602  acceptance == Types.Acceptance.CONDITIONAL */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      tag_224\n      tag_225\n      jump\t// in\n    tag_224:\n    tag_223:\n        /* \"contracts/GeekToken/GeekToken.sol\":1560:1570  acceptance */\n      dup5\n        /* \"contracts/GeekToken/GeekToken.sol\":1560:1602  acceptance == Types.Acceptance.CONDITIONAL */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_226\n      jumpi\n      tag_227\n      tag_225\n      jump\t// in\n    tag_227:\n    tag_226:\n      sub\n        /* \"contracts/GeekToken/GeekToken.sol\":1557:1771  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n      tag_228\n      jumpi\n        /* \"contracts/GeekToken/GeekToken.sol\":1675:1678  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":1661:1671  decimals() */\n      tag_229\n        /* \"contracts/GeekToken/GeekToken.sol\":1661:1669  decimals */\n      tag_45\n        /* \"contracts/GeekToken/GeekToken.sol\":1661:1671  decimals() */\n      jump\t// in\n    tag_229:\n        /* \"contracts/GeekToken/GeekToken.sol\":1655:1657  10 */\n      0x0a\n        /* \"contracts/GeekToken/GeekToken.sol\":1655:1671  10 ** decimals() */\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"contracts/GeekToken/GeekToken.sol\":1634:1651  cargoInsuredValue */\n      dup7\n        /* \"contracts/GeekToken/GeekToken.sol\":1630:1631  2 */\n      0x02\n        /* \"contracts/GeekToken/GeekToken.sol\":1630:1651  2 * cargoInsuredValue */\n      tag_232\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_232:\n        /* \"contracts/GeekToken/GeekToken.sol\":1630:1672  2 * cargoInsuredValue * (10 ** decimals()) */\n      tag_233\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_233:\n        /* \"contracts/GeekToken/GeekToken.sol\":1630:1678  2 * cargoInsuredValue * (10 ** decimals()) / 100 */\n      tag_234\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_234:\n        /* \"contracts/GeekToken/GeekToken.sol\":1620:1678  _reward = 2 * cargoInsuredValue * (10 ** decimals()) / 100 */\n      swap2\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1557:1771  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n      jump(tag_235)\n    tag_228:\n        /* \"contracts/GeekToken/GeekToken.sol\":1768:1771  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":1754:1764  decimals() */\n      tag_236\n        /* \"contracts/GeekToken/GeekToken.sol\":1754:1762  decimals */\n      tag_45\n        /* \"contracts/GeekToken/GeekToken.sol\":1754:1764  decimals() */\n      jump\t// in\n    tag_236:\n        /* \"contracts/GeekToken/GeekToken.sol\":1748:1750  10 */\n      0x0a\n        /* \"contracts/GeekToken/GeekToken.sol\":1748:1764  10 ** decimals() */\n      tag_237\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_237:\n        /* \"contracts/GeekToken/GeekToken.sol\":1727:1744  cargoInsuredValue */\n      dup7\n        /* \"contracts/GeekToken/GeekToken.sol\":1723:1724  1 */\n      0x01\n        /* \"contracts/GeekToken/GeekToken.sol\":1723:1744  1 * cargoInsuredValue */\n      tag_238\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_238:\n        /* \"contracts/GeekToken/GeekToken.sol\":1723:1765  1 * cargoInsuredValue * (10 ** decimals()) */\n      tag_239\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_239:\n        /* \"contracts/GeekToken/GeekToken.sol\":1723:1771  1 * cargoInsuredValue * (10 ** decimals()) / 100 */\n      tag_240\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_240:\n        /* \"contracts/GeekToken/GeekToken.sol\":1713:1771  _reward = 1 * cargoInsuredValue * (10 ** decimals()) / 100 */\n      swap2\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1557:1771  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n    tag_235:\n        /* \"contracts/GeekToken/GeekToken.sol\":1459:2489  if(_totalSupply >= (maxSupply * 25 / 100) && _totalSupply < (maxSupply * 50 / 100)) {... */\n      jump(tag_241)\n    tag_222:\n        /* \"contracts/GeekToken/GeekToken.sol\":1825:1828  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":1820:1822  50 */\n      0x32\n        /* \"contracts/GeekToken/GeekToken.sol\":1808:1817  maxSupply */\n      sload(0x06)\n        /* \"contracts/GeekToken/GeekToken.sol\":1808:1822  maxSupply * 50 */\n      tag_242\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_242:\n        /* \"contracts/GeekToken/GeekToken.sol\":1808:1828  maxSupply * 50 / 100 */\n      tag_243\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_243:\n        /* \"contracts/GeekToken/GeekToken.sol\":1791:1803  _totalSupply */\n      dup2\n        /* \"contracts/GeekToken/GeekToken.sol\":1791:1829  _totalSupply >= (maxSupply * 50 / 100) */\n      lt\n      iszero\n        /* \"contracts/GeekToken/GeekToken.sol\":1791:1870  _totalSupply >= (maxSupply * 50 / 100) && _totalSupply < (maxSupply * 75 / 100) */\n      dup1\n      iszero\n      tag_244\n      jumpi\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1866:1869  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":1861:1863  75 */\n      0x4b\n        /* \"contracts/GeekToken/GeekToken.sol\":1849:1858  maxSupply */\n      sload(0x06)\n        /* \"contracts/GeekToken/GeekToken.sol\":1849:1863  maxSupply * 75 */\n      tag_245\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_245:\n        /* \"contracts/GeekToken/GeekToken.sol\":1849:1869  maxSupply * 75 / 100 */\n      tag_246\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_246:\n        /* \"contracts/GeekToken/GeekToken.sol\":1833:1845  _totalSupply */\n      dup2\n        /* \"contracts/GeekToken/GeekToken.sol\":1833:1870  _totalSupply < (maxSupply * 75 / 100) */\n      lt\n        /* \"contracts/GeekToken/GeekToken.sol\":1791:1870  _totalSupply >= (maxSupply * 50 / 100) && _totalSupply < (maxSupply * 75 / 100) */\n    tag_244:\n        /* \"contracts/GeekToken/GeekToken.sol\":1788:2489  if(_totalSupply >= (maxSupply * 50 / 100) && _totalSupply < (maxSupply * 75 / 100)) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/GeekToken/GeekToken.sol\":1904:1932  Types.Acceptance.CONDITIONAL */\n      0x00\n        /* \"contracts/GeekToken/GeekToken.sol\":1890:1932  acceptance == Types.Acceptance.CONDITIONAL */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_248\n      jumpi\n      tag_249\n      tag_225\n      jump\t// in\n    tag_249:\n    tag_248:\n        /* \"contracts/GeekToken/GeekToken.sol\":1890:1900  acceptance */\n      dup5\n        /* \"contracts/GeekToken/GeekToken.sol\":1890:1932  acceptance == Types.Acceptance.CONDITIONAL */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_250\n      jumpi\n      tag_251\n      tag_225\n      jump\t// in\n    tag_251:\n    tag_250:\n      sub\n        /* \"contracts/GeekToken/GeekToken.sol\":1887:2102  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n      tag_252\n      jumpi\n        /* \"contracts/GeekToken/GeekToken.sol\":2005:2008  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":1991:2001  decimals() */\n      tag_253\n        /* \"contracts/GeekToken/GeekToken.sol\":1991:1999  decimals */\n      tag_45\n        /* \"contracts/GeekToken/GeekToken.sol\":1991:2001  decimals() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/GeekToken/GeekToken.sol\":1985:1987  10 */\n      0x0a\n        /* \"contracts/GeekToken/GeekToken.sol\":1985:2001  10 ** decimals() */\n      tag_254\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_254:\n        /* \"contracts/GeekToken/GeekToken.sol\":1964:1981  cargoInsuredValue */\n      dup7\n        /* \"contracts/GeekToken/GeekToken.sol\":1960:1961  1 */\n      0x01\n        /* \"contracts/GeekToken/GeekToken.sol\":1960:1981  1 * cargoInsuredValue */\n      tag_255\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_255:\n        /* \"contracts/GeekToken/GeekToken.sol\":1960:2002  1 * cargoInsuredValue * (10 ** decimals()) */\n      tag_256\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_256:\n        /* \"contracts/GeekToken/GeekToken.sol\":1960:2008  1 * cargoInsuredValue * (10 ** decimals()) / 100 */\n      tag_257\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_257:\n        /* \"contracts/GeekToken/GeekToken.sol\":1950:2008  _reward = 1 * cargoInsuredValue * (10 ** decimals()) / 100 */\n      swap2\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1887:2102  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n      jump(tag_258)\n    tag_252:\n        /* \"contracts/GeekToken/GeekToken.sol\":2098:2102  1000 */\n      0x03e8\n        /* \"contracts/GeekToken/GeekToken.sol\":2084:2094  decimals() */\n      tag_259\n        /* \"contracts/GeekToken/GeekToken.sol\":2084:2092  decimals */\n      tag_45\n        /* \"contracts/GeekToken/GeekToken.sol\":2084:2094  decimals() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/GeekToken/GeekToken.sol\":2078:2080  10 */\n      0x0a\n        /* \"contracts/GeekToken/GeekToken.sol\":2078:2094  10 ** decimals() */\n      tag_260\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_260:\n        /* \"contracts/GeekToken/GeekToken.sol\":2057:2074  cargoInsuredValue */\n      dup7\n        /* \"contracts/GeekToken/GeekToken.sol\":2053:2054  5 */\n      0x05\n        /* \"contracts/GeekToken/GeekToken.sol\":2053:2074  5 * cargoInsuredValue */\n      tag_261\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_261:\n        /* \"contracts/GeekToken/GeekToken.sol\":2053:2095  5 * cargoInsuredValue * (10 ** decimals()) */\n      tag_262\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_262:\n        /* \"contracts/GeekToken/GeekToken.sol\":2053:2102  5 * cargoInsuredValue * (10 ** decimals()) / 1000 */\n      tag_263\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_263:\n        /* \"contracts/GeekToken/GeekToken.sol\":2043:2102  _reward = 5 * cargoInsuredValue * (10 ** decimals()) / 1000 */\n      swap2\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1887:2102  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n    tag_258:\n        /* \"contracts/GeekToken/GeekToken.sol\":1788:2489  if(_totalSupply >= (maxSupply * 50 / 100) && _totalSupply < (maxSupply * 75 / 100)) {... */\n      jump(tag_264)\n    tag_247:\n        /* \"contracts/GeekToken/GeekToken.sol\":2156:2159  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":2151:2153  75 */\n      0x4b\n        /* \"contracts/GeekToken/GeekToken.sol\":2139:2148  maxSupply */\n      sload(0x06)\n        /* \"contracts/GeekToken/GeekToken.sol\":2139:2153  maxSupply * 75 */\n      tag_265\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_265:\n        /* \"contracts/GeekToken/GeekToken.sol\":2139:2159  maxSupply * 75 / 100 */\n      tag_266\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_266:\n        /* \"contracts/GeekToken/GeekToken.sol\":2122:2134  _totalSupply */\n      dup2\n        /* \"contracts/GeekToken/GeekToken.sol\":2122:2160  _totalSupply >= (maxSupply * 75 / 100) */\n      lt\n      iszero\n        /* \"contracts/GeekToken/GeekToken.sol\":2122:2201  _totalSupply >= (maxSupply * 75 / 100) && _totalSupply < (maxSupply * 95 / 100) */\n      dup1\n      iszero\n      tag_267\n      jumpi\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":2197:2200  100 */\n      0x64\n        /* \"contracts/GeekToken/GeekToken.sol\":2192:2194  95 */\n      0x5f\n        /* \"contracts/GeekToken/GeekToken.sol\":2180:2189  maxSupply */\n      sload(0x06)\n        /* \"contracts/GeekToken/GeekToken.sol\":2180:2194  maxSupply * 95 */\n      tag_268\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_268:\n        /* \"contracts/GeekToken/GeekToken.sol\":2180:2200  maxSupply * 95 / 100 */\n      tag_269\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_269:\n        /* \"contracts/GeekToken/GeekToken.sol\":2164:2176  _totalSupply */\n      dup2\n        /* \"contracts/GeekToken/GeekToken.sol\":2164:2201  _totalSupply < (maxSupply * 95 / 100) */\n      lt\n        /* \"contracts/GeekToken/GeekToken.sol\":2122:2201  _totalSupply >= (maxSupply * 75 / 100) && _totalSupply < (maxSupply * 95 / 100) */\n    tag_267:\n        /* \"contracts/GeekToken/GeekToken.sol\":2119:2489  if(_totalSupply >= (maxSupply * 75 / 100) && _totalSupply < (maxSupply * 95 / 100)) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/GeekToken/GeekToken.sol\":2235:2263  Types.Acceptance.CONDITIONAL */\n      0x00\n        /* \"contracts/GeekToken/GeekToken.sol\":2221:2263  acceptance == Types.Acceptance.CONDITIONAL */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_271\n      jumpi\n      tag_272\n      tag_225\n      jump\t// in\n    tag_272:\n    tag_271:\n        /* \"contracts/GeekToken/GeekToken.sol\":2221:2231  acceptance */\n      dup5\n        /* \"contracts/GeekToken/GeekToken.sol\":2221:2263  acceptance == Types.Acceptance.CONDITIONAL */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_273\n      jumpi\n      tag_274\n      tag_225\n      jump\t// in\n    tag_274:\n    tag_273:\n      sub\n        /* \"contracts/GeekToken/GeekToken.sol\":2218:2436  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n      tag_275\n      jumpi\n        /* \"contracts/GeekToken/GeekToken.sol\":2336:2340  1000 */\n      0x03e8\n        /* \"contracts/GeekToken/GeekToken.sol\":2322:2332  decimals() */\n      tag_276\n        /* \"contracts/GeekToken/GeekToken.sol\":2322:2330  decimals */\n      tag_45\n        /* \"contracts/GeekToken/GeekToken.sol\":2322:2332  decimals() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/GeekToken/GeekToken.sol\":2316:2318  10 */\n      0x0a\n        /* \"contracts/GeekToken/GeekToken.sol\":2316:2332  10 ** decimals() */\n      tag_277\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_277:\n        /* \"contracts/GeekToken/GeekToken.sol\":2295:2312  cargoInsuredValue */\n      dup7\n        /* \"contracts/GeekToken/GeekToken.sol\":2291:2292  5 */\n      0x05\n        /* \"contracts/GeekToken/GeekToken.sol\":2291:2312  5 * cargoInsuredValue */\n      tag_278\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_278:\n        /* \"contracts/GeekToken/GeekToken.sol\":2291:2333  5 * cargoInsuredValue * (10 ** decimals()) */\n      tag_279\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_279:\n        /* \"contracts/GeekToken/GeekToken.sol\":2291:2340  5 * cargoInsuredValue * (10 ** decimals()) / 1000 */\n      tag_280\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_280:\n        /* \"contracts/GeekToken/GeekToken.sol\":2281:2340  _reward = 5 * cargoInsuredValue * (10 ** decimals()) / 1000 */\n      swap2\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":2218:2436  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n      jump(tag_281)\n    tag_275:\n        /* \"contracts/GeekToken/GeekToken.sol\":2431:2436  10000 */\n      0x2710\n        /* \"contracts/GeekToken/GeekToken.sol\":2417:2427  decimals() */\n      tag_282\n        /* \"contracts/GeekToken/GeekToken.sol\":2417:2425  decimals */\n      tag_45\n        /* \"contracts/GeekToken/GeekToken.sol\":2417:2427  decimals() */\n      jump\t// in\n    tag_282:\n        /* \"contracts/GeekToken/GeekToken.sol\":2411:2413  10 */\n      0x0a\n        /* \"contracts/GeekToken/GeekToken.sol\":2411:2427  10 ** decimals() */\n      tag_283\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_283:\n        /* \"contracts/GeekToken/GeekToken.sol\":2390:2407  cargoInsuredValue */\n      dup7\n        /* \"contracts/GeekToken/GeekToken.sol\":2385:2387  25 */\n      0x19\n        /* \"contracts/GeekToken/GeekToken.sol\":2385:2407  25 * cargoInsuredValue */\n      tag_284\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_284:\n        /* \"contracts/GeekToken/GeekToken.sol\":2385:2428  25 * cargoInsuredValue * (10 ** decimals()) */\n      tag_285\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_285:\n        /* \"contracts/GeekToken/GeekToken.sol\":2385:2436  25 * cargoInsuredValue * (10 ** decimals()) / 10000 */\n      tag_286\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_286:\n        /* \"contracts/GeekToken/GeekToken.sol\":2375:2436  _reward = 25 * cargoInsuredValue * (10 ** decimals()) / 10000 */\n      swap2\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":2218:2436  if(acceptance == Types.Acceptance.CONDITIONAL)... */\n    tag_281:\n        /* \"contracts/GeekToken/GeekToken.sol\":2119:2489  if(_totalSupply >= (maxSupply * 75 / 100) && _totalSupply < (maxSupply * 95 / 100)) {... */\n      jump(tag_287)\n    tag_270:\n        /* \"contracts/GeekToken/GeekToken.sol\":2477:2478  0 */\n      0x00\n        /* \"contracts/GeekToken/GeekToken.sol\":2467:2478  _reward = 0 */\n      swap2\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":2119:2489  if(_totalSupply >= (maxSupply * 75 / 100) && _totalSupply < (maxSupply * 95 / 100)) {... */\n    tag_287:\n        /* \"contracts/GeekToken/GeekToken.sol\":1788:2489  if(_totalSupply >= (maxSupply * 50 / 100) && _totalSupply < (maxSupply * 75 / 100)) {... */\n    tag_264:\n        /* \"contracts/GeekToken/GeekToken.sol\":1459:2489  if(_totalSupply >= (maxSupply * 25 / 100) && _totalSupply < (maxSupply * 50 / 100)) {... */\n    tag_241:\n        /* \"contracts/GeekToken/GeekToken.sol\":2506:2513  _reward */\n      dup2\n        /* \"contracts/GeekToken/GeekToken.sol\":2499:2513  return _reward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/GeekToken/GeekToken.sol\":1265:2520  function tokenReward(uint256 cargoInsuredValue, Types.Acceptance acceptance) internal view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_293\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_104\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_294\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeekToken/GeekToken.sol\":1094:1259  function _update(address from, address to, uint256 value)... */\n    tag_192:\n        /* \"contracts/GeekToken/GeekToken.sol\":1222:1252  super._update(from, to, value) */\n      tag_303\n        /* \"contracts/GeekToken/GeekToken.sol\":1236:1240  from */\n      dup4\n        /* \"contracts/GeekToken/GeekToken.sol\":1242:1244  to */\n      dup4\n        /* \"contracts/GeekToken/GeekToken.sol\":1246:1251  value */\n      dup4\n        /* \"contracts/GeekToken/GeekToken.sol\":1222:1235  super._update */\n      tag_304\n        /* \"contracts/GeekToken/GeekToken.sol\":1222:1252  super._update(from, to, value) */\n      jump\t// in\n    tag_303:\n        /* \"contracts/GeekToken/GeekToken.sol\":1094:1259  function _update(address from, address to, uint256 value)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      tag_306\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2271  paused */\n      tag_62\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      tag_309\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2073  paused */\n      tag_62\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_312\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_291\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1234:1238  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1240:1242  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1244:1249  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1233  super._update */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1220:1250  super._update(from, to, value) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1112:1257  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_318\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_318:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_319)\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_323)\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_325:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_326:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_327:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_360:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_360)\n    tag_362:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_328:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_329:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_365\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_325\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":818:889   */\n      tag_366\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_326\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_367\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_327\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":988:1017   */\n      tag_368\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_328\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_28:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_370\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_329\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_331:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_333:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_334:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_376\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_333\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_335:\n        /* \"#utility.yul\":1983:2007   */\n      tag_378\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_334\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_379:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_336:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_381\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_335\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_337:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_338:\n        /* \"#utility.yul\":2339:2363   */\n      tag_384\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_337\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_385:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_339:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_387\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_338\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_31:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_390\n      tag_331\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":2632:2751   */\n    tag_389:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_391\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_336\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_392\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_339\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_340:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_341:\n        /* \"#utility.yul\":3196:3217   */\n      tag_395\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_340\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_34:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_397\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_341\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_342:\n        /* \"#utility.yul\":3533:3557   */\n      tag_399\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_337\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_38:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_401\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_342\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_41:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_404\n      tag_331\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3908:4027   */\n    tag_403:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_405\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_336\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_406\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_336\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_407\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_339\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_343:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_344:\n        /* \"#utility.yul\":4598:4620   */\n      tag_410\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_343\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_47:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_412\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_344\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_55:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_415\n      tag_331\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4929:5048   */\n    tag_414:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_416\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_339\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5302   */\n    tag_345:\n        /* \"#utility.yul\":5276:5277   */\n      0x02\n        /* \"#utility.yul\":5269:5274   */\n      dup2\n        /* \"#utility.yul\":5266:5278   */\n      lt\n        /* \"#utility.yul\":5256:5296   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":5292:5293   */\n      0x00\n        /* \"#utility.yul\":5289:5290   */\n      dup1\n        /* \"#utility.yul\":5282:5294   */\n      revert\n        /* \"#utility.yul\":5256:5296   */\n    tag_418:\n        /* \"#utility.yul\":5188:5302   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5308:5477   */\n    tag_346:\n        /* \"#utility.yul\":5369:5374   */\n      0x00\n        /* \"#utility.yul\":5407:5413   */\n      dup2\n        /* \"#utility.yul\":5394:5414   */\n      calldataload\n        /* \"#utility.yul\":5385:5414   */\n      swap1\n      pop\n        /* \"#utility.yul\":5423:5471   */\n      tag_420\n        /* \"#utility.yul\":5465:5470   */\n      dup2\n        /* \"#utility.yul\":5423:5471   */\n      tag_345\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5308:5477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5483:6132   */\n    tag_59:\n        /* \"#utility.yul\":5575:5581   */\n      0x00\n        /* \"#utility.yul\":5583:5589   */\n      dup1\n        /* \"#utility.yul\":5591:5597   */\n      0x00\n        /* \"#utility.yul\":5640:5642   */\n      0x60\n        /* \"#utility.yul\":5628:5637   */\n      dup5\n        /* \"#utility.yul\":5619:5626   */\n      dup7\n        /* \"#utility.yul\":5615:5638   */\n      sub\n        /* \"#utility.yul\":5611:5643   */\n      slt\n        /* \"#utility.yul\":5608:5727   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5646:5725   */\n      tag_423\n      tag_331\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5608:5727   */\n    tag_422:\n        /* \"#utility.yul\":5766:5767   */\n      0x00\n        /* \"#utility.yul\":5791:5844   */\n      tag_424\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_336\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5781:5844   */\n      swap4\n      pop\n        /* \"#utility.yul\":5737:5854   */\n      pop\n        /* \"#utility.yul\":5893:5895   */\n      0x20\n        /* \"#utility.yul\":5919:5972   */\n      tag_425\n        /* \"#utility.yul\":5964:5971   */\n      dup7\n        /* \"#utility.yul\":5955:5961   */\n      dup3\n        /* \"#utility.yul\":5944:5953   */\n      dup8\n        /* \"#utility.yul\":5940:5962   */\n      add\n        /* \"#utility.yul\":5919:5972   */\n      tag_339\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5909:5972   */\n      swap3\n      pop\n        /* \"#utility.yul\":5864:5982   */\n      pop\n        /* \"#utility.yul\":6021:6023   */\n      0x40\n        /* \"#utility.yul\":6047:6115   */\n      tag_426\n        /* \"#utility.yul\":6107:6114   */\n      dup7\n        /* \"#utility.yul\":6098:6104   */\n      dup3\n        /* \"#utility.yul\":6087:6096   */\n      dup8\n        /* \"#utility.yul\":6083:6105   */\n      add\n        /* \"#utility.yul\":6047:6115   */\n      tag_346\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6037:6115   */\n      swap2\n      pop\n        /* \"#utility.yul\":5992:6125   */\n      pop\n        /* \"#utility.yul\":5483:6132   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6138:6467   */\n    tag_66:\n        /* \"#utility.yul\":6197:6203   */\n      0x00\n        /* \"#utility.yul\":6246:6248   */\n      0x20\n        /* \"#utility.yul\":6234:6243   */\n      dup3\n        /* \"#utility.yul\":6225:6232   */\n      dup5\n        /* \"#utility.yul\":6221:6244   */\n      sub\n        /* \"#utility.yul\":6217:6249   */\n      slt\n        /* \"#utility.yul\":6214:6333   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":6252:6331   */\n      tag_429\n      tag_331\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6214:6333   */\n    tag_428:\n        /* \"#utility.yul\":6372:6373   */\n      0x00\n        /* \"#utility.yul\":6397:6450   */\n      tag_430\n        /* \"#utility.yul\":6442:6449   */\n      dup5\n        /* \"#utility.yul\":6433:6439   */\n      dup3\n        /* \"#utility.yul\":6422:6431   */\n      dup6\n        /* \"#utility.yul\":6418:6440   */\n      add\n        /* \"#utility.yul\":6397:6450   */\n      tag_336\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6387:6450   */\n      swap2\n      pop\n        /* \"#utility.yul\":6343:6460   */\n      pop\n        /* \"#utility.yul\":6138:6467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6473:6591   */\n    tag_347:\n        /* \"#utility.yul\":6560:6584   */\n      tag_432\n        /* \"#utility.yul\":6578:6583   */\n      dup2\n        /* \"#utility.yul\":6560:6584   */\n      tag_334\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6555:6558   */\n      dup3\n        /* \"#utility.yul\":6548:6585   */\n      mstore\n        /* \"#utility.yul\":6473:6591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6597:6819   */\n    tag_79:\n        /* \"#utility.yul\":6690:6694   */\n      0x00\n        /* \"#utility.yul\":6728:6730   */\n      0x20\n        /* \"#utility.yul\":6717:6726   */\n      dup3\n        /* \"#utility.yul\":6713:6731   */\n      add\n        /* \"#utility.yul\":6705:6731   */\n      swap1\n      pop\n        /* \"#utility.yul\":6741:6812   */\n      tag_434\n        /* \"#utility.yul\":6809:6810   */\n      0x00\n        /* \"#utility.yul\":6798:6807   */\n      dup4\n        /* \"#utility.yul\":6794:6811   */\n      add\n        /* \"#utility.yul\":6785:6791   */\n      dup5\n        /* \"#utility.yul\":6741:6812   */\n      tag_347\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6597:6819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6825:7299   */\n    tag_89:\n        /* \"#utility.yul\":6893:6899   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup1\n        /* \"#utility.yul\":6950:6952   */\n      0x40\n        /* \"#utility.yul\":6938:6947   */\n      dup4\n        /* \"#utility.yul\":6929:6936   */\n      dup6\n        /* \"#utility.yul\":6925:6948   */\n      sub\n        /* \"#utility.yul\":6921:6953   */\n      slt\n        /* \"#utility.yul\":6918:7037   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":6956:7035   */\n      tag_437\n      tag_331\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6918:7037   */\n    tag_436:\n        /* \"#utility.yul\":7076:7077   */\n      0x00\n        /* \"#utility.yul\":7101:7154   */\n      tag_438\n        /* \"#utility.yul\":7146:7153   */\n      dup6\n        /* \"#utility.yul\":7137:7143   */\n      dup3\n        /* \"#utility.yul\":7126:7135   */\n      dup7\n        /* \"#utility.yul\":7122:7144   */\n      add\n        /* \"#utility.yul\":7101:7154   */\n      tag_336\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7091:7154   */\n      swap3\n      pop\n        /* \"#utility.yul\":7047:7164   */\n      pop\n        /* \"#utility.yul\":7203:7205   */\n      0x20\n        /* \"#utility.yul\":7229:7282   */\n      tag_439\n        /* \"#utility.yul\":7274:7281   */\n      dup6\n        /* \"#utility.yul\":7265:7271   */\n      dup3\n        /* \"#utility.yul\":7254:7263   */\n      dup7\n        /* \"#utility.yul\":7250:7272   */\n      add\n        /* \"#utility.yul\":7229:7282   */\n      tag_336\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":7219:7282   */\n      swap2\n      pop\n        /* \"#utility.yul\":7174:7292   */\n      pop\n        /* \"#utility.yul\":6825:7299   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7485   */\n    tag_348:\n        /* \"#utility.yul\":7353:7430   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7350:7351   */\n      0x00\n        /* \"#utility.yul\":7343:7431   */\n      mstore\n        /* \"#utility.yul\":7450:7454   */\n      0x22\n        /* \"#utility.yul\":7447:7448   */\n      0x04\n        /* \"#utility.yul\":7440:7455   */\n      mstore\n        /* \"#utility.yul\":7474:7478   */\n      0x24\n        /* \"#utility.yul\":7471:7472   */\n      0x00\n        /* \"#utility.yul\":7464:7479   */\n      revert\n        /* \"#utility.yul\":7491:7811   */\n    tag_97:\n        /* \"#utility.yul\":7535:7541   */\n      0x00\n        /* \"#utility.yul\":7572:7573   */\n      0x02\n        /* \"#utility.yul\":7566:7570   */\n      dup3\n        /* \"#utility.yul\":7562:7574   */\n      div\n        /* \"#utility.yul\":7552:7574   */\n      swap1\n      pop\n        /* \"#utility.yul\":7619:7620   */\n      0x01\n        /* \"#utility.yul\":7613:7617   */\n      dup3\n        /* \"#utility.yul\":7609:7621   */\n      and\n        /* \"#utility.yul\":7640:7658   */\n      dup1\n        /* \"#utility.yul\":7630:7711   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":7696:7700   */\n      0x7f\n        /* \"#utility.yul\":7688:7694   */\n      dup3\n        /* \"#utility.yul\":7684:7701   */\n      and\n        /* \"#utility.yul\":7674:7701   */\n      swap2\n      pop\n        /* \"#utility.yul\":7630:7711   */\n    tag_442:\n        /* \"#utility.yul\":7758:7760   */\n      0x20\n        /* \"#utility.yul\":7750:7756   */\n      dup3\n        /* \"#utility.yul\":7747:7761   */\n      lt\n        /* \"#utility.yul\":7727:7745   */\n      dup2\n        /* \"#utility.yul\":7724:7762   */\n      sub\n        /* \"#utility.yul\":7721:7805   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":7777:7795   */\n      tag_444\n      tag_348\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7721:7805   */\n    tag_443:\n        /* \"#utility.yul\":7542:7811   */\n      pop\n        /* \"#utility.yul\":7491:7811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7817:7997   */\n    tag_349:\n        /* \"#utility.yul\":7865:7942   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7862:7863   */\n      0x00\n        /* \"#utility.yul\":7855:7943   */\n      mstore\n        /* \"#utility.yul\":7962:7966   */\n      0x11\n        /* \"#utility.yul\":7959:7960   */\n      0x04\n        /* \"#utility.yul\":7952:7967   */\n      mstore\n        /* \"#utility.yul\":7986:7990   */\n      0x24\n        /* \"#utility.yul\":7983:7984   */\n      0x00\n        /* \"#utility.yul\":7976:7991   */\n      revert\n        /* \"#utility.yul\":8003:8194   */\n    tag_126:\n        /* \"#utility.yul\":8043:8046   */\n      0x00\n        /* \"#utility.yul\":8062:8082   */\n      tag_447\n        /* \"#utility.yul\":8080:8081   */\n      dup3\n        /* \"#utility.yul\":8062:8082   */\n      tag_337\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":8057:8082   */\n      swap2\n      pop\n        /* \"#utility.yul\":8096:8116   */\n      tag_448\n        /* \"#utility.yul\":8114:8115   */\n      dup4\n        /* \"#utility.yul\":8096:8116   */\n      tag_337\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8091:8116   */\n      swap3\n      pop\n        /* \"#utility.yul\":8139:8140   */\n      dup3\n        /* \"#utility.yul\":8136:8137   */\n      dup3\n        /* \"#utility.yul\":8132:8141   */\n      add\n        /* \"#utility.yul\":8125:8141   */\n      swap1\n      pop\n        /* \"#utility.yul\":8160:8163   */\n      dup1\n        /* \"#utility.yul\":8157:8158   */\n      dup3\n        /* \"#utility.yul\":8154:8164   */\n      gt\n        /* \"#utility.yul\":8151:8187   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":8167:8185   */\n      tag_450\n      tag_349\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":8151:8187   */\n    tag_449:\n        /* \"#utility.yul\":8003:8194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8200:8361   */\n    tag_350:\n        /* \"#utility.yul\":8340:8353   */\n      0x576520736f6c64206f7574000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8336:8337   */\n      0x00\n        /* \"#utility.yul\":8328:8334   */\n      dup3\n        /* \"#utility.yul\":8324:8338   */\n      add\n        /* \"#utility.yul\":8317:8354   */\n      mstore\n        /* \"#utility.yul\":8200:8361   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8367:8733   */\n    tag_351:\n        /* \"#utility.yul\":8509:8512   */\n      0x00\n        /* \"#utility.yul\":8530:8597   */\n      tag_453\n        /* \"#utility.yul\":8594:8596   */\n      0x0b\n        /* \"#utility.yul\":8589:8592   */\n      dup4\n        /* \"#utility.yul\":8530:8597   */\n      tag_326\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8523:8597   */\n      swap2\n      pop\n        /* \"#utility.yul\":8606:8699   */\n      tag_454\n        /* \"#utility.yul\":8695:8698   */\n      dup3\n        /* \"#utility.yul\":8606:8699   */\n      tag_350\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":8724:8726   */\n      0x20\n        /* \"#utility.yul\":8719:8722   */\n      dup3\n        /* \"#utility.yul\":8715:8727   */\n      add\n        /* \"#utility.yul\":8708:8727   */\n      swap1\n      pop\n        /* \"#utility.yul\":8367:8733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8739:9158   */\n    tag_129:\n        /* \"#utility.yul\":8905:8909   */\n      0x00\n        /* \"#utility.yul\":8943:8945   */\n      0x20\n        /* \"#utility.yul\":8932:8941   */\n      dup3\n        /* \"#utility.yul\":8928:8946   */\n      add\n        /* \"#utility.yul\":8920:8946   */\n      swap1\n      pop\n        /* \"#utility.yul\":8992:9001   */\n      dup2\n        /* \"#utility.yul\":8986:8990   */\n      dup2\n        /* \"#utility.yul\":8982:9002   */\n      sub\n        /* \"#utility.yul\":8978:8979   */\n      0x00\n        /* \"#utility.yul\":8967:8976   */\n      dup4\n        /* \"#utility.yul\":8963:8980   */\n      add\n        /* \"#utility.yul\":8956:9003   */\n      mstore\n        /* \"#utility.yul\":9020:9151   */\n      tag_456\n        /* \"#utility.yul\":9146:9150   */\n      dup2\n        /* \"#utility.yul\":9020:9151   */\n      tag_351\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9012:9151   */\n      swap1\n      pop\n        /* \"#utility.yul\":8739:9158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9164:9606   */\n    tag_141:\n        /* \"#utility.yul\":9313:9317   */\n      0x00\n        /* \"#utility.yul\":9351:9353   */\n      0x60\n        /* \"#utility.yul\":9340:9349   */\n      dup3\n        /* \"#utility.yul\":9336:9354   */\n      add\n        /* \"#utility.yul\":9328:9354   */\n      swap1\n      pop\n        /* \"#utility.yul\":9364:9435   */\n      tag_458\n        /* \"#utility.yul\":9432:9433   */\n      0x00\n        /* \"#utility.yul\":9421:9430   */\n      dup4\n        /* \"#utility.yul\":9417:9434   */\n      add\n        /* \"#utility.yul\":9408:9414   */\n      dup7\n        /* \"#utility.yul\":9364:9435   */\n      tag_347\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9445:9517   */\n      tag_459\n        /* \"#utility.yul\":9513:9515   */\n      0x20\n        /* \"#utility.yul\":9502:9511   */\n      dup4\n        /* \"#utility.yul\":9498:9516   */\n      add\n        /* \"#utility.yul\":9489:9495   */\n      dup6\n        /* \"#utility.yul\":9445:9517   */\n      tag_347\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9527:9599   */\n      tag_460\n        /* \"#utility.yul\":9595:9597   */\n      0x40\n        /* \"#utility.yul\":9584:9593   */\n      dup4\n        /* \"#utility.yul\":9580:9598   */\n      add\n        /* \"#utility.yul\":9571:9577   */\n      dup5\n        /* \"#utility.yul\":9527:9599   */\n      tag_342\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9164:9606   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9612:10054   */\n    tag_184:\n        /* \"#utility.yul\":9761:9765   */\n      0x00\n        /* \"#utility.yul\":9799:9801   */\n      0x60\n        /* \"#utility.yul\":9788:9797   */\n      dup3\n        /* \"#utility.yul\":9784:9802   */\n      add\n        /* \"#utility.yul\":9776:9802   */\n      swap1\n      pop\n        /* \"#utility.yul\":9812:9883   */\n      tag_462\n        /* \"#utility.yul\":9880:9881   */\n      0x00\n        /* \"#utility.yul\":9869:9878   */\n      dup4\n        /* \"#utility.yul\":9865:9882   */\n      add\n        /* \"#utility.yul\":9856:9862   */\n      dup7\n        /* \"#utility.yul\":9812:9883   */\n      tag_347\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9893:9965   */\n      tag_463\n        /* \"#utility.yul\":9961:9963   */\n      0x20\n        /* \"#utility.yul\":9950:9959   */\n      dup4\n        /* \"#utility.yul\":9946:9964   */\n      add\n        /* \"#utility.yul\":9937:9943   */\n      dup6\n        /* \"#utility.yul\":9893:9965   */\n      tag_342\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9975:10047   */\n      tag_464\n        /* \"#utility.yul\":10043:10045   */\n      0x40\n        /* \"#utility.yul\":10032:10041   */\n      dup4\n        /* \"#utility.yul\":10028:10046   */\n      add\n        /* \"#utility.yul\":10019:10025   */\n      dup5\n        /* \"#utility.yul\":9975:10047   */\n      tag_342\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9612:10054   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10060:10470   */\n    tag_216:\n        /* \"#utility.yul\":10100:10107   */\n      0x00\n        /* \"#utility.yul\":10123:10143   */\n      tag_466\n        /* \"#utility.yul\":10141:10142   */\n      dup3\n        /* \"#utility.yul\":10123:10143   */\n      tag_337\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10118:10143   */\n      swap2\n      pop\n        /* \"#utility.yul\":10157:10177   */\n      tag_467\n        /* \"#utility.yul\":10175:10176   */\n      dup4\n        /* \"#utility.yul\":10157:10177   */\n      tag_337\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10152:10177   */\n      swap3\n      pop\n        /* \"#utility.yul\":10212:10213   */\n      dup3\n        /* \"#utility.yul\":10209:10210   */\n      dup3\n        /* \"#utility.yul\":10205:10214   */\n      mul\n        /* \"#utility.yul\":10234:10264   */\n      tag_468\n        /* \"#utility.yul\":10252:10263   */\n      dup2\n        /* \"#utility.yul\":10234:10264   */\n      tag_337\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10223:10264   */\n      swap2\n      pop\n        /* \"#utility.yul\":10413:10414   */\n      dup3\n        /* \"#utility.yul\":10404:10411   */\n      dup3\n        /* \"#utility.yul\":10400:10415   */\n      div\n        /* \"#utility.yul\":10397:10398   */\n      dup5\n        /* \"#utility.yul\":10394:10416   */\n      eq\n        /* \"#utility.yul\":10374:10375   */\n      dup4\n        /* \"#utility.yul\":10367:10376   */\n      iszero\n        /* \"#utility.yul\":10347:10430   */\n      or\n        /* \"#utility.yul\":10324:10463   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":10443:10461   */\n      tag_470\n      tag_349\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10324:10463   */\n    tag_469:\n        /* \"#utility.yul\":10108:10470   */\n      pop\n        /* \"#utility.yul\":10060:10470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10476:10656   */\n    tag_352:\n        /* \"#utility.yul\":10524:10601   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10521:10522   */\n      0x00\n        /* \"#utility.yul\":10514:10602   */\n      mstore\n        /* \"#utility.yul\":10621:10625   */\n      0x12\n        /* \"#utility.yul\":10618:10619   */\n      0x04\n        /* \"#utility.yul\":10611:10626   */\n      mstore\n        /* \"#utility.yul\":10645:10649   */\n      0x24\n        /* \"#utility.yul\":10642:10643   */\n      0x00\n        /* \"#utility.yul\":10635:10650   */\n      revert\n        /* \"#utility.yul\":10662:10847   */\n    tag_218:\n        /* \"#utility.yul\":10702:10703   */\n      0x00\n        /* \"#utility.yul\":10719:10739   */\n      tag_473\n        /* \"#utility.yul\":10737:10738   */\n      dup3\n        /* \"#utility.yul\":10719:10739   */\n      tag_337\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10714:10739   */\n      swap2\n      pop\n        /* \"#utility.yul\":10753:10773   */\n      tag_474\n        /* \"#utility.yul\":10771:10772   */\n      dup4\n        /* \"#utility.yul\":10753:10773   */\n      tag_337\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10748:10773   */\n      swap3\n      pop\n        /* \"#utility.yul\":10792:10793   */\n      dup3\n        /* \"#utility.yul\":10782:10817   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":10797:10815   */\n      tag_476\n      tag_352\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10782:10817   */\n    tag_475:\n        /* \"#utility.yul\":10839:10840   */\n      dup3\n        /* \"#utility.yul\":10836:10837   */\n      dup3\n        /* \"#utility.yul\":10832:10841   */\n      div\n        /* \"#utility.yul\":10827:10841   */\n      swap1\n      pop\n        /* \"#utility.yul\":10662:10847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10853:11033   */\n    tag_225:\n        /* \"#utility.yul\":10901:10978   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10898:10899   */\n      0x00\n        /* \"#utility.yul\":10891:10979   */\n      mstore\n        /* \"#utility.yul\":10998:11002   */\n      0x21\n        /* \"#utility.yul\":10995:10996   */\n      0x04\n        /* \"#utility.yul\":10988:11003   */\n      mstore\n        /* \"#utility.yul\":11022:11026   */\n      0x24\n        /* \"#utility.yul\":11019:11020   */\n      0x00\n        /* \"#utility.yul\":11012:11027   */\n      revert\n        /* \"#utility.yul\":11039:11141   */\n    tag_353:\n        /* \"#utility.yul\":11081:11089   */\n      0x00\n        /* \"#utility.yul\":11128:11133   */\n      dup2\n        /* \"#utility.yul\":11125:11126   */\n      0x01\n        /* \"#utility.yul\":11121:11134   */\n      shr\n        /* \"#utility.yul\":11100:11134   */\n      swap1\n      pop\n        /* \"#utility.yul\":11039:11141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11147:11995   */\n    tag_354:\n        /* \"#utility.yul\":11208:11213   */\n      0x00\n        /* \"#utility.yul\":11215:11219   */\n      dup1\n        /* \"#utility.yul\":11239:11245   */\n      dup3\n        /* \"#utility.yul\":11230:11245   */\n      swap2\n      pop\n        /* \"#utility.yul\":11263:11268   */\n      dup4\n        /* \"#utility.yul\":11254:11268   */\n      swap1\n      pop\n        /* \"#utility.yul\":11277:11989   */\n    tag_480:\n        /* \"#utility.yul\":11298:11299   */\n      0x01\n        /* \"#utility.yul\":11288:11296   */\n      dup6\n        /* \"#utility.yul\":11285:11300   */\n      gt\n        /* \"#utility.yul\":11277:11989   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":11393:11397   */\n      dup1\n        /* \"#utility.yul\":11388:11391   */\n      dup7\n        /* \"#utility.yul\":11384:11398   */\n      div\n        /* \"#utility.yul\":11378:11382   */\n      dup2\n        /* \"#utility.yul\":11375:11399   */\n      gt\n        /* \"#utility.yul\":11372:11422   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":11402:11420   */\n      tag_484\n      tag_349\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11372:11422   */\n    tag_483:\n        /* \"#utility.yul\":11452:11453   */\n      0x01\n        /* \"#utility.yul\":11442:11450   */\n      dup6\n        /* \"#utility.yul\":11438:11454   */\n      and\n        /* \"#utility.yul\":11435:11886   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":11867:11871   */\n      dup1\n        /* \"#utility.yul\":11860:11865   */\n      dup3\n        /* \"#utility.yul\":11856:11872   */\n      mul\n        /* \"#utility.yul\":11847:11872   */\n      swap2\n      pop\n        /* \"#utility.yul\":11435:11886   */\n    tag_485:\n        /* \"#utility.yul\":11917:11921   */\n      dup1\n        /* \"#utility.yul\":11911:11915   */\n      dup2\n        /* \"#utility.yul\":11907:11922   */\n      mul\n        /* \"#utility.yul\":11899:11922   */\n      swap1\n      pop\n        /* \"#utility.yul\":11947:11979   */\n      tag_486\n        /* \"#utility.yul\":11970:11978   */\n      dup6\n        /* \"#utility.yul\":11947:11979   */\n      tag_353\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11935:11979   */\n      swap5\n      pop\n        /* \"#utility.yul\":11277:11989   */\n      jump(tag_480)\n    tag_482:\n        /* \"#utility.yul\":11147:11995   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12001:13074   */\n    tag_355:\n        /* \"#utility.yul\":12055:12060   */\n      0x00\n        /* \"#utility.yul\":12246:12254   */\n      dup3\n        /* \"#utility.yul\":12236:12276   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":12267:12268   */\n      0x01\n        /* \"#utility.yul\":12258:12268   */\n      swap1\n      pop\n        /* \"#utility.yul\":12269:12274   */\n      jump(tag_487)\n        /* \"#utility.yul\":12236:12276   */\n    tag_488:\n        /* \"#utility.yul\":12295:12299   */\n      dup2\n        /* \"#utility.yul\":12285:12321   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":12312:12313   */\n      0x00\n        /* \"#utility.yul\":12303:12313   */\n      swap1\n      pop\n        /* \"#utility.yul\":12314:12319   */\n      jump(tag_487)\n        /* \"#utility.yul\":12285:12321   */\n    tag_489:\n        /* \"#utility.yul\":12381:12385   */\n      dup2\n        /* \"#utility.yul\":12429:12430   */\n      0x01\n        /* \"#utility.yul\":12424:12451   */\n      dup2\n      eq\n      tag_491\n      jumpi\n        /* \"#utility.yul\":12465:12466   */\n      0x02\n        /* \"#utility.yul\":12460:12651   */\n      dup2\n      eq\n      tag_492\n      jumpi\n        /* \"#utility.yul\":12374:12651   */\n      jump(tag_490)\n        /* \"#utility.yul\":12424:12451   */\n    tag_491:\n        /* \"#utility.yul\":12442:12443   */\n      0x01\n        /* \"#utility.yul\":12433:12443   */\n      swap2\n      pop\n        /* \"#utility.yul\":12444:12449   */\n      pop\n      jump(tag_487)\n        /* \"#utility.yul\":12460:12651   */\n    tag_492:\n        /* \"#utility.yul\":12505:12508   */\n      0xff\n        /* \"#utility.yul\":12495:12503   */\n      dup5\n        /* \"#utility.yul\":12492:12509   */\n      gt\n        /* \"#utility.yul\":12489:12532   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":12512:12530   */\n      tag_494\n      tag_349\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":12489:12532   */\n    tag_493:\n        /* \"#utility.yul\":12561:12569   */\n      dup4\n        /* \"#utility.yul\":12558:12559   */\n      0x02\n        /* \"#utility.yul\":12554:12570   */\n      exp\n        /* \"#utility.yul\":12545:12570   */\n      swap2\n      pop\n        /* \"#utility.yul\":12596:12599   */\n      dup5\n        /* \"#utility.yul\":12589:12594   */\n      dup3\n        /* \"#utility.yul\":12586:12600   */\n      gt\n        /* \"#utility.yul\":12583:12623   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":12603:12621   */\n      tag_496\n      tag_349\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":12583:12623   */\n    tag_495:\n        /* \"#utility.yul\":12636:12641   */\n      pop\n      jump(tag_487)\n        /* \"#utility.yul\":12374:12651   */\n    tag_490:\n      pop\n        /* \"#utility.yul\":12760:12762   */\n      0x20\n        /* \"#utility.yul\":12750:12758   */\n      dup4\n        /* \"#utility.yul\":12747:12763   */\n      lt\n        /* \"#utility.yul\":12741:12744   */\n      0x0133\n        /* \"#utility.yul\":12735:12739   */\n      dup4\n        /* \"#utility.yul\":12732:12745   */\n      lt\n        /* \"#utility.yul\":12728:12764   */\n      and\n        /* \"#utility.yul\":12710:12712   */\n      0x4e\n        /* \"#utility.yul\":12700:12708   */\n      dup5\n        /* \"#utility.yul\":12697:12713   */\n      lt\n        /* \"#utility.yul\":12692:12694   */\n      0x0b\n        /* \"#utility.yul\":12686:12690   */\n      dup5\n        /* \"#utility.yul\":12683:12695   */\n      lt\n        /* \"#utility.yul\":12679:12714   */\n      and\n        /* \"#utility.yul\":12663:12774   */\n      or\n        /* \"#utility.yul\":12660:12906   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":12816:12824   */\n      dup3\n        /* \"#utility.yul\":12810:12814   */\n      dup3\n        /* \"#utility.yul\":12806:12825   */\n      exp\n        /* \"#utility.yul\":12797:12825   */\n      swap1\n      pop\n        /* \"#utility.yul\":12851:12854   */\n      dup4\n        /* \"#utility.yul\":12844:12849   */\n      dup2\n        /* \"#utility.yul\":12841:12855   */\n      gt\n        /* \"#utility.yul\":12838:12878   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":12858:12876   */\n      tag_499\n      tag_349\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12838:12878   */\n    tag_498:\n        /* \"#utility.yul\":12891:12896   */\n      jump(tag_487)\n        /* \"#utility.yul\":12660:12906   */\n    tag_497:\n        /* \"#utility.yul\":12931:12973   */\n      tag_500\n        /* \"#utility.yul\":12969:12972   */\n      dup5\n        /* \"#utility.yul\":12959:12967   */\n      dup5\n        /* \"#utility.yul\":12953:12957   */\n      dup5\n        /* \"#utility.yul\":12950:12951   */\n      0x01\n        /* \"#utility.yul\":12931:12973   */\n      tag_354\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":12916:12973   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":13005:13009   */\n      dup2\n        /* \"#utility.yul\":13000:13003   */\n      dup5\n        /* \"#utility.yul\":12996:13010   */\n      div\n        /* \"#utility.yul\":12989:12994   */\n      dup2\n        /* \"#utility.yul\":12986:13011   */\n      gt\n        /* \"#utility.yul\":12983:13034   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":13014:13032   */\n      tag_502\n      tag_349\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":12983:13034   */\n    tag_501:\n        /* \"#utility.yul\":13063:13067   */\n      dup2\n        /* \"#utility.yul\":13056:13061   */\n      dup2\n        /* \"#utility.yul\":13052:13068   */\n      mul\n        /* \"#utility.yul\":13043:13068   */\n      swap1\n      pop\n        /* \"#utility.yul\":12001:13074   */\n    tag_487:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13080:13361   */\n    tag_231:\n        /* \"#utility.yul\":13138:13143   */\n      0x00\n        /* \"#utility.yul\":13162:13185   */\n      tag_504\n        /* \"#utility.yul\":13180:13184   */\n      dup3\n        /* \"#utility.yul\":13162:13185   */\n      tag_337\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13154:13185   */\n      swap2\n      pop\n        /* \"#utility.yul\":13206:13231   */\n      tag_505\n        /* \"#utility.yul\":13222:13230   */\n      dup4\n        /* \"#utility.yul\":13206:13231   */\n      tag_343\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":13194:13231   */\n      swap3\n      pop\n        /* \"#utility.yul\":13250:13354   */\n      tag_506\n        /* \"#utility.yul\":13287:13353   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13277:13285   */\n      dup5\n        /* \"#utility.yul\":13271:13275   */\n      dup5\n        /* \"#utility.yul\":13250:13354   */\n      tag_355\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13241:13354   */\n      swap1\n      pop\n        /* \"#utility.yul\":13080:13361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220682ea60214ed887cc4b9cf3a621e5a293bc8bd7461d8f3a8dfa868900691491b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1047": {
									"entryPoint": null,
									"id": 1047,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1190": {
									"entryPoint": null,
									"id": 1190,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 683,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireNotPaused_1084": {
									"entryPoint": 885,
									"id": 1084,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 486,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1254": {
									"entryPoint": 821,
									"id": 1254,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 959,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_956": {
									"entryPoint": 845,
									"id": 956,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 478,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1072": {
									"entryPoint": 1507,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10797:12",
										"nodeType": "YulBlock",
										"src": "0:10797:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:12",
													"nodeType": "YulBlock",
													"src": "35:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:12",
																		"nodeType": "YulLiteral",
																		"src": "52:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:12",
																		"nodeType": "YulLiteral",
																		"src": "55:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:12"
																},
																"nativeSrc": "45:88:12",
																"nodeType": "YulFunctionCall",
																"src": "45:88:12"
															},
															"nativeSrc": "45:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:12",
																		"nodeType": "YulLiteral",
																		"src": "149:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:12",
																		"nodeType": "YulLiteral",
																		"src": "152:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:12"
																},
																"nativeSrc": "142:15:12",
																"nodeType": "YulFunctionCall",
																"src": "142:15:12"
															},
															"nativeSrc": "142:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:12",
																		"nodeType": "YulLiteral",
																		"src": "173:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:12",
																		"nodeType": "YulLiteral",
																		"src": "176:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:12"
																},
																"nativeSrc": "166:15:12",
																"nodeType": "YulFunctionCall",
																"src": "166:15:12"
															},
															"nativeSrc": "166:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:12"
											},
											{
												"body": {
													"nativeSrc": "244:51:12",
													"nodeType": "YulBlock",
													"src": "244:51:12",
													"statements": [
														{
															"nativeSrc": "254:34:12",
															"nodeType": "YulAssignment",
															"src": "254:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "279:1:12",
																		"nodeType": "YulLiteral",
																		"src": "279:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "282:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "282:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "275:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:12"
																},
																"nativeSrc": "275:13:12",
																"nodeType": "YulFunctionCall",
																"src": "275:13:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "254:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "254:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "193:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "225:5:12",
														"nodeType": "YulTypedName",
														"src": "225:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "235:8:12",
														"nodeType": "YulTypedName",
														"src": "235:8:12",
														"type": ""
													}
												],
												"src": "193:102:12"
											},
											{
												"body": {
													"nativeSrc": "374:775:12",
													"nodeType": "YulBlock",
													"src": "374:775:12",
													"statements": [
														{
															"nativeSrc": "384:15:12",
															"nodeType": "YulAssignment",
															"src": "384:15:12",
															"value": {
																"name": "_power",
																"nativeSrc": "393:6:12",
																"nodeType": "YulIdentifier",
																"src": "393:6:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "384:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "384:5:12"
																}
															]
														},
														{
															"nativeSrc": "408:14:12",
															"nodeType": "YulAssignment",
															"src": "408:14:12",
															"value": {
																"name": "_base",
																"nativeSrc": "417:5:12",
																"nodeType": "YulIdentifier",
																"src": "417:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "408:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "408:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "466:677:12",
																"nodeType": "YulBlock",
																"src": "466:677:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "554:22:12",
																			"nodeType": "YulBlock",
																			"src": "554:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "556:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "556:16:12"
																						},
																						"nativeSrc": "556:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "556:18:12"
																					},
																					"nativeSrc": "556:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "556:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "532:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "532:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "542:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "547:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "547:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "538:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "538:3:12"
																					},
																					"nativeSrc": "538:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "538:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "529:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "529:2:12"
																			},
																			"nativeSrc": "529:24:12",
																			"nodeType": "YulFunctionCall",
																			"src": "529:24:12"
																		},
																		"nativeSrc": "526:50:12",
																		"nodeType": "YulIf",
																		"src": "526:50:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "621:419:12",
																			"nodeType": "YulBlock",
																			"src": "621:419:12",
																			"statements": [
																				{
																					"nativeSrc": "1001:25:12",
																					"nodeType": "YulAssignment",
																					"src": "1001:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "1014:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1014:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "1021:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1021:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "1010:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1010:3:12"
																						},
																						"nativeSrc": "1010:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1010:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "1001:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "1001:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "596:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "596:8:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "606:1:12",
																					"nodeType": "YulLiteral",
																					"src": "606:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "592:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "592:3:12"
																			},
																			"nativeSrc": "592:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "592:16:12"
																		},
																		"nativeSrc": "589:451:12",
																		"nodeType": "YulIf",
																		"src": "589:451:12"
																	},
																	{
																		"nativeSrc": "1053:23:12",
																		"nodeType": "YulAssignment",
																		"src": "1053:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1065:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1065:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "1071:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1071:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "1061:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1061:3:12"
																			},
																			"nativeSrc": "1061:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1061:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "1053:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1053:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1089:44:12",
																		"nodeType": "YulAssignment",
																		"src": "1089:44:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "1124:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "1124:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "1101:22:12",
																				"nodeType": "YulIdentifier",
																				"src": "1101:22:12"
																			},
																			"nativeSrc": "1101:32:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1101:32:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "1089:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1089:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "442:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "442:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "452:1:12",
																		"nodeType": "YulLiteral",
																		"src": "452:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "439:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "439:2:12"
																},
																"nativeSrc": "439:15:12",
																"nodeType": "YulFunctionCall",
																"src": "439:15:12"
															},
															"nativeSrc": "431:712:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "455:2:12",
																"nodeType": "YulBlock",
																"src": "455:2:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "435:3:12",
																"nodeType": "YulBlock",
																"src": "435:3:12",
																"statements": []
															},
															"src": "431:712:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "301:848:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "329:6:12",
														"nodeType": "YulTypedName",
														"src": "329:6:12",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "337:5:12",
														"nodeType": "YulTypedName",
														"src": "337:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "344:8:12",
														"nodeType": "YulTypedName",
														"src": "344:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "354:3:12",
														"nodeType": "YulTypedName",
														"src": "354:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "362:5:12",
														"nodeType": "YulTypedName",
														"src": "362:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "369:4:12",
														"nodeType": "YulTypedName",
														"src": "369:4:12",
														"type": ""
													}
												],
												"src": "301:848:12"
											},
											{
												"body": {
													"nativeSrc": "1215:1013:12",
													"nodeType": "YulBlock",
													"src": "1215:1013:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:20:12",
																"nodeType": "YulBlock",
																"src": "1410:20:12",
																"statements": [
																	{
																		"nativeSrc": "1412:10:12",
																		"nodeType": "YulAssignment",
																		"src": "1412:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1421:1:12",
																			"nodeType": "YulLiteral",
																			"src": "1421:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1412:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1412:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1423:5:12",
																		"nodeType": "YulLeave",
																		"src": "1423:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "1400:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1400:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1393:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:12"
																},
																"nativeSrc": "1393:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1393:16:12"
															},
															"nativeSrc": "1390:40:12",
															"nodeType": "YulIf",
															"src": "1390:40:12"
														},
														{
															"body": {
																"nativeSrc": "1455:20:12",
																"nodeType": "YulBlock",
																"src": "1455:20:12",
																"statements": [
																	{
																		"nativeSrc": "1457:10:12",
																		"nodeType": "YulAssignment",
																		"src": "1457:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1466:1:12",
																			"nodeType": "YulLiteral",
																			"src": "1466:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1457:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1457:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1468:5:12",
																		"nodeType": "YulLeave",
																		"src": "1468:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "1449:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1449:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:12"
																},
																"nativeSrc": "1442:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1442:12:12"
															},
															"nativeSrc": "1439:36:12",
															"nodeType": "YulIf",
															"src": "1439:36:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1585:20:12",
																		"nodeType": "YulBlock",
																		"src": "1585:20:12",
																		"statements": [
																			{
																				"nativeSrc": "1587:10:12",
																				"nodeType": "YulAssignment",
																				"src": "1587:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1587:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "1598:5:12",
																				"nodeType": "YulLeave",
																				"src": "1598:5:12"
																			}
																		]
																	},
																	"nativeSrc": "1578:27:12",
																	"nodeType": "YulCase",
																	"src": "1578:27:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1583:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1583:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1629:176:12",
																		"nodeType": "YulBlock",
																		"src": "1629:176:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "1664:22:12",
																					"nodeType": "YulBlock",
																					"src": "1664:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1666:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "1666:16:12"
																								},
																								"nativeSrc": "1666:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1666:18:12"
																							},
																							"nativeSrc": "1666:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "1666:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "1649:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "1649:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1659:3:12",
																							"nodeType": "YulLiteral",
																							"src": "1659:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1646:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1646:2:12"
																					},
																					"nativeSrc": "1646:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1646:17:12"
																				},
																				"nativeSrc": "1643:43:12",
																				"nodeType": "YulIf",
																				"src": "1643:43:12"
																			},
																			{
																				"nativeSrc": "1699:25:12",
																				"nodeType": "YulAssignment",
																				"src": "1699:25:12",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1712:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1712:1:12",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "1715:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "1715:8:12"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "1708:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1708:3:12"
																					},
																					"nativeSrc": "1708:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1708:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "1699:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1699:5:12"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1755:22:12",
																					"nodeType": "YulBlock",
																					"src": "1755:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "1757:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "1757:16:12"
																								},
																								"nativeSrc": "1757:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1757:18:12"
																							},
																							"nativeSrc": "1757:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "1757:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "1743:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "1743:5:12"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "1750:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "1740:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1740:2:12"
																					},
																					"nativeSrc": "1740:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1740:14:12"
																				},
																				"nativeSrc": "1737:40:12",
																				"nodeType": "YulIf",
																				"src": "1737:40:12"
																			},
																			{
																				"nativeSrc": "1790:5:12",
																				"nodeType": "YulLeave",
																				"src": "1790:5:12"
																			}
																		]
																	},
																	"nativeSrc": "1614:191:12",
																	"nodeType": "YulCase",
																	"src": "1614:191:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1619:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1619:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "1535:4:12",
																"nodeType": "YulIdentifier",
																"src": "1535:4:12"
															},
															"nativeSrc": "1528:277:12",
															"nodeType": "YulSwitch",
															"src": "1528:277:12"
														},
														{
															"body": {
																"nativeSrc": "1937:123:12",
																"nodeType": "YulBlock",
																"src": "1937:123:12",
																"statements": [
																	{
																		"nativeSrc": "1951:28:12",
																		"nodeType": "YulAssignment",
																		"src": "1951:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "1964:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1964:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "1970:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "1970:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "1960:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:12"
																			},
																			"nativeSrc": "1960:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1960:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "1951:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1951:5:12"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2010:22:12",
																			"nodeType": "YulBlock",
																			"src": "2010:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "2012:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "2012:16:12"
																						},
																						"nativeSrc": "2012:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2012:18:12"
																					},
																					"nativeSrc": "2012:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "2012:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "1998:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1998:5:12"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "2005:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2005:3:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1995:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1995:2:12"
																			},
																			"nativeSrc": "1995:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1995:14:12"
																		},
																		"nativeSrc": "1992:40:12",
																		"nodeType": "YulIf",
																		"src": "1992:40:12"
																	},
																	{
																		"nativeSrc": "2045:5:12",
																		"nodeType": "YulLeave",
																		"src": "2045:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1840:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1840:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1846:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1846:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1837:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1837:2:12"
																				},
																				"nativeSrc": "1837:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1854:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "1854:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1864:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1864:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1851:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1851:2:12"
																				},
																				"nativeSrc": "1851:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1851:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:12"
																		},
																		"nativeSrc": "1833:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "1889:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1889:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1895:3:12",
																						"nodeType": "YulLiteral",
																						"src": "1895:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1886:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1886:2:12"
																				},
																				"nativeSrc": "1886:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1886:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "1904:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "1904:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1914:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1914:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1901:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1901:2:12"
																				},
																				"nativeSrc": "1901:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1901:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1882:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:12"
																		},
																		"nativeSrc": "1882:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1882:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1817:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1817:2:12"
																},
																"nativeSrc": "1817:111:12",
																"nodeType": "YulFunctionCall",
																"src": "1817:111:12"
															},
															"nativeSrc": "1814:246:12",
															"nodeType": "YulIf",
															"src": "1814:246:12"
														},
														{
															"nativeSrc": "2070:57:12",
															"nodeType": "YulAssignment",
															"src": "2070:57:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2104:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2107:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2107:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2113:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2113:8:12"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "2123:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2123:3:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "2085:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:12"
																},
																"nativeSrc": "2085:42:12",
																"nodeType": "YulFunctionCall",
																"src": "2085:42:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2070:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2070:5:12"
																},
																{
																	"name": "base",
																	"nativeSrc": "2077:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2166:22:12",
																"nodeType": "YulBlock",
																"src": "2166:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2168:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2168:16:12"
																			},
																			"nativeSrc": "2168:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2168:18:12"
																		},
																		"nativeSrc": "2168:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2143:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2143:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "2154:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2154:3:12"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "2159:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2159:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2150:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:12"
																		},
																		"nativeSrc": "2150:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:14:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2140:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:12"
																},
																"nativeSrc": "2140:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2140:25:12"
															},
															"nativeSrc": "2137:51:12",
															"nodeType": "YulIf",
															"src": "2137:51:12"
														},
														{
															"nativeSrc": "2197:25:12",
															"nodeType": "YulAssignment",
															"src": "2197:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "2210:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2210:5:12"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "2217:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2217:4:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2206:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2206:3:12"
																},
																"nativeSrc": "2206:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2206:16:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2197:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2197:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "1155:1073:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "1185:4:12",
														"nodeType": "YulTypedName",
														"src": "1185:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "1191:8:12",
														"nodeType": "YulTypedName",
														"src": "1191:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "1201:3:12",
														"nodeType": "YulTypedName",
														"src": "1201:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "1209:5:12",
														"nodeType": "YulTypedName",
														"src": "1209:5:12",
														"type": ""
													}
												],
												"src": "1155:1073:12"
											},
											{
												"body": {
													"nativeSrc": "2279:32:12",
													"nodeType": "YulBlock",
													"src": "2279:32:12",
													"statements": [
														{
															"nativeSrc": "2289:16:12",
															"nodeType": "YulAssignment",
															"src": "2289:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2300:5:12",
																"nodeType": "YulIdentifier",
																"src": "2300:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2289:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2289:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2234:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2261:5:12",
														"nodeType": "YulTypedName",
														"src": "2261:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2271:7:12",
														"nodeType": "YulTypedName",
														"src": "2271:7:12",
														"type": ""
													}
												],
												"src": "2234:77:12"
											},
											{
												"body": {
													"nativeSrc": "2360:43:12",
													"nodeType": "YulBlock",
													"src": "2360:43:12",
													"statements": [
														{
															"nativeSrc": "2370:27:12",
															"nodeType": "YulAssignment",
															"src": "2370:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2385:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2385:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2381:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2381:3:12"
																},
																"nativeSrc": "2381:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2381:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2370:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2370:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2317:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2342:5:12",
														"nodeType": "YulTypedName",
														"src": "2342:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2352:7:12",
														"nodeType": "YulTypedName",
														"src": "2352:7:12",
														"type": ""
													}
												],
												"src": "2317:86:12"
											},
											{
												"body": {
													"nativeSrc": "2473:217:12",
													"nodeType": "YulBlock",
													"src": "2473:217:12",
													"statements": [
														{
															"nativeSrc": "2483:31:12",
															"nodeType": "YulAssignment",
															"src": "2483:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2509:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2509:4:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2491:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2491:17:12"
																},
																"nativeSrc": "2491:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2491:23:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2483:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2483:4:12"
																}
															]
														},
														{
															"nativeSrc": "2523:37:12",
															"nodeType": "YulAssignment",
															"src": "2523:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "2551:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2551:8:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "2535:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "2535:15:12"
																},
																"nativeSrc": "2535:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2535:25:12"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "2523:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2523:8:12"
																}
															]
														},
														{
															"nativeSrc": "2570:113:12",
															"nodeType": "YulAssignment",
															"src": "2570:113:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "2600:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2600:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "2606:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2606:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2616:66:12",
																		"nodeType": "YulLiteral",
																		"src": "2616:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "2579:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "2579:20:12"
																},
																"nativeSrc": "2579:104:12",
																"nodeType": "YulFunctionCall",
																"src": "2579:104:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2570:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2570:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "2409:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "2448:4:12",
														"nodeType": "YulTypedName",
														"src": "2448:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2454:8:12",
														"nodeType": "YulTypedName",
														"src": "2454:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2467:5:12",
														"nodeType": "YulTypedName",
														"src": "2467:5:12",
														"type": ""
													}
												],
												"src": "2409:281:12"
											},
											{
												"body": {
													"nativeSrc": "2744:362:12",
													"nodeType": "YulBlock",
													"src": "2744:362:12",
													"statements": [
														{
															"nativeSrc": "2754:25:12",
															"nodeType": "YulAssignment",
															"src": "2754:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2777:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2777:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2759:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:12"
																},
																"nativeSrc": "2759:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2759:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2754:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "2754:1:12"
																}
															]
														},
														{
															"nativeSrc": "2788:25:12",
															"nodeType": "YulAssignment",
															"src": "2788:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2811:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2811:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2793:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2793:17:12"
																},
																"nativeSrc": "2793:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2793:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2788:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "2788:1:12"
																}
															]
														},
														{
															"nativeSrc": "2822:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2822:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2845:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2845:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2848:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "2848:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2841:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:12"
																},
																"nativeSrc": "2841:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2841:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2826:11:12",
																	"nodeType": "YulTypedName",
																	"src": "2826:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2859:41:12",
															"nodeType": "YulAssignment",
															"src": "2859:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2888:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "2888:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2870:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2870:17:12"
																},
																"nativeSrc": "2870:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2870:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2859:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2859:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3077:22:12",
																"nodeType": "YulBlock",
																"src": "3077:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3079:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "3079:16:12"
																			},
																			"nativeSrc": "3079:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3079:18:12"
																		},
																		"nativeSrc": "3079:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3079:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3010:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "3010:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3003:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3003:6:12"
																				},
																				"nativeSrc": "3003:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3003:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3033:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "3033:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3040:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "3040:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3049:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "3049:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3036:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3036:3:12"
																						},
																						"nativeSrc": "3036:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3036:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3030:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3030:2:12"
																				},
																				"nativeSrc": "3030:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3030:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2983:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2983:2:12"
																		},
																		"nativeSrc": "2983:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2963:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:12"
																},
																"nativeSrc": "2963:113:12",
																"nodeType": "YulFunctionCall",
																"src": "2963:113:12"
															},
															"nativeSrc": "2960:139:12",
															"nodeType": "YulIf",
															"src": "2960:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2696:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2727:1:12",
														"nodeType": "YulTypedName",
														"src": "2727:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2730:1:12",
														"nodeType": "YulTypedName",
														"src": "2730:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2736:7:12",
														"nodeType": "YulTypedName",
														"src": "2736:7:12",
														"type": ""
													}
												],
												"src": "2696:410:12"
											},
											{
												"body": {
													"nativeSrc": "3152:35:12",
													"nodeType": "YulBlock",
													"src": "3152:35:12",
													"statements": [
														{
															"nativeSrc": "3162:19:12",
															"nodeType": "YulAssignment",
															"src": "3162:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3178:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3172:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3172:5:12"
																},
																"nativeSrc": "3172:9:12",
																"nodeType": "YulFunctionCall",
																"src": "3172:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3162:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "3112:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3145:6:12",
														"nodeType": "YulTypedName",
														"src": "3145:6:12",
														"type": ""
													}
												],
												"src": "3112:75:12"
											},
											{
												"body": {
													"nativeSrc": "3282:28:12",
													"nodeType": "YulBlock",
													"src": "3282:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3299:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3299:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3302:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3302:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:12"
																},
																"nativeSrc": "3292:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3292:12:12"
															},
															"nativeSrc": "3292:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "3292:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "3193:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3193:117:12"
											},
											{
												"body": {
													"nativeSrc": "3405:28:12",
													"nodeType": "YulBlock",
													"src": "3405:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3422:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3422:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3425:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3425:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3415:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3415:6:12"
																},
																"nativeSrc": "3415:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3415:12:12"
															},
															"nativeSrc": "3415:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "3415:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "3316:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3316:117:12"
											},
											{
												"body": {
													"nativeSrc": "3484:81:12",
													"nodeType": "YulBlock",
													"src": "3484:81:12",
													"statements": [
														{
															"nativeSrc": "3494:65:12",
															"nodeType": "YulAssignment",
															"src": "3494:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3509:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3509:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3516:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3516:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3505:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:12"
																},
																"nativeSrc": "3505:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3505:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3494:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3494:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3439:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3466:5:12",
														"nodeType": "YulTypedName",
														"src": "3466:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3476:7:12",
														"nodeType": "YulTypedName",
														"src": "3476:7:12",
														"type": ""
													}
												],
												"src": "3439:126:12"
											},
											{
												"body": {
													"nativeSrc": "3616:51:12",
													"nodeType": "YulBlock",
													"src": "3616:51:12",
													"statements": [
														{
															"nativeSrc": "3626:35:12",
															"nodeType": "YulAssignment",
															"src": "3626:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3655:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3655:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3637:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3637:17:12"
																},
																"nativeSrc": "3637:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3637:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3626:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3626:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3571:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3598:5:12",
														"nodeType": "YulTypedName",
														"src": "3598:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3608:7:12",
														"nodeType": "YulTypedName",
														"src": "3608:7:12",
														"type": ""
													}
												],
												"src": "3571:96:12"
											},
											{
												"body": {
													"nativeSrc": "3716:79:12",
													"nodeType": "YulBlock",
													"src": "3716:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3773:16:12",
																"nodeType": "YulBlock",
																"src": "3773:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3782:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3785:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3785:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3775:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3775:6:12"
																			},
																			"nativeSrc": "3775:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3775:12:12"
																		},
																		"nativeSrc": "3775:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3775:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3739:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3739:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3764:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3764:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3746:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3746:17:12"
																				},
																				"nativeSrc": "3746:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3746:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3736:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3736:2:12"
																		},
																		"nativeSrc": "3736:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3736:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:12"
																},
																"nativeSrc": "3729:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3729:43:12"
															},
															"nativeSrc": "3726:63:12",
															"nodeType": "YulIf",
															"src": "3726:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3673:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3709:5:12",
														"nodeType": "YulTypedName",
														"src": "3709:5:12",
														"type": ""
													}
												],
												"src": "3673:122:12"
											},
											{
												"body": {
													"nativeSrc": "3864:80:12",
													"nodeType": "YulBlock",
													"src": "3864:80:12",
													"statements": [
														{
															"nativeSrc": "3874:22:12",
															"nodeType": "YulAssignment",
															"src": "3874:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3889:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3889:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3883:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3883:5:12"
																},
																"nativeSrc": "3883:13:12",
																"nodeType": "YulFunctionCall",
																"src": "3883:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3874:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3874:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3932:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3932:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3905:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3905:26:12"
																},
																"nativeSrc": "3905:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3905:33:12"
															},
															"nativeSrc": "3905:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3905:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "3801:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3842:6:12",
														"nodeType": "YulTypedName",
														"src": "3842:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3850:3:12",
														"nodeType": "YulTypedName",
														"src": "3850:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3858:5:12",
														"nodeType": "YulTypedName",
														"src": "3858:5:12",
														"type": ""
													}
												],
												"src": "3801:143:12"
											},
											{
												"body": {
													"nativeSrc": "4027:274:12",
													"nodeType": "YulBlock",
													"src": "4027:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4073:83:12",
																"nodeType": "YulBlock",
																"src": "4073:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4075:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4075:77:12"
																			},
																			"nativeSrc": "4075:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4075:79:12"
																		},
																		"nativeSrc": "4075:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4075:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4048:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4048:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4057:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4057:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4044:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4044:3:12"
																		},
																		"nativeSrc": "4044:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4044:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4069:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4069:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4040:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:12"
																},
																"nativeSrc": "4040:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4040:32:12"
															},
															"nativeSrc": "4037:119:12",
															"nodeType": "YulIf",
															"src": "4037:119:12"
														},
														{
															"nativeSrc": "4166:128:12",
															"nodeType": "YulBlock",
															"src": "4166:128:12",
															"statements": [
																{
																	"nativeSrc": "4181:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4181:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4195:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4195:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4185:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4185:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4210:74:12",
																	"nodeType": "YulAssignment",
																	"src": "4210:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4256:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4256:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4267:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4267:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4252:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4252:3:12"
																				},
																				"nativeSrc": "4252:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4252:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4276:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4276:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4220:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "4220:31:12"
																		},
																		"nativeSrc": "4220:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4220:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4210:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4210:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "3950:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3997:9:12",
														"nodeType": "YulTypedName",
														"src": "3997:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4008:7:12",
														"nodeType": "YulTypedName",
														"src": "4008:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4020:6:12",
														"nodeType": "YulTypedName",
														"src": "4020:6:12",
														"type": ""
													}
												],
												"src": "3950:351:12"
											},
											{
												"body": {
													"nativeSrc": "4366:40:12",
													"nodeType": "YulBlock",
													"src": "4366:40:12",
													"statements": [
														{
															"nativeSrc": "4377:22:12",
															"nodeType": "YulAssignment",
															"src": "4377:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4393:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4393:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4387:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4387:5:12"
																},
																"nativeSrc": "4387:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4387:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4377:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4377:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4307:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4349:5:12",
														"nodeType": "YulTypedName",
														"src": "4349:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4359:6:12",
														"nodeType": "YulTypedName",
														"src": "4359:6:12",
														"type": ""
													}
												],
												"src": "4307:99:12"
											},
											{
												"body": {
													"nativeSrc": "4440:152:12",
													"nodeType": "YulBlock",
													"src": "4440:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4457:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4457:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4460:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4460:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4450:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4450:6:12"
																},
																"nativeSrc": "4450:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4450:88:12"
															},
															"nativeSrc": "4450:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4450:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4554:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4557:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4557:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4547:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4547:6:12"
																},
																"nativeSrc": "4547:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4547:15:12"
															},
															"nativeSrc": "4547:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4547:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4578:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4578:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4581:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4581:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4571:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4571:6:12"
																},
																"nativeSrc": "4571:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4571:15:12"
															},
															"nativeSrc": "4571:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4571:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4412:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4412:180:12"
											},
											{
												"body": {
													"nativeSrc": "4626:152:12",
													"nodeType": "YulBlock",
													"src": "4626:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4643:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4643:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4646:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4646:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4636:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:12"
																},
																"nativeSrc": "4636:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4636:88:12"
															},
															"nativeSrc": "4636:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4636:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4740:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4743:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4733:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4733:6:12"
																},
																"nativeSrc": "4733:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4733:15:12"
															},
															"nativeSrc": "4733:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4733:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4764:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4764:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4767:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4767:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4757:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4757:6:12"
																},
																"nativeSrc": "4757:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4757:15:12"
															},
															"nativeSrc": "4757:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4757:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4598:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4598:180:12"
											},
											{
												"body": {
													"nativeSrc": "4835:269:12",
													"nodeType": "YulBlock",
													"src": "4835:269:12",
													"statements": [
														{
															"nativeSrc": "4845:22:12",
															"nodeType": "YulAssignment",
															"src": "4845:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4859:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4859:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4865:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4865:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4855:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4855:3:12"
																},
																"nativeSrc": "4855:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4855:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4845:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:12"
																}
															]
														},
														{
															"nativeSrc": "4876:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4876:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4906:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4906:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4912:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4902:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4902:3:12"
																},
																"nativeSrc": "4902:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4902:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4880:18:12",
																	"nodeType": "YulTypedName",
																	"src": "4880:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4953:51:12",
																"nodeType": "YulBlock",
																"src": "4953:51:12",
																"statements": [
																	{
																		"nativeSrc": "4967:27:12",
																		"nodeType": "YulAssignment",
																		"src": "4967:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4981:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4981:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4989:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4989:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4977:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4977:3:12"
																			},
																			"nativeSrc": "4977:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4977:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4967:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4967:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4933:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4933:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4926:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4926:6:12"
																},
																"nativeSrc": "4926:26:12",
																"nodeType": "YulFunctionCall",
																"src": "4926:26:12"
															},
															"nativeSrc": "4923:81:12",
															"nodeType": "YulIf",
															"src": "4923:81:12"
														},
														{
															"body": {
																"nativeSrc": "5056:42:12",
																"nodeType": "YulBlock",
																"src": "5056:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5070:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5070:16:12"
																			},
																			"nativeSrc": "5070:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5070:18:12"
																		},
																		"nativeSrc": "5070:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5070:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5020:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "5020:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5043:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5043:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5051:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5051:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5040:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5040:2:12"
																		},
																		"nativeSrc": "5040:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5017:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5017:2:12"
																},
																"nativeSrc": "5017:38:12",
																"nodeType": "YulFunctionCall",
																"src": "5017:38:12"
															},
															"nativeSrc": "5014:84:12",
															"nodeType": "YulIf",
															"src": "5014:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4784:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4819:4:12",
														"nodeType": "YulTypedName",
														"src": "4819:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4828:6:12",
														"nodeType": "YulTypedName",
														"src": "4828:6:12",
														"type": ""
													}
												],
												"src": "4784:320:12"
											},
											{
												"body": {
													"nativeSrc": "5164:87:12",
													"nodeType": "YulBlock",
													"src": "5164:87:12",
													"statements": [
														{
															"nativeSrc": "5174:11:12",
															"nodeType": "YulAssignment",
															"src": "5174:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "5182:3:12",
																"nodeType": "YulIdentifier",
																"src": "5182:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5174:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5174:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5202:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5202:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5205:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5205:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5195:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5195:6:12"
																},
																"nativeSrc": "5195:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5195:14:12"
															},
															"nativeSrc": "5195:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "5195:14:12"
														},
														{
															"nativeSrc": "5218:26:12",
															"nodeType": "YulAssignment",
															"src": "5218:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5236:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5236:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5239:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5239:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5226:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5226:9:12"
																},
																"nativeSrc": "5226:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5226:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5218:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5218:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5110:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5151:3:12",
														"nodeType": "YulTypedName",
														"src": "5151:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5159:4:12",
														"nodeType": "YulTypedName",
														"src": "5159:4:12",
														"type": ""
													}
												],
												"src": "5110:141:12"
											},
											{
												"body": {
													"nativeSrc": "5301:49:12",
													"nodeType": "YulBlock",
													"src": "5301:49:12",
													"statements": [
														{
															"nativeSrc": "5311:33:12",
															"nodeType": "YulAssignment",
															"src": "5311:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5329:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5329:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5336:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5336:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5325:3:12"
																		},
																		"nativeSrc": "5325:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5325:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5341:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5341:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5321:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:12"
																},
																"nativeSrc": "5321:23:12",
																"nodeType": "YulFunctionCall",
																"src": "5321:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5311:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5311:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5257:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5284:5:12",
														"nodeType": "YulTypedName",
														"src": "5284:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5294:6:12",
														"nodeType": "YulTypedName",
														"src": "5294:6:12",
														"type": ""
													}
												],
												"src": "5257:93:12"
											},
											{
												"body": {
													"nativeSrc": "5409:54:12",
													"nodeType": "YulBlock",
													"src": "5409:54:12",
													"statements": [
														{
															"nativeSrc": "5419:37:12",
															"nodeType": "YulAssignment",
															"src": "5419:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5444:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5440:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5440:3:12"
																},
																"nativeSrc": "5440:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5440:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5419:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "5419:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5356:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5384:4:12",
														"nodeType": "YulTypedName",
														"src": "5384:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5390:5:12",
														"nodeType": "YulTypedName",
														"src": "5390:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5400:8:12",
														"nodeType": "YulTypedName",
														"src": "5400:8:12",
														"type": ""
													}
												],
												"src": "5356:107:12"
											},
											{
												"body": {
													"nativeSrc": "5545:317:12",
													"nodeType": "YulBlock",
													"src": "5545:317:12",
													"statements": [
														{
															"nativeSrc": "5555:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5555:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5576:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "5576:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5588:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5588:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5572:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5572:3:12"
																},
																"nativeSrc": "5572:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5572:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5559:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5559:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5599:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5630:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5630:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5641:66:12",
																		"nodeType": "YulLiteral",
																		"src": "5641:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5611:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5611:18:12"
																},
																"nativeSrc": "5611:97:12",
																"nodeType": "YulFunctionCall",
																"src": "5611:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5603:4:12",
																	"nodeType": "YulTypedName",
																	"src": "5603:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5717:51:12",
															"nodeType": "YulAssignment",
															"src": "5717:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5748:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5748:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5759:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "5759:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5729:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "5729:18:12"
																},
																"nativeSrc": "5729:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5729:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5717:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "5717:8:12"
																}
															]
														},
														{
															"nativeSrc": "5777:30:12",
															"nodeType": "YulAssignment",
															"src": "5777:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5790:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5790:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5801:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5801:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5797:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5797:3:12"
																		},
																		"nativeSrc": "5797:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5797:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5786:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5786:3:12"
																},
																"nativeSrc": "5786:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5786:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5777:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5777:5:12"
																}
															]
														},
														{
															"nativeSrc": "5816:40:12",
															"nodeType": "YulAssignment",
															"src": "5816:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5829:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5829:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5840:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "5840:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5850:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5850:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5836:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5836:3:12"
																		},
																		"nativeSrc": "5836:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5836:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5826:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5826:2:12"
																},
																"nativeSrc": "5826:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5826:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5816:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5469:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5506:5:12",
														"nodeType": "YulTypedName",
														"src": "5506:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5513:10:12",
														"nodeType": "YulTypedName",
														"src": "5513:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5525:8:12",
														"nodeType": "YulTypedName",
														"src": "5525:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5538:6:12",
														"nodeType": "YulTypedName",
														"src": "5538:6:12",
														"type": ""
													}
												],
												"src": "5469:393:12"
											},
											{
												"body": {
													"nativeSrc": "5900:28:12",
													"nodeType": "YulBlock",
													"src": "5900:28:12",
													"statements": [
														{
															"nativeSrc": "5910:12:12",
															"nodeType": "YulAssignment",
															"src": "5910:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "5917:5:12",
																"nodeType": "YulIdentifier",
																"src": "5917:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5868:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5886:5:12",
														"nodeType": "YulTypedName",
														"src": "5886:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5896:3:12",
														"nodeType": "YulTypedName",
														"src": "5896:3:12",
														"type": ""
													}
												],
												"src": "5868:60:12"
											},
											{
												"body": {
													"nativeSrc": "5994:82:12",
													"nodeType": "YulBlock",
													"src": "5994:82:12",
													"statements": [
														{
															"nativeSrc": "6004:66:12",
															"nodeType": "YulAssignment",
															"src": "6004:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6062:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6062:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6044:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "6044:17:12"
																				},
																				"nativeSrc": "6044:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6044:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6035:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "6035:8:12"
																		},
																		"nativeSrc": "6035:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6017:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6017:17:12"
																},
																"nativeSrc": "6017:53:12",
																"nodeType": "YulFunctionCall",
																"src": "6017:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6004:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6004:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5934:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5974:5:12",
														"nodeType": "YulTypedName",
														"src": "5974:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5984:9:12",
														"nodeType": "YulTypedName",
														"src": "5984:9:12",
														"type": ""
													}
												],
												"src": "5934:142:12"
											},
											{
												"body": {
													"nativeSrc": "6129:28:12",
													"nodeType": "YulBlock",
													"src": "6129:28:12",
													"statements": [
														{
															"nativeSrc": "6139:12:12",
															"nodeType": "YulAssignment",
															"src": "6139:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "6146:5:12",
																"nodeType": "YulIdentifier",
																"src": "6146:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6139:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6139:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6082:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6115:5:12",
														"nodeType": "YulTypedName",
														"src": "6115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6125:3:12",
														"nodeType": "YulTypedName",
														"src": "6125:3:12",
														"type": ""
													}
												],
												"src": "6082:75:12"
											},
											{
												"body": {
													"nativeSrc": "6239:193:12",
													"nodeType": "YulBlock",
													"src": "6239:193:12",
													"statements": [
														{
															"nativeSrc": "6249:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6249:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6304:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "6304:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6273:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6273:30:12"
																},
																"nativeSrc": "6273:39:12",
																"nodeType": "YulFunctionCall",
																"src": "6273:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6253:16:12",
																	"nodeType": "YulTypedName",
																	"src": "6253:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6328:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6328:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6368:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6368:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6362:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6362:5:12"
																				},
																				"nativeSrc": "6362:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6362:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6375:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6375:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6407:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "6407:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6383:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "6383:23:12"
																				},
																				"nativeSrc": "6383:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6383:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6334:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "6334:27:12"
																		},
																		"nativeSrc": "6334:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6334:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6321:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6321:6:12"
																},
																"nativeSrc": "6321:105:12",
																"nodeType": "YulFunctionCall",
																"src": "6321:105:12"
															},
															"nativeSrc": "6321:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "6321:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6163:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6216:4:12",
														"nodeType": "YulTypedName",
														"src": "6216:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6222:6:12",
														"nodeType": "YulTypedName",
														"src": "6222:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6230:7:12",
														"nodeType": "YulTypedName",
														"src": "6230:7:12",
														"type": ""
													}
												],
												"src": "6163:269:12"
											},
											{
												"body": {
													"nativeSrc": "6487:24:12",
													"nodeType": "YulBlock",
													"src": "6487:24:12",
													"statements": [
														{
															"nativeSrc": "6497:8:12",
															"nodeType": "YulAssignment",
															"src": "6497:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "6504:1:12",
																"nodeType": "YulLiteral",
																"src": "6504:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6497:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6438:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6483:3:12",
														"nodeType": "YulTypedName",
														"src": "6483:3:12",
														"type": ""
													}
												],
												"src": "6438:73:12"
											},
											{
												"body": {
													"nativeSrc": "6570:136:12",
													"nodeType": "YulBlock",
													"src": "6570:136:12",
													"statements": [
														{
															"nativeSrc": "6580:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6580:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6594:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "6594:30:12"
																},
																"nativeSrc": "6594:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6594:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6584:6:12",
																	"nodeType": "YulTypedName",
																	"src": "6584:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6679:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6679:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6685:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6685:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6693:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6693:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6635:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6635:43:12"
																},
																"nativeSrc": "6635:65:12",
																"nodeType": "YulFunctionCall",
																"src": "6635:65:12"
															},
															"nativeSrc": "6635:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "6635:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6517:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6556:4:12",
														"nodeType": "YulTypedName",
														"src": "6556:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6562:6:12",
														"nodeType": "YulTypedName",
														"src": "6562:6:12",
														"type": ""
													}
												],
												"src": "6517:189:12"
											},
											{
												"body": {
													"nativeSrc": "6762:136:12",
													"nodeType": "YulBlock",
													"src": "6762:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6829:63:12",
																"nodeType": "YulBlock",
																"src": "6829:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6873:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6873:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6880:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6880:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6843:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "6843:29:12"
																			},
																			"nativeSrc": "6843:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6843:39:12"
																		},
																		"nativeSrc": "6843:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6843:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6782:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6782:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6789:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6779:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6779:2:12"
																},
																"nativeSrc": "6779:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6779:14:12"
															},
															"nativeSrc": "6772:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6794:26:12",
																"nodeType": "YulBlock",
																"src": "6794:26:12",
																"statements": [
																	{
																		"nativeSrc": "6796:22:12",
																		"nodeType": "YulAssignment",
																		"src": "6796:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6809:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "6809:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6816:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6816:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6805:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6805:3:12"
																			},
																			"nativeSrc": "6805:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6805:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6796:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6796:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6776:2:12",
																"nodeType": "YulBlock",
																"src": "6776:2:12",
																"statements": []
															},
															"src": "6772:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6712:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6750:5:12",
														"nodeType": "YulTypedName",
														"src": "6750:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6757:3:12",
														"nodeType": "YulTypedName",
														"src": "6757:3:12",
														"type": ""
													}
												],
												"src": "6712:186:12"
											},
											{
												"body": {
													"nativeSrc": "6983:464:12",
													"nodeType": "YulBlock",
													"src": "6983:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7009:431:12",
																"nodeType": "YulBlock",
																"src": "7009:431:12",
																"statements": [
																	{
																		"nativeSrc": "7023:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7023:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7071:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "7071:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7039:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "7039:31:12"
																			},
																			"nativeSrc": "7039:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7039:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7027:8:12",
																				"nodeType": "YulTypedName",
																				"src": "7027:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7090:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7090:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7113:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "7113:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7141:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "7141:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7123:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "7123:17:12"
																					},
																					"nativeSrc": "7123:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7123:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7109:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7109:3:12"
																			},
																			"nativeSrc": "7109:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7109:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7094:11:12",
																				"nodeType": "YulTypedName",
																				"src": "7094:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7310:27:12",
																			"nodeType": "YulBlock",
																			"src": "7310:27:12",
																			"statements": [
																				{
																					"nativeSrc": "7312:23:12",
																					"nodeType": "YulAssignment",
																					"src": "7312:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7327:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "7327:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7312:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "7312:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7294:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "7294:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7306:2:12",
																					"nodeType": "YulLiteral",
																					"src": "7306:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7291:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "7291:2:12"
																			},
																			"nativeSrc": "7291:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7291:18:12"
																		},
																		"nativeSrc": "7288:49:12",
																		"nodeType": "YulIf",
																		"src": "7288:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7379:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "7379:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7396:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "7396:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7424:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "7424:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7406:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "7406:17:12"
																							},
																							"nativeSrc": "7406:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "7406:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7392:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7392:3:12"
																					},
																					"nativeSrc": "7392:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7392:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7350:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "7350:28:12"
																			},
																			"nativeSrc": "7350:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7350:80:12"
																		},
																		"nativeSrc": "7350:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7350:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7000:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7000:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7005:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6997:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6997:2:12"
																},
																"nativeSrc": "6997:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6997:11:12"
															},
															"nativeSrc": "6994:446:12",
															"nodeType": "YulIf",
															"src": "6994:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6904:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6959:5:12",
														"nodeType": "YulTypedName",
														"src": "6959:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6966:3:12",
														"nodeType": "YulTypedName",
														"src": "6966:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6971:10:12",
														"nodeType": "YulTypedName",
														"src": "6971:10:12",
														"type": ""
													}
												],
												"src": "6904:543:12"
											},
											{
												"body": {
													"nativeSrc": "7516:54:12",
													"nodeType": "YulBlock",
													"src": "7516:54:12",
													"statements": [
														{
															"nativeSrc": "7526:37:12",
															"nodeType": "YulAssignment",
															"src": "7526:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7551:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7551:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7557:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7557:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7547:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:12"
																},
																"nativeSrc": "7547:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7547:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7526:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "7526:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7453:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7491:4:12",
														"nodeType": "YulTypedName",
														"src": "7491:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7497:5:12",
														"nodeType": "YulTypedName",
														"src": "7497:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7507:8:12",
														"nodeType": "YulTypedName",
														"src": "7507:8:12",
														"type": ""
													}
												],
												"src": "7453:117:12"
											},
											{
												"body": {
													"nativeSrc": "7627:118:12",
													"nodeType": "YulBlock",
													"src": "7627:118:12",
													"statements": [
														{
															"nativeSrc": "7637:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7637:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7686:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7686:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7689:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7689:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7682:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7682:3:12"
																				},
																				"nativeSrc": "7682:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7682:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7701:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7701:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7697:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7697:3:12"
																				},
																				"nativeSrc": "7697:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7697:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7653:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "7653:28:12"
																		},
																		"nativeSrc": "7653:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7653:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7649:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7649:3:12"
																},
																"nativeSrc": "7649:56:12",
																"nodeType": "YulFunctionCall",
																"src": "7649:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7641:4:12",
																	"nodeType": "YulTypedName",
																	"src": "7641:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7714:25:12",
															"nodeType": "YulAssignment",
															"src": "7714:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7728:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7728:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7734:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7734:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7724:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7724:3:12"
																},
																"nativeSrc": "7724:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7724:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7714:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7714:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7576:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7604:4:12",
														"nodeType": "YulTypedName",
														"src": "7604:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7610:5:12",
														"nodeType": "YulTypedName",
														"src": "7610:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7620:6:12",
														"nodeType": "YulTypedName",
														"src": "7620:6:12",
														"type": ""
													}
												],
												"src": "7576:169:12"
											},
											{
												"body": {
													"nativeSrc": "7831:214:12",
													"nodeType": "YulBlock",
													"src": "7831:214:12",
													"statements": [
														{
															"nativeSrc": "7964:37:12",
															"nodeType": "YulAssignment",
															"src": "7964:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7991:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7991:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7997:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7997:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7972:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "7972:18:12"
																},
																"nativeSrc": "7972:29:12",
																"nodeType": "YulFunctionCall",
																"src": "7972:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7964:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7964:4:12"
																}
															]
														},
														{
															"nativeSrc": "8010:29:12",
															"nodeType": "YulAssignment",
															"src": "8010:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8021:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8021:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8031:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8031:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8034:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8034:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8027:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8027:3:12"
																		},
																		"nativeSrc": "8027:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8027:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8018:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8018:2:12"
																},
																"nativeSrc": "8018:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8018:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8010:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8010:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7750:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7812:4:12",
														"nodeType": "YulTypedName",
														"src": "7812:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7818:3:12",
														"nodeType": "YulTypedName",
														"src": "7818:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7826:4:12",
														"nodeType": "YulTypedName",
														"src": "7826:4:12",
														"type": ""
													}
												],
												"src": "7750:295:12"
											},
											{
												"body": {
													"nativeSrc": "8142:1303:12",
													"nodeType": "YulBlock",
													"src": "8142:1303:12",
													"statements": [
														{
															"nativeSrc": "8153:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8153:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8200:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8200:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8167:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "8167:32:12"
																},
																"nativeSrc": "8167:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8167:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8157:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8157:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8289:22:12",
																"nodeType": "YulBlock",
																"src": "8289:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8291:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8291:16:12"
																			},
																			"nativeSrc": "8291:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8291:18:12"
																		},
																		"nativeSrc": "8291:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8291:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8261:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8261:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8269:18:12",
																		"nodeType": "YulLiteral",
																		"src": "8269:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8258:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8258:2:12"
																},
																"nativeSrc": "8258:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8258:30:12"
															},
															"nativeSrc": "8255:56:12",
															"nodeType": "YulIf",
															"src": "8255:56:12"
														},
														{
															"nativeSrc": "8321:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8321:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8367:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8367:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8361:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "8361:5:12"
																		},
																		"nativeSrc": "8361:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8361:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8335:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "8335:25:12"
																},
																"nativeSrc": "8335:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8335:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8325:6:12",
																	"nodeType": "YulTypedName",
																	"src": "8325:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8466:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8466:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8472:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8472:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8480:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8480:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8420:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "8420:45:12"
																},
																"nativeSrc": "8420:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8420:67:12"
															},
															"nativeSrc": "8420:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "8420:67:12"
														},
														{
															"nativeSrc": "8497:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8497:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8514:1:12",
																"nodeType": "YulLiteral",
																"src": "8514:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8501:9:12",
																	"nodeType": "YulTypedName",
																	"src": "8501:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8525:17:12",
															"nodeType": "YulAssignment",
															"src": "8525:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "8538:4:12",
																"nodeType": "YulLiteral",
																"src": "8538:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8525:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "8525:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8589:611:12",
																		"nodeType": "YulBlock",
																		"src": "8589:611:12",
																		"statements": [
																			{
																				"nativeSrc": "8603:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8603:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8622:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8622:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8634:4:12",
																									"nodeType": "YulLiteral",
																									"src": "8634:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8630:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "8630:3:12"
																							},
																							"nativeSrc": "8630:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "8630:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8618:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8618:3:12"
																					},
																					"nativeSrc": "8618:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8618:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8607:7:12",
																						"nodeType": "YulTypedName",
																						"src": "8607:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8654:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8654:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8700:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "8700:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8668:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "8668:31:12"
																					},
																					"nativeSrc": "8668:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8668:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8658:6:12",
																						"nodeType": "YulTypedName",
																						"src": "8658:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8718:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8718:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8727:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8727:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8722:1:12",
																						"nodeType": "YulTypedName",
																						"src": "8722:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8786:163:12",
																					"nodeType": "YulBlock",
																					"src": "8786:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8811:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8811:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8829:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "8829:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8834:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "8834:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8825:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "8825:3:12"
																												},
																												"nativeSrc": "8825:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "8825:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8819:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "8819:5:12"
																										},
																										"nativeSrc": "8819:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "8819:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8804:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8804:6:12"
																								},
																								"nativeSrc": "8804:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8804:42:12"
																							},
																							"nativeSrc": "8804:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "8804:42:12"
																						},
																						{
																							"nativeSrc": "8863:24:12",
																							"nodeType": "YulAssignment",
																							"src": "8863:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8877:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "8877:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8885:1:12",
																										"nodeType": "YulLiteral",
																										"src": "8885:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8873:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8873:3:12"
																								},
																								"nativeSrc": "8873:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8873:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8863:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "8863:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8904:31:12",
																							"nodeType": "YulAssignment",
																							"src": "8904:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8921:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "8921:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8932:2:12",
																										"nodeType": "YulLiteral",
																										"src": "8932:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8917:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8917:3:12"
																								},
																								"nativeSrc": "8917:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8917:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8904:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "8904:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8752:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "8752:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8755:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "8755:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8749:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "8749:2:12"
																					},
																					"nativeSrc": "8749:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8749:14:12"
																				},
																				"nativeSrc": "8741:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8764:21:12",
																					"nodeType": "YulBlock",
																					"src": "8764:21:12",
																					"statements": [
																						{
																							"nativeSrc": "8766:17:12",
																							"nodeType": "YulAssignment",
																							"src": "8766:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8775:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "8775:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8778:4:12",
																										"nodeType": "YulLiteral",
																										"src": "8778:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8771:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "8771:3:12"
																								},
																								"nativeSrc": "8771:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "8771:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8766:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "8766:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8745:3:12",
																					"nodeType": "YulBlock",
																					"src": "8745:3:12",
																					"statements": []
																				},
																				"src": "8741:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "8985:156:12",
																					"nodeType": "YulBlock",
																					"src": "8985:156:12",
																					"statements": [
																						{
																							"nativeSrc": "9003:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9003:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9030:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "9030:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9035:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9035:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9026:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "9026:3:12"
																										},
																										"nativeSrc": "9026:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9026:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9020:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9020:5:12"
																								},
																								"nativeSrc": "9020:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9020:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9007:9:12",
																									"nodeType": "YulTypedName",
																									"src": "9007:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9070:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "9070:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9097:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9097:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9112:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "9112:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9120:4:12",
																														"nodeType": "YulLiteral",
																														"src": "9120:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9108:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "9108:3:12"
																												},
																												"nativeSrc": "9108:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "9108:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9078:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "9078:18:12"
																										},
																										"nativeSrc": "9078:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9078:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9063:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9063:6:12"
																								},
																								"nativeSrc": "9063:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9063:64:12"
																							},
																							"nativeSrc": "9063:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "9063:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8968:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "8968:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8977:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "8977:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8965:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "8965:2:12"
																					},
																					"nativeSrc": "8965:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8965:19:12"
																				},
																				"nativeSrc": "8962:179:12",
																				"nodeType": "YulIf",
																				"src": "8962:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9161:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9161:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9175:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "9175:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9183:1:12",
																											"nodeType": "YulLiteral",
																											"src": "9183:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9171:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "9171:3:12"
																									},
																									"nativeSrc": "9171:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "9171:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9187:1:12",
																									"nodeType": "YulLiteral",
																									"src": "9187:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9167:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "9167:3:12"
																							},
																							"nativeSrc": "9167:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9167:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9154:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9154:6:12"
																					},
																					"nativeSrc": "9154:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9154:36:12"
																				},
																				"nativeSrc": "9154:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9154:36:12"
																			}
																		]
																	},
																	"nativeSrc": "8582:618:12",
																	"nodeType": "YulCase",
																	"src": "8582:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8587:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8587:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9217:222:12",
																		"nodeType": "YulBlock",
																		"src": "9217:222:12",
																		"statements": [
																			{
																				"nativeSrc": "9231:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9231:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9244:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9244:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9235:5:12",
																						"nodeType": "YulTypedName",
																						"src": "9235:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9268:67:12",
																					"nodeType": "YulBlock",
																					"src": "9268:67:12",
																					"statements": [
																						{
																							"nativeSrc": "9286:35:12",
																							"nodeType": "YulAssignment",
																							"src": "9286:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9305:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "9305:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9310:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "9310:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9301:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "9301:3:12"
																										},
																										"nativeSrc": "9301:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "9301:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9295:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9295:5:12"
																								},
																								"nativeSrc": "9295:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "9295:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9286:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9286:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9261:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9261:6:12"
																				},
																				"nativeSrc": "9258:77:12",
																				"nodeType": "YulIf",
																				"src": "9258:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9355:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "9355:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9414:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "9414:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9421:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "9421:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9361:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "9361:52:12"
																							},
																							"nativeSrc": "9361:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "9361:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9348:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9348:6:12"
																					},
																					"nativeSrc": "9348:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "9348:81:12"
																				},
																				"nativeSrc": "9348:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "9348:81:12"
																			}
																		]
																	},
																	"nativeSrc": "9209:230:12",
																	"nodeType": "YulCase",
																	"src": "9209:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8562:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8562:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8570:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8570:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8559:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8559:2:12"
																},
																"nativeSrc": "8559:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8559:14:12"
															},
															"nativeSrc": "8552:887:12",
															"nodeType": "YulSwitch",
															"src": "8552:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8050:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8131:4:12",
														"nodeType": "YulTypedName",
														"src": "8131:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8137:3:12",
														"nodeType": "YulTypedName",
														"src": "8137:3:12",
														"type": ""
													}
												],
												"src": "8050:1395:12"
											},
											{
												"body": {
													"nativeSrc": "9516:53:12",
													"nodeType": "YulBlock",
													"src": "9516:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9533:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9533:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9556:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9556:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9538:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "9538:17:12"
																		},
																		"nativeSrc": "9538:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9526:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:12"
																},
																"nativeSrc": "9526:37:12",
																"nodeType": "YulFunctionCall",
																"src": "9526:37:12"
															},
															"nativeSrc": "9526:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "9526:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9451:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9504:5:12",
														"nodeType": "YulTypedName",
														"src": "9504:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9511:3:12",
														"nodeType": "YulTypedName",
														"src": "9511:3:12",
														"type": ""
													}
												],
												"src": "9451:118:12"
											},
											{
												"body": {
													"nativeSrc": "9673:124:12",
													"nodeType": "YulBlock",
													"src": "9673:124:12",
													"statements": [
														{
															"nativeSrc": "9683:26:12",
															"nodeType": "YulAssignment",
															"src": "9683:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9695:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9691:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:12"
																},
																"nativeSrc": "9691:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9691:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9683:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9683:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9763:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9776:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9787:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9787:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9772:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:12"
																		},
																		"nativeSrc": "9772:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9719:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9719:43:12"
																},
																"nativeSrc": "9719:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9719:71:12"
															},
															"nativeSrc": "9719:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9719:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9575:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9645:9:12",
														"nodeType": "YulTypedName",
														"src": "9645:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9657:6:12",
														"nodeType": "YulTypedName",
														"src": "9657:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9668:4:12",
														"nodeType": "YulTypedName",
														"src": "9668:4:12",
														"type": ""
													}
												],
												"src": "9575:222:12"
											},
											{
												"body": {
													"nativeSrc": "9847:147:12",
													"nodeType": "YulBlock",
													"src": "9847:147:12",
													"statements": [
														{
															"nativeSrc": "9857:25:12",
															"nodeType": "YulAssignment",
															"src": "9857:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:12"
																},
																"nativeSrc": "9862:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:12"
																}
															]
														},
														{
															"nativeSrc": "9891:25:12",
															"nodeType": "YulAssignment",
															"src": "9891:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:12"
																},
																"nativeSrc": "9896:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:12"
																}
															]
														},
														{
															"nativeSrc": "9925:16:12",
															"nodeType": "YulAssignment",
															"src": "9925:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:12"
																},
																"nativeSrc": "9932:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:12",
																"nodeType": "YulBlock",
																"src": "9965:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:12"
																			},
																			"nativeSrc": "9967:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:12"
																		},
																		"nativeSrc": "9967:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:12"
																},
																"nativeSrc": "9954:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:12"
															},
															"nativeSrc": "9951:36:12",
															"nodeType": "YulIf",
															"src": "9951:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:12",
														"nodeType": "YulTypedName",
														"src": "9834:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:12",
														"nodeType": "YulTypedName",
														"src": "9837:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:12",
														"nodeType": "YulTypedName",
														"src": "9843:3:12",
														"type": ""
													}
												],
												"src": "9803:191:12"
											},
											{
												"body": {
													"nativeSrc": "10065:53:12",
													"nodeType": "YulBlock",
													"src": "10065:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10082:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10105:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10087:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:12"
																		},
																		"nativeSrc": "10087:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:12"
																},
																"nativeSrc": "10075:37:12",
																"nodeType": "YulFunctionCall",
																"src": "10075:37:12"
															},
															"nativeSrc": "10075:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10000:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10053:5:12",
														"nodeType": "YulTypedName",
														"src": "10053:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10060:3:12",
														"nodeType": "YulTypedName",
														"src": "10060:3:12",
														"type": ""
													}
												],
												"src": "10000:118:12"
											},
											{
												"body": {
													"nativeSrc": "10278:288:12",
													"nodeType": "YulBlock",
													"src": "10278:288:12",
													"statements": [
														{
															"nativeSrc": "10288:26:12",
															"nodeType": "YulAssignment",
															"src": "10288:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:12"
																},
																"nativeSrc": "10296:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:12"
																		},
																		"nativeSrc": "10377:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:12"
																},
																"nativeSrc": "10324:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:12"
															},
															"nativeSrc": "10324:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:12"
																		},
																		"nativeSrc": "10458:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10405:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:12"
																},
																"nativeSrc": "10405:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:12"
															},
															"nativeSrc": "10405:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:12"
																		},
																		"nativeSrc": "10540:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:12"
																},
																"nativeSrc": "10487:72:12",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:12"
															},
															"nativeSrc": "10487:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:12",
														"nodeType": "YulTypedName",
														"src": "10234:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:12",
														"nodeType": "YulTypedName",
														"src": "10246:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:12",
														"nodeType": "YulTypedName",
														"src": "10254:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:12",
														"nodeType": "YulTypedName",
														"src": "10262:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:12",
														"nodeType": "YulTypedName",
														"src": "10273:4:12",
														"type": ""
													}
												],
												"src": "10124:442:12"
											},
											{
												"body": {
													"nativeSrc": "10670:124:12",
													"nodeType": "YulBlock",
													"src": "10670:124:12",
													"statements": [
														{
															"nativeSrc": "10680:26:12",
															"nodeType": "YulAssignment",
															"src": "10680:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10692:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10703:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10688:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:12"
																},
																"nativeSrc": "10688:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10688:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10760:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:12"
																		},
																		"nativeSrc": "10769:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10716:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:12"
																},
																"nativeSrc": "10716:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10716:71:12"
															},
															"nativeSrc": "10716:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10572:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:12",
														"nodeType": "YulTypedName",
														"src": "10642:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:12",
														"nodeType": "YulTypedName",
														"src": "10654:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10665:4:12",
														"nodeType": "YulTypedName",
														"src": "10665:4:12",
														"type": ""
													}
												],
												"src": "10572:222:12"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405262000014620001de60201b60201c565b600a6200002291906200078a565b62989680620000329190620007da565b60065534801562000041575f80fd5b506040516200285e3803806200285e833981810160405281019062000067919062000889565b806040518060400160405280600981526020017f4765656b546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f47544b00000000000000000000000000000000000000000000000000000000008152508160039081620000e5919062000b14565b508060049081620000f7919062000b14565b5050505f60055f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000186575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200017d919062000c09565b60405180910390fd5b6200019781620001e660201b60201c565b50620001d733620001ad620001de60201b60201c565b600a620001bb91906200078a565b622625a0620001cb9190620007da565b620002ab60201b60201c565b5062000cc5565b5f6012905090565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200031e575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000315919062000c09565b60405180910390fd5b620003315f83836200033560201b60201c565b5050565b620003488383836200034d60201b60201c565b505050565b6200035d6200037560201b60201c565b62000370838383620003bf60201b60201c565b505050565b62000385620005e360201b60201c565b15620003bd576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000413578060025f82825462000406919062000c24565b92505081905550620004e4565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200049f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004969392919062000c6f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200052d578060025f828254039250508190555062000577565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005d6919062000caa565b60405180910390a3505050565b5f60055f9054906101000a900460ff16905090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000682578086048111156200065a5762000659620005f8565b5b60018516156200066a5780820291505b80810290506200067a8562000625565b94506200063a565b94509492505050565b5f826200069c57600190506200076e565b81620006ab575f90506200076e565b8160018114620006c45760028114620006cf5762000705565b60019150506200076e565b60ff841115620006e457620006e3620005f8565b5b8360020a915084821115620006fe57620006fd620005f8565b5b506200076e565b5060208310610133831016604e8410600b84101617156200073f5782820a905083811115620007395762000738620005f8565b5b6200076e565b6200074e848484600162000631565b92509050818404811115620007685762000767620005f8565b5b81810290505b9392505050565b5f819050919050565b5f60ff82169050919050565b5f620007968262000775565b9150620007a3836200077e565b9250620007d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200068b565b905092915050565b5f620007e68262000775565b9150620007f38362000775565b9250828202620008038162000775565b915082820484148315176200081d576200081c620005f8565b5b5092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620008538262000828565b9050919050565b620008658162000847565b811462000870575f80fd5b50565b5f8151905062000883816200085a565b92915050565b5f60208284031215620008a157620008a062000824565b5b5f620008b08482850162000873565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200093557607f821691505b6020821081036200094b576200094a620008f0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620009af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000972565b620009bb868362000972565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620009fc620009f6620009f08462000775565b620009d3565b62000775565b9050919050565b5f819050919050565b62000a1783620009dc565b62000a2f62000a268262000a03565b8484546200097e565b825550505050565b5f90565b62000a4562000a37565b62000a5281848462000a0c565b505050565b5b8181101562000a795762000a6d5f8262000a3b565b60018101905062000a58565b5050565b601f82111562000ac85762000a928162000951565b62000a9d8462000963565b8101602085101562000aad578190505b62000ac562000abc8562000963565b83018262000a57565b50505b505050565b5f82821c905092915050565b5f62000aea5f198460080262000acd565b1980831691505092915050565b5f62000b04838362000ad9565b9150826002028217905092915050565b62000b1f82620008b9565b67ffffffffffffffff81111562000b3b5762000b3a620008c3565b5b62000b4782546200091d565b62000b5482828562000a7d565b5f60209050601f83116001811462000b8a575f841562000b75578287015190505b62000b81858262000af7565b86555062000bf0565b601f19841662000b9a8662000951565b5f5b8281101562000bc35784890151825560018201915060208501945060208101905062000b9c565b8683101562000be3578489015162000bdf601f89168262000ad9565b8355505b6001600288020188555050505b505050505050565b62000c038162000847565b82525050565b5f60208201905062000c1e5f83018462000bf8565b92915050565b5f62000c308262000775565b915062000c3d8362000775565b925082820190508082111562000c585762000c57620005f8565b5b92915050565b62000c698162000775565b82525050565b5f60608201905062000c845f83018662000bf8565b62000c93602083018562000c5e565b62000ca2604083018462000c5e565b949350505050565b5f60208201905062000cbf5f83018462000c5e565b92915050565b611b8b8062000cd35f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80635c975abb116100ab5780638da5cb5b1161006f5780638da5cb5b146102b957806395d89b41146102d7578063a9059cbb146102f5578063dd62ed3e14610325578063f2fde38b146103555761011f565b80635c975abb1461023b57806370a0823114610259578063715018a61461028957806379cc6790146102935780638456cb59146102af5761011f565b8063313ce567116100f2578063313ce567146101bf5780633f4ba83a146101dd57806340c10f19146101e757806342966c6814610203578063486590971461021f5761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd1461017157806323b872dd1461018f575b5f80fd5b61012b610371565b6040516101389190611485565b60405180910390f35b61015b60048036038101906101569190611536565b610401565b604051610168919061158e565b60405180910390f35b610179610423565b60405161018691906115b6565b60405180910390f35b6101a960048036038101906101a491906115cf565b61042c565b6040516101b6919061158e565b60405180910390f35b6101c761045a565b6040516101d4919061163a565b60405180910390f35b6101e5610462565b005b61020160048036038101906101fc9190611536565b610474565b005b61021d60048036038101906102189190611653565b6104e1565b005b610239600480360381019061023491906116a1565b6104f5565b005b61024361054e565b604051610250919061158e565b60405180910390f35b610273600480360381019061026e91906116f1565b610563565b60405161028091906115b6565b60405180910390f35b6102916105a8565b005b6102ad60048036038101906102a89190611536565b6105bb565b005b6102b76105db565b005b6102c16105ed565b6040516102ce919061172b565b60405180910390f35b6102df610616565b6040516102ec9190611485565b60405180910390f35b61030f600480360381019061030a9190611536565b6106a6565b60405161031c919061158e565b60405180910390f35b61033f600480360381019061033a9190611744565b6106c8565b60405161034c91906115b6565b60405180910390f35b61036f600480360381019061036a91906116f1565b61074a565b005b606060038054610380906117af565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac906117af565b80156103f75780601f106103ce576101008083540402835291602001916103f7565b820191905f5260205f20905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b5f8061040b6107ce565b90506104188185856107d5565b600191505092915050565b5f600254905090565b5f806104366107ce565b90506104438582856107e7565b61044e858585610879565b60019150509392505050565b5f6012905090565b61046a610969565b6104726109f0565b565b61047c610969565b60065481610488610423565b610492919061180c565b11156104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca90611889565b60405180910390fd5b6104dd8282610a51565b5050565b6104f26104ec6107ce565b82610ad0565b50565b5f6105008383610b4f565b905061050c84826106a6565b507ffb5428f39f62fa9aa68d6c0db25fff3552d2958850e862561354749ea2bbef3d308583604051610540939291906118a7565b60405180910390a150505050565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105b0610969565b6105b95f610e43565b565b6105cd826105c76107ce565b836107e7565b6105d78282610ad0565b5050565b6105e3610969565b6105eb610f08565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610625906117af565b80601f0160208091040260200160405190810160405280929190818152602001828054610651906117af565b801561069c5780601f106106735761010080835404028352916020019161069c565b820191905f5260205f20905b81548152906001019060200180831161067f57829003601f168201915b5050505050905090565b5f806106b06107ce565b90506106bd818585610879565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610752610969565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107b9919061172b565b60405180910390fd5b6107cb81610e43565b50565b5f33905090565b6107e28383836001610f6a565b505050565b5f6107f284846106c8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108735781811015610864578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161085b939291906118dc565b60405180910390fd5b61087284848484035f610f6a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108e9575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108e0919061172b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610959575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610950919061172b565b60405180910390fd5b610964838383611139565b505050565b6109716107ce565b73ffffffffffffffffffffffffffffffffffffffff1661098f6105ed565b73ffffffffffffffffffffffffffffffffffffffff16146109ee576109b26107ce565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109e5919061172b565b60405180910390fd5b565b6109f8611149565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610a3a6107ce565b604051610a47919061172b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ac1575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ab8919061172b565b60405180910390fd5b610acc5f8383611139565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b40575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b37919061172b565b60405180910390fd5b610b4b825f83611139565b5050565b5f805f90505f610b5d610423565b905060646019600654610b709190611911565b610b7a919061197f565b8110158015610ba2575060646032600654610b959190611911565b610b9f919061197f565b81105b15610c4f575f6001811115610bba57610bb96119af565b5b846001811115610bcd57610bcc6119af565b5b03610c10576064610bdc61045a565b600a610be89190611b0b565b866002610bf59190611911565b610bff9190611911565b610c09919061197f565b9150610c4a565b6064610c1a61045a565b600a610c269190611b0b565b866001610c339190611911565b610c3d9190611911565b610c47919061197f565b91505b610e38565b60646032600654610c609190611911565b610c6a919061197f565b8110158015610c9257506064604b600654610c859190611911565b610c8f919061197f565b81105b15610d40575f6001811115610caa57610ca96119af565b5b846001811115610cbd57610cbc6119af565b5b03610d00576064610ccc61045a565b600a610cd89190611b0b565b866001610ce59190611911565b610cef9190611911565b610cf9919061197f565b9150610d3b565b6103e8610d0b61045a565b600a610d179190611b0b565b866005610d249190611911565b610d2e9190611911565b610d38919061197f565b91505b610e37565b6064604b600654610d519190611911565b610d5b919061197f565b8110158015610d8357506064605f600654610d769190611911565b610d80919061197f565b81105b15610e32575f6001811115610d9b57610d9a6119af565b5b846001811115610dae57610dad6119af565b5b03610df2576103e8610dbe61045a565b600a610dca9190611b0b565b866005610dd79190611911565b610de19190611911565b610deb919061197f565b9150610e2d565b612710610dfd61045a565b600a610e099190611b0b565b866019610e169190611911565b610e209190611911565b610e2a919061197f565b91505b610e36565b5f91505b5b5b819250505092915050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f10611189565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f536107ce565b604051610f60919061172b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fda575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fd1919061172b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361104a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611041919061172b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611133578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161112a91906115b6565b60405180910390a35b50505050565b6111448383836111ca565b505050565b61115161054e565b611187576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61119161054e565b156111c8576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111d2611189565b6111dd8383836111e2565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611232578060025f828254611226919061180c565b92505081905550611300565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156112bb578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016112b2939291906118dc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611347578060025f8282540392505081905550611391565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113ee91906115b6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611432578082015181840152602081019050611417565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611457826113fb565b6114618185611405565b9350611471818560208601611415565b61147a8161143d565b840191505092915050565b5f6020820190508181035f83015261149d818461144d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114d2826114a9565b9050919050565b6114e2816114c8565b81146114ec575f80fd5b50565b5f813590506114fd816114d9565b92915050565b5f819050919050565b61151581611503565b811461151f575f80fd5b50565b5f813590506115308161150c565b92915050565b5f806040838503121561154c5761154b6114a5565b5b5f611559858286016114ef565b925050602061156a85828601611522565b9150509250929050565b5f8115159050919050565b61158881611574565b82525050565b5f6020820190506115a15f83018461157f565b92915050565b6115b081611503565b82525050565b5f6020820190506115c95f8301846115a7565b92915050565b5f805f606084860312156115e6576115e56114a5565b5b5f6115f3868287016114ef565b9350506020611604868287016114ef565b925050604061161586828701611522565b9150509250925092565b5f60ff82169050919050565b6116348161161f565b82525050565b5f60208201905061164d5f83018461162b565b92915050565b5f60208284031215611668576116676114a5565b5b5f61167584828501611522565b91505092915050565b6002811061168a575f80fd5b50565b5f8135905061169b8161167e565b92915050565b5f805f606084860312156116b8576116b76114a5565b5b5f6116c5868287016114ef565b93505060206116d686828701611522565b92505060406116e78682870161168d565b9150509250925092565b5f60208284031215611706576117056114a5565b5b5f611713848285016114ef565b91505092915050565b611725816114c8565b82525050565b5f60208201905061173e5f83018461171c565b92915050565b5f806040838503121561175a576117596114a5565b5b5f611767858286016114ef565b9250506020611778858286016114ef565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117c657607f821691505b6020821081036117d9576117d8611782565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61181682611503565b915061182183611503565b9250828201905080821115611839576118386117df565b5b92915050565b7f576520736f6c64206f75740000000000000000000000000000000000000000005f82015250565b5f611873600b83611405565b915061187e8261183f565b602082019050919050565b5f6020820190508181035f8301526118a081611867565b9050919050565b5f6060820190506118ba5f83018661171c565b6118c7602083018561171c565b6118d460408301846115a7565b949350505050565b5f6060820190506118ef5f83018661171c565b6118fc60208301856115a7565b61190960408301846115a7565b949350505050565b5f61191b82611503565b915061192683611503565b925082820261193481611503565b9150828204841483151761194b5761194a6117df565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61198982611503565b915061199483611503565b9250826119a4576119a3611952565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611a3157808604811115611a0d57611a0c6117df565b5b6001851615611a1c5780820291505b8081029050611a2a856119dc565b94506119f1565b94509492505050565b5f82611a495760019050611b04565b81611a56575f9050611b04565b8160018114611a6c5760028114611a7657611aa5565b6001915050611b04565b60ff841115611a8857611a876117df565b5b8360020a915084821115611a9f57611a9e6117df565b5b50611b04565b5060208310610133831016604e8410600b8410161715611ada5782820a905083811115611ad557611ad46117df565b5b611b04565b611ae784848460016119e8565b92509050818404811115611afe57611afd6117df565b5b81810290505b9392505050565b5f611b1582611503565b9150611b208361161f565b9250611b4d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611a3a565b90509291505056fea2646970667358221220682ea60214ed887cc4b9cf3a621e5a293bc8bd7461d8f3a8dfa868900691491b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x14 PUSH3 0x1DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x22 SWAP2 SWAP1 PUSH3 0x78A JUMP JUMPDEST PUSH3 0x989680 PUSH3 0x32 SWAP2 SWAP1 PUSH3 0x7DA JUMP JUMPDEST PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x285E CODESIZE SUB DUP1 PUSH3 0x285E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x67 SWAP2 SWAP1 PUSH3 0x889 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4765656B546F6B656E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x47544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xE5 SWAP2 SWAP1 PUSH3 0xB14 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xF7 SWAP2 SWAP1 PUSH3 0xB14 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x186 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17D SWAP2 SWAP1 PUSH3 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x197 DUP2 PUSH3 0x1E6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1D7 CALLER PUSH3 0x1AD PUSH3 0x1DE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x1BB SWAP2 SWAP1 PUSH3 0x78A JUMP JUMPDEST PUSH3 0x2625A0 PUSH3 0x1CB SWAP2 SWAP1 PUSH3 0x7DA JUMP JUMPDEST PUSH3 0x2AB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xCC5 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x31E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x315 SWAP2 SWAP1 PUSH3 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x331 PUSH0 DUP4 DUP4 PUSH3 0x335 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x348 DUP4 DUP4 DUP4 PUSH3 0x34D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x35D PUSH3 0x375 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x370 DUP4 DUP4 DUP4 PUSH3 0x3BF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x385 PUSH3 0x5E3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x3BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x413 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x406 SWAP2 SWAP1 PUSH3 0xC24 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4E4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x49F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x496 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x52D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x577 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5D6 SWAP2 SWAP1 PUSH3 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x682 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x65A JUMPI PUSH3 0x659 PUSH3 0x5F8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x66A JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x67A DUP6 PUSH3 0x625 JUMP JUMPDEST SWAP5 POP PUSH3 0x63A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x69C JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0x76E JUMP JUMPDEST DUP2 PUSH3 0x6AB JUMPI PUSH0 SWAP1 POP PUSH3 0x76E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x6C4 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x6CF JUMPI PUSH3 0x705 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x76E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x6E4 JUMPI PUSH3 0x6E3 PUSH3 0x5F8 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0x6FE JUMPI PUSH3 0x6FD PUSH3 0x5F8 JUMP JUMPDEST JUMPDEST POP PUSH3 0x76E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x73F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0x739 JUMPI PUSH3 0x738 PUSH3 0x5F8 JUMP JUMPDEST JUMPDEST PUSH3 0x76E JUMP JUMPDEST PUSH3 0x74E DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x631 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0x768 JUMPI PUSH3 0x767 PUSH3 0x5F8 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x796 DUP3 PUSH3 0x775 JUMP JUMPDEST SWAP2 POP PUSH3 0x7A3 DUP4 PUSH3 0x77E JUMP JUMPDEST SWAP3 POP PUSH3 0x7D2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x68B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x7E6 DUP3 PUSH3 0x775 JUMP JUMPDEST SWAP2 POP PUSH3 0x7F3 DUP4 PUSH3 0x775 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x803 DUP2 PUSH3 0x775 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x81D JUMPI PUSH3 0x81C PUSH3 0x5F8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x853 DUP3 PUSH3 0x828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x865 DUP2 PUSH3 0x847 JUMP JUMPDEST DUP2 EQ PUSH3 0x870 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x883 DUP2 PUSH3 0x85A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x8A1 JUMPI PUSH3 0x8A0 PUSH3 0x824 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x8B0 DUP5 DUP3 DUP6 ADD PUSH3 0x873 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x935 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x94B JUMPI PUSH3 0x94A PUSH3 0x8F0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x9AF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x972 JUMP JUMPDEST PUSH3 0x9BB DUP7 DUP4 PUSH3 0x972 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x9FC PUSH3 0x9F6 PUSH3 0x9F0 DUP5 PUSH3 0x775 JUMP JUMPDEST PUSH3 0x9D3 JUMP JUMPDEST PUSH3 0x775 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA17 DUP4 PUSH3 0x9DC JUMP JUMPDEST PUSH3 0xA2F PUSH3 0xA26 DUP3 PUSH3 0xA03 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x97E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0xA45 PUSH3 0xA37 JUMP JUMPDEST PUSH3 0xA52 DUP2 DUP5 DUP5 PUSH3 0xA0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xA79 JUMPI PUSH3 0xA6D PUSH0 DUP3 PUSH3 0xA3B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xA58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xAC8 JUMPI PUSH3 0xA92 DUP2 PUSH3 0x951 JUMP JUMPDEST PUSH3 0xA9D DUP5 PUSH3 0x963 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xAAD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xAC5 PUSH3 0xABC DUP6 PUSH3 0x963 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xA57 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xAEA PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xACD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB04 DUP4 DUP4 PUSH3 0xAD9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB1F DUP3 PUSH3 0x8B9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xB3B JUMPI PUSH3 0xB3A PUSH3 0x8C3 JUMP JUMPDEST JUMPDEST PUSH3 0xB47 DUP3 SLOAD PUSH3 0x91D JUMP JUMPDEST PUSH3 0xB54 DUP3 DUP3 DUP6 PUSH3 0xA7D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xB8A JUMPI PUSH0 DUP5 ISZERO PUSH3 0xB75 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xB81 DUP6 DUP3 PUSH3 0xAF7 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xBF0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xB9A DUP7 PUSH3 0x951 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xBC3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xB9C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xBE3 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xBDF PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xAD9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xC03 DUP2 PUSH3 0x847 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC1E PUSH0 DUP4 ADD DUP5 PUSH3 0xBF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC30 DUP3 PUSH3 0x775 JUMP JUMPDEST SWAP2 POP PUSH3 0xC3D DUP4 PUSH3 0x775 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xC58 JUMPI PUSH3 0xC57 PUSH3 0x5F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xC69 DUP2 PUSH3 0x775 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xC84 PUSH0 DUP4 ADD DUP7 PUSH3 0xBF8 JUMP JUMPDEST PUSH3 0xC93 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xC5E JUMP JUMPDEST PUSH3 0xCA2 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xC5E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xCBF PUSH0 DUP4 ADD DUP5 PUSH3 0xC5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B8B DUP1 PUSH3 0xCD3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2AF JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x48659097 EQ PUSH2 0x21F JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH2 0x5DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C1 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x17AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x17AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x40B PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x418 DUP2 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x436 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x443 DUP6 DUP3 DUP6 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x44E DUP6 DUP6 DUP6 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0x969 JUMP JUMPDEST PUSH2 0x472 PUSH2 0x9F0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x47C PUSH2 0x969 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH2 0x488 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST GT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0xA51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4F2 PUSH2 0x4EC PUSH2 0x7CE JUMP JUMPDEST DUP3 PUSH2 0xAD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x500 DUP4 DUP4 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP PUSH2 0x50C DUP5 DUP3 PUSH2 0x6A6 JUMP JUMPDEST POP PUSH32 0xFB5428F39F62FA9AA68D6C0DB25FFF3552D2958850E862561354749EA2BBEF3D ADDRESS DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x540 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 PUSH2 0x969 JUMP JUMPDEST PUSH2 0x5B9 PUSH0 PUSH2 0xE43 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5CD DUP3 PUSH2 0x5C7 PUSH2 0x7CE JUMP JUMPDEST DUP4 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x5D7 DUP3 DUP3 PUSH2 0xAD0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5E3 PUSH2 0x969 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0xF08 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x625 SWAP1 PUSH2 0x17AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x651 SWAP1 PUSH2 0x17AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x69C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x673 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x69C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6B0 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x6BD DUP2 DUP6 DUP6 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x752 PUSH2 0x969 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0xE43 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F2 DUP5 DUP5 PUSH2 0x6C8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x873 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x864 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x872 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x959 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x964 DUP4 DUP4 DUP4 PUSH2 0x1139 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x971 PUSH2 0x7CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x98F PUSH2 0x5ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9EE JUMPI PUSH2 0x9B2 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x9F8 PUSH2 0x1149 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xA3A PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACC PUSH0 DUP4 DUP4 PUSH2 0x1139 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4B DUP3 PUSH0 DUP4 PUSH2 0x1139 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH2 0xB5D PUSH2 0x423 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0x19 PUSH1 0x6 SLOAD PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xB7A SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xBA2 JUMPI POP PUSH1 0x64 PUSH1 0x32 PUSH1 0x6 SLOAD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xC4F JUMPI PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBBA JUMPI PUSH2 0xBB9 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0x19AF JUMP JUMPDEST JUMPDEST SUB PUSH2 0xC10 JUMPI PUSH1 0x64 PUSH2 0xBDC PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x2 PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x64 PUSH2 0xC1A PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x32 PUSH1 0x6 SLOAD PUSH2 0xC60 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xC92 JUMPI POP PUSH1 0x64 PUSH1 0x4B PUSH1 0x6 SLOAD PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xD40 JUMPI PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCAA JUMPI PUSH2 0xCA9 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCBD JUMPI PUSH2 0xCBC PUSH2 0x19AF JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD00 JUMPI PUSH1 0x64 PUSH2 0xCCC PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH2 0xCE5 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xD0B PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x5 PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xD2E SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x4B PUSH1 0x6 SLOAD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xD83 JUMPI POP PUSH1 0x64 PUSH1 0x5F PUSH1 0x6 SLOAD PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xE32 JUMPI PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD9B JUMPI PUSH2 0xD9A PUSH2 0x19AF JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDAE JUMPI PUSH2 0xDAD PUSH2 0x19AF JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDF2 JUMPI PUSH2 0x3E8 PUSH2 0xDBE PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x5 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x2710 PUSH2 0xDFD PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x19 PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xE20 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH0 SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF10 PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF53 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x104A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1133 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1144 DUP4 DUP4 DUP4 PUSH2 0x11CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1151 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1191 PUSH2 0x54E JUMP JUMPDEST ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11D2 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x11DD DUP4 DUP4 DUP4 PUSH2 0x11E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1232 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1300 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12BB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1347 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1391 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13EE SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1432 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1417 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1457 DUP3 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x1461 DUP2 DUP6 PUSH2 0x1405 JUMP JUMPDEST SWAP4 POP PUSH2 0x1471 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x147A DUP2 PUSH2 0x143D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149D DUP2 DUP5 PUSH2 0x144D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D2 DUP3 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E2 DUP2 PUSH2 0x14C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x14EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FD DUP2 PUSH2 0x14D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1515 DUP2 PUSH2 0x1503 JUMP JUMPDEST DUP2 EQ PUSH2 0x151F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1530 DUP2 PUSH2 0x150C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x154C JUMPI PUSH2 0x154B PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1559 DUP6 DUP3 DUP7 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x156A DUP6 DUP3 DUP7 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1588 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x157F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B0 DUP2 PUSH2 0x1503 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x15A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F3 DUP7 DUP3 DUP8 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1604 DUP7 DUP3 DUP8 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1615 DUP7 DUP3 DUP8 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1634 DUP2 PUSH2 0x161F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x164D PUSH0 DUP4 ADD DUP5 PUSH2 0x162B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1668 JUMPI PUSH2 0x1667 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1675 DUP5 DUP3 DUP6 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x168A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169B DUP2 PUSH2 0x167E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C5 DUP7 DUP3 DUP8 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16D6 DUP7 DUP3 DUP8 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16E7 DUP7 DUP3 DUP8 ADD PUSH2 0x168D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1713 DUP5 DUP3 DUP6 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1725 DUP2 PUSH2 0x14C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x173E PUSH0 DUP4 ADD DUP5 PUSH2 0x171C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x175A JUMPI PUSH2 0x1759 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1767 DUP6 DUP3 DUP7 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1778 DUP6 DUP3 DUP7 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17D9 JUMPI PUSH2 0x17D8 PUSH2 0x1782 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1816 DUP3 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1821 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1839 JUMPI PUSH2 0x1838 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x576520736F6C64206F7574000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1873 PUSH1 0xB DUP4 PUSH2 0x1405 JUMP JUMPDEST SWAP2 POP PUSH2 0x187E DUP3 PUSH2 0x183F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A0 DUP2 PUSH2 0x1867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18BA PUSH0 DUP4 ADD DUP7 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x18C7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x18D4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15A7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18EF PUSH0 DUP4 ADD DUP7 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x18FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x1909 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15A7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x191B DUP3 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1926 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1934 DUP2 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x194B JUMPI PUSH2 0x194A PUSH2 0x17DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1989 DUP3 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1994 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x1952 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1A31 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1A0D JUMPI PUSH2 0x1A0C PUSH2 0x17DF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1A1C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1A2A DUP6 PUSH2 0x19DC JUMP JUMPDEST SWAP5 POP PUSH2 0x19F1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1A49 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1B04 JUMP JUMPDEST DUP2 PUSH2 0x1A56 JUMPI PUSH0 SWAP1 POP PUSH2 0x1B04 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1A6C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A76 JUMPI PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1A88 JUMPI PUSH2 0x1A87 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x17DF JUMP JUMPDEST JUMPDEST POP PUSH2 0x1B04 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1ADA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x1AE7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1AFE JUMPI PUSH2 0x1AFD PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B15 DUP3 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B20 DUP4 PUSH2 0x161F JUMP JUMPDEST SWAP3 POP PUSH2 0x1B4D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x2EA60214ED887CC4B9 0xCF GASPRICE PUSH3 0x1E5A29 EXTCODESIZE 0xC8 0xBD PUSH21 0x61D8F3A8DFA868900691491B64736F6C6343000818 STOP CALLER ",
							"sourceMap": "363:2466:10:-:0;;;483:10;:8;;;:10;;:::i;:::-;477:2;:16;;;;:::i;:::-;465:8;:29;;;;:::i;:::-;436:58;;528:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;612:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1241:5:8;1231:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;640:45:10::2;646:10;674;:8;;;:10;;:::i;:::-;668:2;:16;;;;:::i;:::-;658:7;:26;;;;:::i;:::-;640:5;;;:45;;:::i;:::-;528:190:::0;363:2466;;3002:82:2;3051:5;3075:2;3068:9;;3002:82;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1094:165:10:-;1222:30;1236:4;1242:2;1246:5;1222:13;;;:30;;:::i;:::-;1094:165;;;:::o;1112:145:5:-;1474:19:8;:17;;;:19;;:::i;:::-;1220:30:5::1;1234:4;1240:2;1244:5;1220:13;;;:30;;:::i;:::-;1112:145:::0;;;:::o;2002:128:8:-;2067:8;:6;;;:8;;:::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1850:84:8:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;7:180:12:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:86::-;2352:7;2392:4;2385:5;2381:16;2370:27;;2317:86;;;:::o;2409:281::-;2467:5;2491:23;2509:4;2491:23;:::i;:::-;2483:31;;2535:25;2551:8;2535:25;:::i;:::-;2523:37;;2579:104;2616:66;2606:8;2600:4;2579:104;:::i;:::-;2570:113;;2409:281;;;;:::o;2696:410::-;2736:7;2759:20;2777:1;2759:20;:::i;:::-;2754:25;;2793:20;2811:1;2793:20;:::i;:::-;2788:25;;2848:1;2845;2841:9;2870:30;2888:11;2870:30;:::i;:::-;2859:41;;3049:1;3040:7;3036:15;3033:1;3030:22;3010:1;3003:9;2983:83;2960:139;;3079:18;;:::i;:::-;2960:139;2744:362;2696:410;;;;:::o;3193:117::-;3302:1;3299;3292:12;3439:126;3476:7;3516:42;3509:5;3505:54;3494:65;;3439:126;;;:::o;3571:96::-;3608:7;3637:24;3655:5;3637:24;:::i;:::-;3626:35;;3571:96;;;:::o;3673:122::-;3746:24;3764:5;3746:24;:::i;:::-;3739:5;3736:35;3726:63;;3785:1;3782;3775:12;3726:63;3673:122;:::o;3801:143::-;3858:5;3889:6;3883:13;3874:22;;3905:33;3932:5;3905:33;:::i;:::-;3801:143;;;;:::o;3950:351::-;4020:6;4069:2;4057:9;4048:7;4044:23;4040:32;4037:119;;;4075:79;;:::i;:::-;4037:119;4195:1;4220:64;4276:7;4267:6;4256:9;4252:22;4220:64;:::i;:::-;4210:74;;4166:128;3950:351;;;;:::o;4307:99::-;4359:6;4393:5;4387:12;4377:22;;4307:99;;;:::o;4412:180::-;4460:77;4457:1;4450:88;4557:4;4554:1;4547:15;4581:4;4578:1;4571:15;4598:180;4646:77;4643:1;4636:88;4743:4;4740:1;4733:15;4767:4;4764:1;4757:15;4784:320;4828:6;4865:1;4859:4;4855:12;4845:22;;4912:1;4906:4;4902:12;4933:18;4923:81;;4989:4;4981:6;4977:17;4967:27;;4923:81;5051:2;5043:6;5040:14;5020:18;5017:38;5014:84;;5070:18;;:::i;:::-;5014:84;4835:269;4784:320;;;:::o;5110:141::-;5159:4;5182:3;5174:11;;5205:3;5202:1;5195:14;5239:4;5236:1;5226:18;5218:26;;5110:141;;;:::o;5257:93::-;5294:6;5341:2;5336;5329:5;5325:14;5321:23;5311:33;;5257:93;;;:::o;5356:107::-;5400:8;5450:5;5444:4;5440:16;5419:37;;5356:107;;;;:::o;5469:393::-;5538:6;5588:1;5576:10;5572:18;5611:97;5641:66;5630:9;5611:97;:::i;:::-;5729:39;5759:8;5748:9;5729:39;:::i;:::-;5717:51;;5801:4;5797:9;5790:5;5786:21;5777:30;;5850:4;5840:8;5836:19;5829:5;5826:30;5816:40;;5545:317;;5469:393;;;;;:::o;5868:60::-;5896:3;5917:5;5910:12;;5868:60;;;:::o;5934:142::-;5984:9;6017:53;6035:34;6044:24;6062:5;6044:24;:::i;:::-;6035:34;:::i;:::-;6017:53;:::i;:::-;6004:66;;5934:142;;;:::o;6082:75::-;6125:3;6146:5;6139:12;;6082:75;;;:::o;6163:269::-;6273:39;6304:7;6273:39;:::i;:::-;6334:91;6383:41;6407:16;6383:41;:::i;:::-;6375:6;6368:4;6362:11;6334:91;:::i;:::-;6328:4;6321:105;6239:193;6163:269;;;:::o;6438:73::-;6483:3;6438:73;:::o;6517:189::-;6594:32;;:::i;:::-;6635:65;6693:6;6685;6679:4;6635:65;:::i;:::-;6570:136;6517:189;;:::o;6712:186::-;6772:120;6789:3;6782:5;6779:14;6772:120;;;6843:39;6880:1;6873:5;6843:39;:::i;:::-;6816:1;6809:5;6805:13;6796:22;;6772:120;;;6712:186;;:::o;6904:543::-;7005:2;7000:3;6997:11;6994:446;;;7039:38;7071:5;7039:38;:::i;:::-;7123:29;7141:10;7123:29;:::i;:::-;7113:8;7109:44;7306:2;7294:10;7291:18;7288:49;;;7327:8;7312:23;;7288:49;7350:80;7406:22;7424:3;7406:22;:::i;:::-;7396:8;7392:37;7379:11;7350:80;:::i;:::-;7009:431;;6994:446;6904:543;;;:::o;7453:117::-;7507:8;7557:5;7551:4;7547:16;7526:37;;7453:117;;;;:::o;7576:169::-;7620:6;7653:51;7701:1;7697:6;7689:5;7686:1;7682:13;7653:51;:::i;:::-;7649:56;7734:4;7728;7724:15;7714:25;;7627:118;7576:169;;;;:::o;7750:295::-;7826:4;7972:29;7997:3;7991:4;7972:29;:::i;:::-;7964:37;;8034:3;8031:1;8027:11;8021:4;8018:21;8010:29;;7750:295;;;;:::o;8050:1395::-;8167:37;8200:3;8167:37;:::i;:::-;8269:18;8261:6;8258:30;8255:56;;;8291:18;;:::i;:::-;8255:56;8335:38;8367:4;8361:11;8335:38;:::i;:::-;8420:67;8480:6;8472;8466:4;8420:67;:::i;:::-;8514:1;8538:4;8525:17;;8570:2;8562:6;8559:14;8587:1;8582:618;;;;9244:1;9261:6;9258:77;;;9310:9;9305:3;9301:19;9295:26;9286:35;;9258:77;9361:67;9421:6;9414:5;9361:67;:::i;:::-;9355:4;9348:81;9217:222;8552:887;;8582:618;8634:4;8630:9;8622:6;8618:22;8668:37;8700:4;8668:37;:::i;:::-;8727:1;8741:208;8755:7;8752:1;8749:14;8741:208;;;8834:9;8829:3;8825:19;8819:26;8811:6;8804:42;8885:1;8877:6;8873:14;8863:24;;8932:2;8921:9;8917:18;8904:31;;8778:4;8775:1;8771:12;8766:17;;8741:208;;;8977:6;8968:7;8965:19;8962:179;;;9035:9;9030:3;9026:19;9020:26;9078:48;9120:4;9112:6;9108:17;9097:9;9078:48;:::i;:::-;9070:6;9063:64;8985:156;8962:179;9187:1;9183;9175:6;9171:14;9167:22;9161:4;9154:36;8589:611;;;8552:887;;8142:1303;;;8050:1395;;:::o;9451:118::-;9538:24;9556:5;9538:24;:::i;:::-;9533:3;9526:37;9451:118;;:::o;9575:222::-;9668:4;9706:2;9695:9;9691:18;9683:26;;9719:71;9787:1;9776:9;9772:17;9763:6;9719:71;:::i;:::-;9575:222;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;363:2466:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2005,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3946,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2768,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2409,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2641,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_995": {
									"entryPoint": 1998,
									"id": 995,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1113": {
									"entryPoint": 3848,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1084": {
									"entryPoint": 4489,
									"id": 1084,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1097": {
									"entryPoint": 4425,
									"id": 1097,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 2023,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3651,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2169,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1129": {
									"entryPoint": 2544,
									"id": 1129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1254": {
									"entryPoint": 4409,
									"id": 1254,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4578,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_956": {
									"entryPoint": 4554,
									"id": 956,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1736,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1025,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1379,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1467,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1249,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1114,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1233": {
									"entryPoint": 1140,
									"id": 1233,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 881,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1517,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1199": {
									"entryPoint": 1499,
									"id": 1199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1072": {
									"entryPoint": 1358,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1448,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1558,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenReward_1440": {
									"entryPoint": 2895,
									"id": 1440,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1059,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1068,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1866,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokens_1474": {
									"entryPoint": 1269,
									"id": 1474,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1702,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1208": {
									"entryPoint": 1122,
									"id": 1208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Acceptance_$1480": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_enum$_Acceptance_$1480": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6311,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Acceptance_$1480": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13364:12",
										"nodeType": "YulBlock",
										"src": "0:13364:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "208:73:12",
													"nodeType": "YulBlock",
													"src": "208:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:12"
																},
																"nativeSrc": "218:19:12",
																"nodeType": "YulFunctionCall",
																"src": "218:19:12"
															},
															"nativeSrc": "218:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:12"
														},
														{
															"nativeSrc": "246:29:12",
															"nodeType": "YulAssignment",
															"src": "246:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:12",
																		"nodeType": "YulLiteral",
																		"src": "270:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:12"
																},
																"nativeSrc": "261:14:12",
																"nodeType": "YulFunctionCall",
																"src": "261:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:12",
														"nodeType": "YulTypedName",
														"src": "180:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:12",
														"nodeType": "YulTypedName",
														"src": "185:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:12",
														"nodeType": "YulTypedName",
														"src": "196:11:12",
														"type": ""
													}
												],
												"src": "112:169:12"
											},
											{
												"body": {
													"nativeSrc": "349:184:12",
													"nodeType": "YulBlock",
													"src": "349:184:12",
													"statements": [
														{
															"nativeSrc": "359:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:12",
																"nodeType": "YulLiteral",
																"src": "368:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:12",
																	"nodeType": "YulTypedName",
																	"src": "363:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:12",
																"nodeType": "YulBlock",
																"src": "428:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:12"
																					},
																					"nativeSrc": "449:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:12"
																							},
																							"nativeSrc": "468:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:12"
																					},
																					"nativeSrc": "462:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:12"
																			},
																			"nativeSrc": "442:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:12"
																		},
																		"nativeSrc": "442:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:12"
																},
																"nativeSrc": "386:13:12",
																"nodeType": "YulFunctionCall",
																"src": "386:13:12"
															},
															"nativeSrc": "378:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:12",
																"nodeType": "YulBlock",
																"src": "400:19:12",
																"statements": [
																	{
																		"nativeSrc": "402:15:12",
																		"nodeType": "YulAssignment",
																		"src": "402:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:12",
																					"nodeType": "YulLiteral",
																					"src": "414:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:12"
																			},
																			"nativeSrc": "407:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:12",
																"nodeType": "YulBlock",
																"src": "382:3:12",
																"statements": []
															},
															"src": "378:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:12"
																		},
																		"nativeSrc": "507:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:12",
																		"nodeType": "YulLiteral",
																		"src": "525:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:12"
																},
																"nativeSrc": "500:27:12",
																"nodeType": "YulFunctionCall",
																"src": "500:27:12"
															},
															"nativeSrc": "500:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:12",
														"nodeType": "YulTypedName",
														"src": "331:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:12",
														"nodeType": "YulTypedName",
														"src": "336:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:12",
														"nodeType": "YulTypedName",
														"src": "341:6:12",
														"type": ""
													}
												],
												"src": "287:246:12"
											},
											{
												"body": {
													"nativeSrc": "587:54:12",
													"nodeType": "YulBlock",
													"src": "587:54:12",
													"statements": [
														{
															"nativeSrc": "597:38:12",
															"nodeType": "YulAssignment",
															"src": "597:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:12",
																				"nodeType": "YulLiteral",
																				"src": "622:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:12"
																		},
																		"nativeSrc": "611:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:12",
																				"nodeType": "YulLiteral",
																				"src": "631:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:12"
																		},
																		"nativeSrc": "627:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:12"
																},
																"nativeSrc": "607:28:12",
																"nodeType": "YulFunctionCall",
																"src": "607:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:12",
														"nodeType": "YulTypedName",
														"src": "570:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:12",
														"nodeType": "YulTypedName",
														"src": "580:6:12",
														"type": ""
													}
												],
												"src": "539:102:12"
											},
											{
												"body": {
													"nativeSrc": "739:285:12",
													"nodeType": "YulBlock",
													"src": "739:285:12",
													"statements": [
														{
															"nativeSrc": "749:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:12"
																},
																"nativeSrc": "763:39:12",
																"nodeType": "YulFunctionCall",
																"src": "763:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:12",
																	"nodeType": "YulTypedName",
																	"src": "753:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:12",
															"nodeType": "YulAssignment",
															"src": "811:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:12"
																},
																"nativeSrc": "818:71:12",
																"nodeType": "YulFunctionCall",
																"src": "818:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:12",
																				"nodeType": "YulLiteral",
																				"src": "944:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:12"
																		},
																		"nativeSrc": "933:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:12"
																},
																"nativeSrc": "898:65:12",
																"nodeType": "YulFunctionCall",
																"src": "898:65:12"
															},
															"nativeSrc": "898:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:12"
														},
														{
															"nativeSrc": "972:46:12",
															"nodeType": "YulAssignment",
															"src": "972:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:12"
																		},
																		"nativeSrc": "988:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:12"
																},
																"nativeSrc": "979:39:12",
																"nodeType": "YulFunctionCall",
																"src": "979:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:12",
														"nodeType": "YulTypedName",
														"src": "720:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:12",
														"nodeType": "YulTypedName",
														"src": "727:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:12",
														"nodeType": "YulTypedName",
														"src": "735:3:12",
														"type": ""
													}
												],
												"src": "647:377:12"
											},
											{
												"body": {
													"nativeSrc": "1148:195:12",
													"nodeType": "YulBlock",
													"src": "1148:195:12",
													"statements": [
														{
															"nativeSrc": "1158:26:12",
															"nodeType": "YulAssignment",
															"src": "1158:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:12"
																},
																"nativeSrc": "1166:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:12"
																		},
																		"nativeSrc": "1201:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:12"
																		},
																		"nativeSrc": "1220:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:12"
																},
																"nativeSrc": "1194:47:12",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:12"
															},
															"nativeSrc": "1194:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:12"
														},
														{
															"nativeSrc": "1250:86:12",
															"nodeType": "YulAssignment",
															"src": "1250:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:12"
																},
																"nativeSrc": "1258:78:12",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:12",
														"nodeType": "YulTypedName",
														"src": "1120:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:12",
														"nodeType": "YulTypedName",
														"src": "1132:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:12",
														"nodeType": "YulTypedName",
														"src": "1143:4:12",
														"type": ""
													}
												],
												"src": "1030:313:12"
											},
											{
												"body": {
													"nativeSrc": "1389:35:12",
													"nodeType": "YulBlock",
													"src": "1389:35:12",
													"statements": [
														{
															"nativeSrc": "1399:19:12",
															"nodeType": "YulAssignment",
															"src": "1399:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:12"
																},
																"nativeSrc": "1409:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:12",
														"nodeType": "YulTypedName",
														"src": "1382:6:12",
														"type": ""
													}
												],
												"src": "1349:75:12"
											},
											{
												"body": {
													"nativeSrc": "1519:28:12",
													"nodeType": "YulBlock",
													"src": "1519:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:12"
																},
																"nativeSrc": "1529:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:12"
															},
															"nativeSrc": "1529:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:12"
											},
											{
												"body": {
													"nativeSrc": "1642:28:12",
													"nodeType": "YulBlock",
													"src": "1642:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:12"
																},
																"nativeSrc": "1652:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:12"
															},
															"nativeSrc": "1652:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:12"
											},
											{
												"body": {
													"nativeSrc": "1721:81:12",
													"nodeType": "YulBlock",
													"src": "1721:81:12",
													"statements": [
														{
															"nativeSrc": "1731:65:12",
															"nodeType": "YulAssignment",
															"src": "1731:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:12"
																},
																"nativeSrc": "1742:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:12",
														"nodeType": "YulTypedName",
														"src": "1703:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:12",
														"nodeType": "YulTypedName",
														"src": "1713:7:12",
														"type": ""
													}
												],
												"src": "1676:126:12"
											},
											{
												"body": {
													"nativeSrc": "1853:51:12",
													"nodeType": "YulBlock",
													"src": "1853:51:12",
													"statements": [
														{
															"nativeSrc": "1863:35:12",
															"nodeType": "YulAssignment",
															"src": "1863:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:12"
																},
																"nativeSrc": "1874:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:12",
														"nodeType": "YulTypedName",
														"src": "1835:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:12",
														"nodeType": "YulTypedName",
														"src": "1845:7:12",
														"type": ""
													}
												],
												"src": "1808:96:12"
											},
											{
												"body": {
													"nativeSrc": "1953:79:12",
													"nodeType": "YulBlock",
													"src": "1953:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:12",
																"nodeType": "YulBlock",
																"src": "2010:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:12"
																			},
																			"nativeSrc": "2012:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:12"
																		},
																		"nativeSrc": "2012:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:12"
																				},
																				"nativeSrc": "1983:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:12"
																		},
																		"nativeSrc": "1973:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:12"
																},
																"nativeSrc": "1966:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:12"
															},
															"nativeSrc": "1963:63:12",
															"nodeType": "YulIf",
															"src": "1963:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:12",
														"nodeType": "YulTypedName",
														"src": "1946:5:12",
														"type": ""
													}
												],
												"src": "1910:122:12"
											},
											{
												"body": {
													"nativeSrc": "2090:87:12",
													"nodeType": "YulBlock",
													"src": "2090:87:12",
													"statements": [
														{
															"nativeSrc": "2100:29:12",
															"nodeType": "YulAssignment",
															"src": "2100:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:12"
																},
																"nativeSrc": "2109:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:12"
																},
																"nativeSrc": "2138:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:12"
															},
															"nativeSrc": "2138:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:12",
														"nodeType": "YulTypedName",
														"src": "2068:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:12",
														"nodeType": "YulTypedName",
														"src": "2076:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:12",
														"nodeType": "YulTypedName",
														"src": "2084:5:12",
														"type": ""
													}
												],
												"src": "2038:139:12"
											},
											{
												"body": {
													"nativeSrc": "2228:32:12",
													"nodeType": "YulBlock",
													"src": "2228:32:12",
													"statements": [
														{
															"nativeSrc": "2238:16:12",
															"nodeType": "YulAssignment",
															"src": "2238:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:12",
																"nodeType": "YulIdentifier",
																"src": "2249:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:12",
														"nodeType": "YulTypedName",
														"src": "2210:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:12",
														"nodeType": "YulTypedName",
														"src": "2220:7:12",
														"type": ""
													}
												],
												"src": "2183:77:12"
											},
											{
												"body": {
													"nativeSrc": "2309:79:12",
													"nodeType": "YulBlock",
													"src": "2309:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:12",
																"nodeType": "YulBlock",
																"src": "2366:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:12"
																			},
																			"nativeSrc": "2368:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:12"
																		},
																		"nativeSrc": "2368:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:12"
																				},
																				"nativeSrc": "2339:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:12"
																		},
																		"nativeSrc": "2329:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:12"
																},
																"nativeSrc": "2322:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:12"
															},
															"nativeSrc": "2319:63:12",
															"nodeType": "YulIf",
															"src": "2319:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:12",
														"nodeType": "YulTypedName",
														"src": "2302:5:12",
														"type": ""
													}
												],
												"src": "2266:122:12"
											},
											{
												"body": {
													"nativeSrc": "2446:87:12",
													"nodeType": "YulBlock",
													"src": "2446:87:12",
													"statements": [
														{
															"nativeSrc": "2456:29:12",
															"nodeType": "YulAssignment",
															"src": "2456:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:12"
																},
																"nativeSrc": "2465:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:12"
																},
																"nativeSrc": "2494:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:12"
															},
															"nativeSrc": "2494:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:12",
														"nodeType": "YulTypedName",
														"src": "2424:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:12",
														"nodeType": "YulTypedName",
														"src": "2432:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:12",
														"nodeType": "YulTypedName",
														"src": "2440:5:12",
														"type": ""
													}
												],
												"src": "2394:139:12"
											},
											{
												"body": {
													"nativeSrc": "2622:391:12",
													"nodeType": "YulBlock",
													"src": "2622:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:12",
																"nodeType": "YulBlock",
																"src": "2668:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:12"
																			},
																			"nativeSrc": "2670:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:12"
																		},
																		"nativeSrc": "2670:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:12"
																		},
																		"nativeSrc": "2639:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:12"
																},
																"nativeSrc": "2635:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:12"
															},
															"nativeSrc": "2632:119:12",
															"nodeType": "YulIf",
															"src": "2632:119:12"
														},
														{
															"nativeSrc": "2761:117:12",
															"nodeType": "YulBlock",
															"src": "2761:117:12",
															"statements": [
																{
																	"nativeSrc": "2776:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:12"
																				},
																				"nativeSrc": "2836:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:12"
																		},
																		"nativeSrc": "2815:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:12",
															"nodeType": "YulBlock",
															"src": "2888:118:12",
															"statements": [
																{
																	"nativeSrc": "2903:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:12"
																				},
																				"nativeSrc": "2964:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:12"
																		},
																		"nativeSrc": "2943:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:12",
														"nodeType": "YulTypedName",
														"src": "2584:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:12",
														"nodeType": "YulTypedName",
														"src": "2595:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:12",
														"nodeType": "YulTypedName",
														"src": "2607:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:12",
														"nodeType": "YulTypedName",
														"src": "2615:6:12",
														"type": ""
													}
												],
												"src": "2539:474:12"
											},
											{
												"body": {
													"nativeSrc": "3061:48:12",
													"nodeType": "YulBlock",
													"src": "3061:48:12",
													"statements": [
														{
															"nativeSrc": "3071:32:12",
															"nodeType": "YulAssignment",
															"src": "3071:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:12"
																		},
																		"nativeSrc": "3089:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:12"
																},
																"nativeSrc": "3082:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:12",
														"nodeType": "YulTypedName",
														"src": "3043:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:12",
														"nodeType": "YulTypedName",
														"src": "3053:7:12",
														"type": ""
													}
												],
												"src": "3019:90:12"
											},
											{
												"body": {
													"nativeSrc": "3174:50:12",
													"nodeType": "YulBlock",
													"src": "3174:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:12"
																		},
																		"nativeSrc": "3196:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:12"
																},
																"nativeSrc": "3184:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:12"
															},
															"nativeSrc": "3184:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:12",
														"nodeType": "YulTypedName",
														"src": "3162:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:12",
														"nodeType": "YulTypedName",
														"src": "3169:3:12",
														"type": ""
													}
												],
												"src": "3115:109:12"
											},
											{
												"body": {
													"nativeSrc": "3322:118:12",
													"nodeType": "YulBlock",
													"src": "3322:118:12",
													"statements": [
														{
															"nativeSrc": "3332:26:12",
															"nodeType": "YulAssignment",
															"src": "3332:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:12"
																},
																"nativeSrc": "3340:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:12"
																		},
																		"nativeSrc": "3415:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:12"
																},
																"nativeSrc": "3368:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:12"
															},
															"nativeSrc": "3368:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:12",
														"nodeType": "YulTypedName",
														"src": "3294:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:12",
														"nodeType": "YulTypedName",
														"src": "3306:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:12",
														"nodeType": "YulTypedName",
														"src": "3317:4:12",
														"type": ""
													}
												],
												"src": "3230:210:12"
											},
											{
												"body": {
													"nativeSrc": "3511:53:12",
													"nodeType": "YulBlock",
													"src": "3511:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:12"
																		},
																		"nativeSrc": "3533:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:12"
																},
																"nativeSrc": "3521:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:12"
															},
															"nativeSrc": "3521:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:12",
														"nodeType": "YulTypedName",
														"src": "3499:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:12",
														"nodeType": "YulTypedName",
														"src": "3506:3:12",
														"type": ""
													}
												],
												"src": "3446:118:12"
											},
											{
												"body": {
													"nativeSrc": "3668:124:12",
													"nodeType": "YulBlock",
													"src": "3668:124:12",
													"statements": [
														{
															"nativeSrc": "3678:26:12",
															"nodeType": "YulAssignment",
															"src": "3678:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:12"
																},
																"nativeSrc": "3686:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:12"
																		},
																		"nativeSrc": "3767:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:12"
																},
																"nativeSrc": "3714:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:12"
															},
															"nativeSrc": "3714:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:12",
														"nodeType": "YulTypedName",
														"src": "3640:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:12",
														"nodeType": "YulTypedName",
														"src": "3652:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:12",
														"nodeType": "YulTypedName",
														"src": "3663:4:12",
														"type": ""
													}
												],
												"src": "3570:222:12"
											},
											{
												"body": {
													"nativeSrc": "3898:519:12",
													"nodeType": "YulBlock",
													"src": "3898:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:12",
																"nodeType": "YulBlock",
																"src": "3944:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:12"
																			},
																			"nativeSrc": "3946:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:12"
																		},
																		"nativeSrc": "3946:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:12"
																		},
																		"nativeSrc": "3915:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:12"
																},
																"nativeSrc": "3911:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:12"
															},
															"nativeSrc": "3908:119:12",
															"nodeType": "YulIf",
															"src": "3908:119:12"
														},
														{
															"nativeSrc": "4037:117:12",
															"nodeType": "YulBlock",
															"src": "4037:117:12",
															"statements": [
																{
																	"nativeSrc": "4052:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:12"
																				},
																				"nativeSrc": "4112:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:12"
																		},
																		"nativeSrc": "4091:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:12",
															"nodeType": "YulBlock",
															"src": "4164:118:12",
															"statements": [
																{
																	"nativeSrc": "4179:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:12"
																				},
																				"nativeSrc": "4240:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:12"
																		},
																		"nativeSrc": "4219:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:12",
															"nodeType": "YulBlock",
															"src": "4292:118:12",
															"statements": [
																{
																	"nativeSrc": "4307:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:12"
																				},
																				"nativeSrc": "4368:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:12"
																		},
																		"nativeSrc": "4347:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:12",
														"nodeType": "YulTypedName",
														"src": "3852:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:12",
														"nodeType": "YulTypedName",
														"src": "3863:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:12",
														"nodeType": "YulTypedName",
														"src": "3875:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:12",
														"nodeType": "YulTypedName",
														"src": "3883:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:12",
														"nodeType": "YulTypedName",
														"src": "3891:6:12",
														"type": ""
													}
												],
												"src": "3798:619:12"
											},
											{
												"body": {
													"nativeSrc": "4466:43:12",
													"nodeType": "YulBlock",
													"src": "4466:43:12",
													"statements": [
														{
															"nativeSrc": "4476:27:12",
															"nodeType": "YulAssignment",
															"src": "4476:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:12"
																},
																"nativeSrc": "4487:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:12",
														"nodeType": "YulTypedName",
														"src": "4448:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:12",
														"nodeType": "YulTypedName",
														"src": "4458:7:12",
														"type": ""
													}
												],
												"src": "4423:86:12"
											},
											{
												"body": {
													"nativeSrc": "4576:51:12",
													"nodeType": "YulBlock",
													"src": "4576:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:12"
																		},
																		"nativeSrc": "4598:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:12"
																},
																"nativeSrc": "4586:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:12"
															},
															"nativeSrc": "4586:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:12",
														"nodeType": "YulTypedName",
														"src": "4564:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:12",
														"nodeType": "YulTypedName",
														"src": "4571:3:12",
														"type": ""
													}
												],
												"src": "4515:112:12"
											},
											{
												"body": {
													"nativeSrc": "4727:120:12",
													"nodeType": "YulBlock",
													"src": "4727:120:12",
													"statements": [
														{
															"nativeSrc": "4737:26:12",
															"nodeType": "YulAssignment",
															"src": "4737:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:12"
																},
																"nativeSrc": "4745:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:12"
																		},
																		"nativeSrc": "4822:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:12"
																},
																"nativeSrc": "4773:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:12"
															},
															"nativeSrc": "4773:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:12",
														"nodeType": "YulTypedName",
														"src": "4699:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:12",
														"nodeType": "YulTypedName",
														"src": "4711:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:12",
														"nodeType": "YulTypedName",
														"src": "4722:4:12",
														"type": ""
													}
												],
												"src": "4633:214:12"
											},
											{
												"body": {
													"nativeSrc": "4919:263:12",
													"nodeType": "YulBlock",
													"src": "4919:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4965:83:12",
																"nodeType": "YulBlock",
																"src": "4965:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4967:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:12"
																			},
																			"nativeSrc": "4967:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:12"
																		},
																		"nativeSrc": "4967:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4949:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4936:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:12"
																		},
																		"nativeSrc": "4936:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4932:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:12"
																},
																"nativeSrc": "4932:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4932:32:12"
															},
															"nativeSrc": "4929:119:12",
															"nodeType": "YulIf",
															"src": "4929:119:12"
														},
														{
															"nativeSrc": "5058:117:12",
															"nodeType": "YulBlock",
															"src": "5058:117:12",
															"statements": [
																{
																	"nativeSrc": "5073:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5087:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5077:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5102:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5102:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5137:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5148:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5133:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:12"
																				},
																				"nativeSrc": "5133:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5157:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5112:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:12"
																		},
																		"nativeSrc": "5112:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5102:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4853:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4889:9:12",
														"nodeType": "YulTypedName",
														"src": "4889:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4900:7:12",
														"nodeType": "YulTypedName",
														"src": "4900:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4912:6:12",
														"nodeType": "YulTypedName",
														"src": "4912:6:12",
														"type": ""
													}
												],
												"src": "4853:329:12"
											},
											{
												"body": {
													"nativeSrc": "5246:56:12",
													"nodeType": "YulBlock",
													"src": "5246:56:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5280:16:12",
																"nodeType": "YulBlock",
																"src": "5280:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5289:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5289:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5292:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5292:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5282:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5282:6:12"
																			},
																			"nativeSrc": "5282:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5282:12:12"
																		},
																		"nativeSrc": "5282:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5282:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5269:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5269:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5276:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5276:1:12",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5266:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5266:2:12"
																		},
																		"nativeSrc": "5266:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5266:12:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5259:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5259:6:12"
																},
																"nativeSrc": "5259:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5259:20:12"
															},
															"nativeSrc": "5256:40:12",
															"nodeType": "YulIf",
															"src": "5256:40:12"
														}
													]
												},
												"name": "validator_revert_t_enum$_Acceptance_$1480",
												"nativeSrc": "5188:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5239:5:12",
														"nodeType": "YulTypedName",
														"src": "5239:5:12",
														"type": ""
													}
												],
												"src": "5188:114:12"
											},
											{
												"body": {
													"nativeSrc": "5375:102:12",
													"nodeType": "YulBlock",
													"src": "5375:102:12",
													"statements": [
														{
															"nativeSrc": "5385:29:12",
															"nodeType": "YulAssignment",
															"src": "5385:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5407:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5407:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5394:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5394:12:12"
																},
																"nativeSrc": "5394:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5394:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5385:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5385:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5465:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5465:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Acceptance_$1480",
																	"nativeSrc": "5423:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "5423:41:12"
																},
																"nativeSrc": "5423:48:12",
																"nodeType": "YulFunctionCall",
																"src": "5423:48:12"
															},
															"nativeSrc": "5423:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "5423:48:12"
														}
													]
												},
												"name": "abi_decode_t_enum$_Acceptance_$1480",
												"nativeSrc": "5308:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5353:6:12",
														"nodeType": "YulTypedName",
														"src": "5353:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5361:3:12",
														"nodeType": "YulTypedName",
														"src": "5361:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5369:5:12",
														"nodeType": "YulTypedName",
														"src": "5369:5:12",
														"type": ""
													}
												],
												"src": "5308:169:12"
											},
											{
												"body": {
													"nativeSrc": "5598:534:12",
													"nodeType": "YulBlock",
													"src": "5598:534:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5644:83:12",
																"nodeType": "YulBlock",
																"src": "5644:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5646:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:77:12"
																			},
																			"nativeSrc": "5646:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5646:79:12"
																		},
																		"nativeSrc": "5646:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5646:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5619:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5619:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5628:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5628:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5615:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5615:3:12"
																		},
																		"nativeSrc": "5615:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5615:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5640:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5611:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5611:3:12"
																},
																"nativeSrc": "5611:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5611:32:12"
															},
															"nativeSrc": "5608:119:12",
															"nodeType": "YulIf",
															"src": "5608:119:12"
														},
														{
															"nativeSrc": "5737:117:12",
															"nodeType": "YulBlock",
															"src": "5737:117:12",
															"statements": [
																{
																	"nativeSrc": "5752:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5752:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5766:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5766:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5756:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5756:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5781:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5781:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5816:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5827:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5812:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:12"
																				},
																				"nativeSrc": "5812:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5836:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5791:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:12"
																		},
																		"nativeSrc": "5791:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5781:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5864:118:12",
															"nodeType": "YulBlock",
															"src": "5864:118:12",
															"statements": [
																{
																	"nativeSrc": "5879:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5879:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5893:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5883:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5883:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5909:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5909:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5944:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5944:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5955:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5955:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5940:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5940:3:12"
																				},
																				"nativeSrc": "5940:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5940:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5964:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5964:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5919:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5919:20:12"
																		},
																		"nativeSrc": "5919:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5919:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5909:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5909:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5992:133:12",
															"nodeType": "YulBlock",
															"src": "5992:133:12",
															"statements": [
																{
																	"nativeSrc": "6007:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6007:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6021:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6021:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6011:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6011:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6037:78:12",
																	"nodeType": "YulAssignment",
																	"src": "6037:78:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6087:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6087:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6098:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6098:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6083:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6083:3:12"
																				},
																				"nativeSrc": "6083:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6083:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6107:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6107:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Acceptance_$1480",
																			"nativeSrc": "6047:35:12",
																			"nodeType": "YulIdentifier",
																			"src": "6047:35:12"
																		},
																		"nativeSrc": "6047:68:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6047:68:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6037:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6037:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_enum$_Acceptance_$1480",
												"nativeSrc": "5483:649:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5552:9:12",
														"nodeType": "YulTypedName",
														"src": "5552:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5563:7:12",
														"nodeType": "YulTypedName",
														"src": "5563:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5575:6:12",
														"nodeType": "YulTypedName",
														"src": "5575:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5583:6:12",
														"nodeType": "YulTypedName",
														"src": "5583:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5591:6:12",
														"nodeType": "YulTypedName",
														"src": "5591:6:12",
														"type": ""
													}
												],
												"src": "5483:649:12"
											},
											{
												"body": {
													"nativeSrc": "6204:263:12",
													"nodeType": "YulBlock",
													"src": "6204:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6250:83:12",
																"nodeType": "YulBlock",
																"src": "6250:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6252:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6252:77:12"
																			},
																			"nativeSrc": "6252:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6252:79:12"
																		},
																		"nativeSrc": "6252:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6252:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6225:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6225:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6234:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6234:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6221:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6221:3:12"
																		},
																		"nativeSrc": "6221:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6221:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6246:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6246:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6217:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:12"
																},
																"nativeSrc": "6217:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6217:32:12"
															},
															"nativeSrc": "6214:119:12",
															"nodeType": "YulIf",
															"src": "6214:119:12"
														},
														{
															"nativeSrc": "6343:117:12",
															"nodeType": "YulBlock",
															"src": "6343:117:12",
															"statements": [
																{
																	"nativeSrc": "6358:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6358:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6372:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6372:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6362:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6362:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6387:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6387:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6422:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6422:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6433:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6433:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6418:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6418:3:12"
																				},
																				"nativeSrc": "6418:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6418:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6442:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6442:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6397:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6397:20:12"
																		},
																		"nativeSrc": "6397:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6397:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6387:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6387:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6138:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6174:9:12",
														"nodeType": "YulTypedName",
														"src": "6174:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6185:7:12",
														"nodeType": "YulTypedName",
														"src": "6185:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6197:6:12",
														"nodeType": "YulTypedName",
														"src": "6197:6:12",
														"type": ""
													}
												],
												"src": "6138:329:12"
											},
											{
												"body": {
													"nativeSrc": "6538:53:12",
													"nodeType": "YulBlock",
													"src": "6538:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6555:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6555:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6578:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6578:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6560:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6560:17:12"
																		},
																		"nativeSrc": "6560:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6548:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6548:6:12"
																},
																"nativeSrc": "6548:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6548:37:12"
															},
															"nativeSrc": "6548:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "6548:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6473:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6526:5:12",
														"nodeType": "YulTypedName",
														"src": "6526:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6533:3:12",
														"nodeType": "YulTypedName",
														"src": "6533:3:12",
														"type": ""
													}
												],
												"src": "6473:118:12"
											},
											{
												"body": {
													"nativeSrc": "6695:124:12",
													"nodeType": "YulBlock",
													"src": "6695:124:12",
													"statements": [
														{
															"nativeSrc": "6705:26:12",
															"nodeType": "YulAssignment",
															"src": "6705:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6717:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6717:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6728:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6728:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6713:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6713:3:12"
																},
																"nativeSrc": "6713:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6713:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6705:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6705:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6785:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6785:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6798:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6798:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6809:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6809:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6794:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6794:3:12"
																		},
																		"nativeSrc": "6794:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6794:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6741:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6741:43:12"
																},
																"nativeSrc": "6741:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6741:71:12"
															},
															"nativeSrc": "6741:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6741:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6597:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6667:9:12",
														"nodeType": "YulTypedName",
														"src": "6667:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6679:6:12",
														"nodeType": "YulTypedName",
														"src": "6679:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6690:4:12",
														"nodeType": "YulTypedName",
														"src": "6690:4:12",
														"type": ""
													}
												],
												"src": "6597:222:12"
											},
											{
												"body": {
													"nativeSrc": "6908:391:12",
													"nodeType": "YulBlock",
													"src": "6908:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6954:83:12",
																"nodeType": "YulBlock",
																"src": "6954:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6956:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6956:77:12"
																			},
																			"nativeSrc": "6956:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6956:79:12"
																		},
																		"nativeSrc": "6956:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6956:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6929:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6929:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6938:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6938:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6925:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:12"
																		},
																		"nativeSrc": "6925:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6925:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6950:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6921:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6921:3:12"
																},
																"nativeSrc": "6921:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6921:32:12"
															},
															"nativeSrc": "6918:119:12",
															"nodeType": "YulIf",
															"src": "6918:119:12"
														},
														{
															"nativeSrc": "7047:117:12",
															"nodeType": "YulBlock",
															"src": "7047:117:12",
															"statements": [
																{
																	"nativeSrc": "7062:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7062:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7076:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7076:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7066:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7066:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7091:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7091:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7126:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7126:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7137:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7137:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7122:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7122:3:12"
																				},
																				"nativeSrc": "7122:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7122:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7146:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7146:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7101:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7101:20:12"
																		},
																		"nativeSrc": "7101:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7101:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7091:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7091:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7174:118:12",
															"nodeType": "YulBlock",
															"src": "7174:118:12",
															"statements": [
																{
																	"nativeSrc": "7189:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7189:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7203:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7203:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7193:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7193:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7219:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7219:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7254:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7254:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7265:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7265:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7250:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7250:3:12"
																				},
																				"nativeSrc": "7250:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7250:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7274:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7274:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7229:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7229:20:12"
																		},
																		"nativeSrc": "7229:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7229:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7219:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7219:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6825:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6870:9:12",
														"nodeType": "YulTypedName",
														"src": "6870:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6881:7:12",
														"nodeType": "YulTypedName",
														"src": "6881:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6893:6:12",
														"nodeType": "YulTypedName",
														"src": "6893:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6901:6:12",
														"nodeType": "YulTypedName",
														"src": "6901:6:12",
														"type": ""
													}
												],
												"src": "6825:474:12"
											},
											{
												"body": {
													"nativeSrc": "7333:152:12",
													"nodeType": "YulBlock",
													"src": "7333:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7350:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7350:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7353:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7353:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:12"
																},
																"nativeSrc": "7343:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7343:88:12"
															},
															"nativeSrc": "7343:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7343:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7447:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7447:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7450:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7450:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7440:6:12"
																},
																"nativeSrc": "7440:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7440:15:12"
															},
															"nativeSrc": "7440:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7440:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7471:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7471:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7474:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7474:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7464:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7464:6:12"
																},
																"nativeSrc": "7464:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7464:15:12"
															},
															"nativeSrc": "7464:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7464:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7305:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7305:180:12"
											},
											{
												"body": {
													"nativeSrc": "7542:269:12",
													"nodeType": "YulBlock",
													"src": "7542:269:12",
													"statements": [
														{
															"nativeSrc": "7552:22:12",
															"nodeType": "YulAssignment",
															"src": "7552:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7566:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7566:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7572:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7572:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7562:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7562:3:12"
																},
																"nativeSrc": "7562:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7562:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7552:6:12"
																}
															]
														},
														{
															"nativeSrc": "7583:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7583:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7613:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7613:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7619:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7619:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7609:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7609:3:12"
																},
																"nativeSrc": "7609:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7609:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7587:18:12",
																	"nodeType": "YulTypedName",
																	"src": "7587:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7660:51:12",
																"nodeType": "YulBlock",
																"src": "7660:51:12",
																"statements": [
																	{
																		"nativeSrc": "7674:27:12",
																		"nodeType": "YulAssignment",
																		"src": "7674:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7688:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "7688:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7696:4:12",
																					"nodeType": "YulLiteral",
																					"src": "7696:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7684:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7684:3:12"
																			},
																			"nativeSrc": "7684:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7684:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7674:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7674:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7640:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "7640:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7633:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7633:6:12"
																},
																"nativeSrc": "7633:26:12",
																"nodeType": "YulFunctionCall",
																"src": "7633:26:12"
															},
															"nativeSrc": "7630:81:12",
															"nodeType": "YulIf",
															"src": "7630:81:12"
														},
														{
															"body": {
																"nativeSrc": "7763:42:12",
																"nodeType": "YulBlock",
																"src": "7763:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7777:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7777:16:12"
																			},
																			"nativeSrc": "7777:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7777:18:12"
																		},
																		"nativeSrc": "7777:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7777:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7727:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "7727:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7750:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7750:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7758:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7758:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7747:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7747:2:12"
																		},
																		"nativeSrc": "7747:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7747:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7724:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7724:2:12"
																},
																"nativeSrc": "7724:38:12",
																"nodeType": "YulFunctionCall",
																"src": "7724:38:12"
															},
															"nativeSrc": "7721:84:12",
															"nodeType": "YulIf",
															"src": "7721:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7491:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7526:4:12",
														"nodeType": "YulTypedName",
														"src": "7526:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7535:6:12",
														"nodeType": "YulTypedName",
														"src": "7535:6:12",
														"type": ""
													}
												],
												"src": "7491:320:12"
											},
											{
												"body": {
													"nativeSrc": "7845:152:12",
													"nodeType": "YulBlock",
													"src": "7845:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7862:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7862:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7865:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7865:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7855:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:12"
																},
																"nativeSrc": "7855:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7855:88:12"
															},
															"nativeSrc": "7855:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7855:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7959:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7959:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7962:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7962:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7952:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7952:6:12"
																},
																"nativeSrc": "7952:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7952:15:12"
															},
															"nativeSrc": "7952:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7952:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7976:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:12"
																},
																"nativeSrc": "7976:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:12"
															},
															"nativeSrc": "7976:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7817:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7817:180:12"
											},
											{
												"body": {
													"nativeSrc": "8047:147:12",
													"nodeType": "YulBlock",
													"src": "8047:147:12",
													"statements": [
														{
															"nativeSrc": "8057:25:12",
															"nodeType": "YulAssignment",
															"src": "8057:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8080:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8080:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8062:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8062:17:12"
																},
																"nativeSrc": "8062:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8062:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8057:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8057:1:12"
																}
															]
														},
														{
															"nativeSrc": "8091:25:12",
															"nodeType": "YulAssignment",
															"src": "8091:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8114:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8114:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8096:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8096:17:12"
																},
																"nativeSrc": "8096:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8096:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8091:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8091:1:12"
																}
															]
														},
														{
															"nativeSrc": "8125:16:12",
															"nodeType": "YulAssignment",
															"src": "8125:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8136:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8136:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8139:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8139:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8132:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8132:3:12"
																},
																"nativeSrc": "8132:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8132:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8125:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8125:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8165:22:12",
																"nodeType": "YulBlock",
																"src": "8165:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8167:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8167:16:12"
																			},
																			"nativeSrc": "8167:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8167:18:12"
																		},
																		"nativeSrc": "8167:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8167:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8157:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8157:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8160:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8160:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8154:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8154:2:12"
																},
																"nativeSrc": "8154:10:12",
																"nodeType": "YulFunctionCall",
																"src": "8154:10:12"
															},
															"nativeSrc": "8151:36:12",
															"nodeType": "YulIf",
															"src": "8151:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8003:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8034:1:12",
														"nodeType": "YulTypedName",
														"src": "8034:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8037:1:12",
														"nodeType": "YulTypedName",
														"src": "8037:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8043:3:12",
														"nodeType": "YulTypedName",
														"src": "8043:3:12",
														"type": ""
													}
												],
												"src": "8003:191:12"
											},
											{
												"body": {
													"nativeSrc": "8306:55:12",
													"nodeType": "YulBlock",
													"src": "8306:55:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8328:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8328:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8336:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8336:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8324:3:12"
																		},
																		"nativeSrc": "8324:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8324:14:12"
																	},
																	{
																		"hexValue": "576520736f6c64206f7574",
																		"kind": "string",
																		"nativeSrc": "8340:13:12",
																		"nodeType": "YulLiteral",
																		"src": "8340:13:12",
																		"type": "",
																		"value": "We sold out"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8317:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8317:6:12"
																},
																"nativeSrc": "8317:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8317:37:12"
															},
															"nativeSrc": "8317:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8317:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae",
												"nativeSrc": "8200:161:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8298:6:12",
														"nodeType": "YulTypedName",
														"src": "8298:6:12",
														"type": ""
													}
												],
												"src": "8200:161:12"
											},
											{
												"body": {
													"nativeSrc": "8513:220:12",
													"nodeType": "YulBlock",
													"src": "8513:220:12",
													"statements": [
														{
															"nativeSrc": "8523:74:12",
															"nodeType": "YulAssignment",
															"src": "8523:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8589:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8589:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8594:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8594:2:12",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8530:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8530:58:12"
																},
																"nativeSrc": "8530:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8530:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8523:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8523:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8695:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8695:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae",
																	"nativeSrc": "8606:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8606:88:12"
																},
																"nativeSrc": "8606:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8606:93:12"
															},
															"nativeSrc": "8606:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8606:93:12"
														},
														{
															"nativeSrc": "8708:19:12",
															"nodeType": "YulAssignment",
															"src": "8708:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8719:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8719:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8724:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8724:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8715:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8715:3:12"
																},
																"nativeSrc": "8715:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8715:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8708:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8708:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8367:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8501:3:12",
														"nodeType": "YulTypedName",
														"src": "8501:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8509:3:12",
														"nodeType": "YulTypedName",
														"src": "8509:3:12",
														"type": ""
													}
												],
												"src": "8367:366:12"
											},
											{
												"body": {
													"nativeSrc": "8910:248:12",
													"nodeType": "YulBlock",
													"src": "8910:248:12",
													"statements": [
														{
															"nativeSrc": "8920:26:12",
															"nodeType": "YulAssignment",
															"src": "8920:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8932:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8932:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8943:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8943:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8928:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8928:3:12"
																},
																"nativeSrc": "8928:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8928:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8920:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8920:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8967:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8967:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8978:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8978:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8963:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8963:3:12"
																		},
																		"nativeSrc": "8963:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8963:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8986:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8986:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8992:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8992:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8982:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8982:3:12"
																		},
																		"nativeSrc": "8982:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8982:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8956:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8956:6:12"
																},
																"nativeSrc": "8956:47:12",
																"nodeType": "YulFunctionCall",
																"src": "8956:47:12"
															},
															"nativeSrc": "8956:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "8956:47:12"
														},
														{
															"nativeSrc": "9012:139:12",
															"nodeType": "YulAssignment",
															"src": "9012:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9146:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9146:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9020:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9020:124:12"
																},
																"nativeSrc": "9020:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9020:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9012:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9012:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8739:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8890:9:12",
														"nodeType": "YulTypedName",
														"src": "8890:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8905:4:12",
														"nodeType": "YulTypedName",
														"src": "8905:4:12",
														"type": ""
													}
												],
												"src": "8739:419:12"
											},
											{
												"body": {
													"nativeSrc": "9318:288:12",
													"nodeType": "YulBlock",
													"src": "9318:288:12",
													"statements": [
														{
															"nativeSrc": "9328:26:12",
															"nodeType": "YulAssignment",
															"src": "9328:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9340:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9340:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9351:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9351:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9336:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9336:3:12"
																},
																"nativeSrc": "9336:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9336:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9328:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9328:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9408:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9408:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9421:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9421:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9432:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9432:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9417:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9417:3:12"
																		},
																		"nativeSrc": "9417:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9417:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9364:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9364:43:12"
																},
																"nativeSrc": "9364:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9364:71:12"
															},
															"nativeSrc": "9364:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9364:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9489:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9489:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9502:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9502:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9513:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9513:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9498:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:12"
																		},
																		"nativeSrc": "9498:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9498:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9445:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9445:43:12"
																},
																"nativeSrc": "9445:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9445:72:12"
															},
															"nativeSrc": "9445:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9445:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9571:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9571:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9584:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9584:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9595:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9595:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9580:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9580:3:12"
																		},
																		"nativeSrc": "9580:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9580:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9527:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9527:43:12"
																},
																"nativeSrc": "9527:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9527:72:12"
															},
															"nativeSrc": "9527:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9527:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9164:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9274:9:12",
														"nodeType": "YulTypedName",
														"src": "9274:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9286:6:12",
														"nodeType": "YulTypedName",
														"src": "9286:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9294:6:12",
														"nodeType": "YulTypedName",
														"src": "9294:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9302:6:12",
														"nodeType": "YulTypedName",
														"src": "9302:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9313:4:12",
														"nodeType": "YulTypedName",
														"src": "9313:4:12",
														"type": ""
													}
												],
												"src": "9164:442:12"
											},
											{
												"body": {
													"nativeSrc": "9766:288:12",
													"nodeType": "YulBlock",
													"src": "9766:288:12",
													"statements": [
														{
															"nativeSrc": "9776:26:12",
															"nodeType": "YulAssignment",
															"src": "9776:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9788:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9788:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9799:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9799:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9784:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9784:3:12"
																},
																"nativeSrc": "9784:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9784:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9776:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9776:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9856:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9856:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9869:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9869:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9880:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9880:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9865:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:12"
																		},
																		"nativeSrc": "9865:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9865:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9812:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9812:43:12"
																},
																"nativeSrc": "9812:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9812:71:12"
															},
															"nativeSrc": "9812:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9812:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9937:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9937:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9950:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9950:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9961:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9961:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9946:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9946:3:12"
																		},
																		"nativeSrc": "9946:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9946:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9893:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9893:43:12"
																},
																"nativeSrc": "9893:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9893:72:12"
															},
															"nativeSrc": "9893:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9893:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10019:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10019:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10032:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10032:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10043:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10043:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10028:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:12"
																		},
																		"nativeSrc": "10028:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10028:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9975:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9975:43:12"
																},
																"nativeSrc": "9975:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9975:72:12"
															},
															"nativeSrc": "9975:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9975:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9612:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9722:9:12",
														"nodeType": "YulTypedName",
														"src": "9722:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9734:6:12",
														"nodeType": "YulTypedName",
														"src": "9734:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9742:6:12",
														"nodeType": "YulTypedName",
														"src": "9742:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9750:6:12",
														"nodeType": "YulTypedName",
														"src": "9750:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9761:4:12",
														"nodeType": "YulTypedName",
														"src": "9761:4:12",
														"type": ""
													}
												],
												"src": "9612:442:12"
											},
											{
												"body": {
													"nativeSrc": "10108:362:12",
													"nodeType": "YulBlock",
													"src": "10108:362:12",
													"statements": [
														{
															"nativeSrc": "10118:25:12",
															"nodeType": "YulAssignment",
															"src": "10118:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10141:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10141:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10123:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10123:17:12"
																},
																"nativeSrc": "10123:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10123:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10118:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10118:1:12"
																}
															]
														},
														{
															"nativeSrc": "10152:25:12",
															"nodeType": "YulAssignment",
															"src": "10152:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10175:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10175:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10157:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10157:17:12"
																},
																"nativeSrc": "10157:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10157:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10152:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10152:1:12"
																}
															]
														},
														{
															"nativeSrc": "10186:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10186:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10209:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10209:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10212:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10212:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10205:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10205:3:12"
																},
																"nativeSrc": "10205:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10205:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10190:11:12",
																	"nodeType": "YulTypedName",
																	"src": "10190:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10223:41:12",
															"nodeType": "YulAssignment",
															"src": "10223:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10252:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "10252:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10234:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10234:17:12"
																},
																"nativeSrc": "10234:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10234:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10223:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "10223:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10441:22:12",
																"nodeType": "YulBlock",
																"src": "10441:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10443:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10443:16:12"
																			},
																			"nativeSrc": "10443:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10443:18:12"
																		},
																		"nativeSrc": "10443:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10443:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10374:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "10374:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10367:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10367:6:12"
																				},
																				"nativeSrc": "10367:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10367:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10397:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "10397:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10404:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "10404:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10413:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "10413:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10400:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "10400:3:12"
																						},
																						"nativeSrc": "10400:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "10400:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10394:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "10394:2:12"
																				},
																				"nativeSrc": "10394:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10394:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10347:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10347:2:12"
																		},
																		"nativeSrc": "10347:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10347:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10327:6:12"
																},
																"nativeSrc": "10327:113:12",
																"nodeType": "YulFunctionCall",
																"src": "10327:113:12"
															},
															"nativeSrc": "10324:139:12",
															"nodeType": "YulIf",
															"src": "10324:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10060:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10091:1:12",
														"nodeType": "YulTypedName",
														"src": "10091:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10094:1:12",
														"nodeType": "YulTypedName",
														"src": "10094:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10100:7:12",
														"nodeType": "YulTypedName",
														"src": "10100:7:12",
														"type": ""
													}
												],
												"src": "10060:410:12"
											},
											{
												"body": {
													"nativeSrc": "10504:152:12",
													"nodeType": "YulBlock",
													"src": "10504:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10521:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10521:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10524:77:12",
																		"nodeType": "YulLiteral",
																		"src": "10524:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10514:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10514:6:12"
																},
																"nativeSrc": "10514:88:12",
																"nodeType": "YulFunctionCall",
																"src": "10514:88:12"
															},
															"nativeSrc": "10514:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "10514:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10618:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10618:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10621:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10621:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10611:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10611:6:12"
																},
																"nativeSrc": "10611:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10611:15:12"
															},
															"nativeSrc": "10611:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10611:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10642:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10642:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10645:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10645:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10635:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10635:6:12"
																},
																"nativeSrc": "10635:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10635:15:12"
															},
															"nativeSrc": "10635:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10635:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10476:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10476:180:12"
											},
											{
												"body": {
													"nativeSrc": "10704:143:12",
													"nodeType": "YulBlock",
													"src": "10704:143:12",
													"statements": [
														{
															"nativeSrc": "10714:25:12",
															"nodeType": "YulAssignment",
															"src": "10714:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10737:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10737:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10719:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10719:17:12"
																},
																"nativeSrc": "10719:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10719:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10714:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10714:1:12"
																}
															]
														},
														{
															"nativeSrc": "10748:25:12",
															"nodeType": "YulAssignment",
															"src": "10748:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10771:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10771:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10753:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10753:17:12"
																},
																"nativeSrc": "10753:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10753:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10748:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10748:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10795:22:12",
																"nodeType": "YulBlock",
																"src": "10795:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10797:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "10797:16:12"
																			},
																			"nativeSrc": "10797:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10797:18:12"
																		},
																		"nativeSrc": "10797:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10797:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10792:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10792:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10785:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10785:6:12"
																},
																"nativeSrc": "10785:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10785:9:12"
															},
															"nativeSrc": "10782:35:12",
															"nodeType": "YulIf",
															"src": "10782:35:12"
														},
														{
															"nativeSrc": "10827:14:12",
															"nodeType": "YulAssignment",
															"src": "10827:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10836:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10836:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10839:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10839:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10832:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10832:3:12"
																},
																"nativeSrc": "10832:9:12",
																"nodeType": "YulFunctionCall",
																"src": "10832:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10827:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10827:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10662:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10693:1:12",
														"nodeType": "YulTypedName",
														"src": "10693:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10696:1:12",
														"nodeType": "YulTypedName",
														"src": "10696:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10702:1:12",
														"nodeType": "YulTypedName",
														"src": "10702:1:12",
														"type": ""
													}
												],
												"src": "10662:185:12"
											},
											{
												"body": {
													"nativeSrc": "10881:152:12",
													"nodeType": "YulBlock",
													"src": "10881:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10898:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10898:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10901:77:12",
																		"nodeType": "YulLiteral",
																		"src": "10901:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10891:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10891:6:12"
																},
																"nativeSrc": "10891:88:12",
																"nodeType": "YulFunctionCall",
																"src": "10891:88:12"
															},
															"nativeSrc": "10891:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "10891:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10995:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10995:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10998:4:12",
																		"nodeType": "YulLiteral",
																		"src": "10998:4:12",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10988:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10988:6:12"
																},
																"nativeSrc": "10988:15:12",
																"nodeType": "YulFunctionCall",
																"src": "10988:15:12"
															},
															"nativeSrc": "10988:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "10988:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11019:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11019:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11022:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11022:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11012:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11012:6:12"
																},
																"nativeSrc": "11012:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11012:15:12"
															},
															"nativeSrc": "11012:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11012:15:12"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "10853:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "10853:180:12"
											},
											{
												"body": {
													"nativeSrc": "11090:51:12",
													"nodeType": "YulBlock",
													"src": "11090:51:12",
													"statements": [
														{
															"nativeSrc": "11100:34:12",
															"nodeType": "YulAssignment",
															"src": "11100:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11125:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11125:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11128:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11128:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11121:3:12"
																},
																"nativeSrc": "11121:13:12",
																"nodeType": "YulFunctionCall",
																"src": "11121:13:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11100:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "11100:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "11039:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11071:5:12",
														"nodeType": "YulTypedName",
														"src": "11071:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11081:8:12",
														"nodeType": "YulTypedName",
														"src": "11081:8:12",
														"type": ""
													}
												],
												"src": "11039:102:12"
											},
											{
												"body": {
													"nativeSrc": "11220:775:12",
													"nodeType": "YulBlock",
													"src": "11220:775:12",
													"statements": [
														{
															"nativeSrc": "11230:15:12",
															"nodeType": "YulAssignment",
															"src": "11230:15:12",
															"value": {
																"name": "_power",
																"nativeSrc": "11239:6:12",
																"nodeType": "YulIdentifier",
																"src": "11239:6:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11230:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11230:5:12"
																}
															]
														},
														{
															"nativeSrc": "11254:14:12",
															"nodeType": "YulAssignment",
															"src": "11254:14:12",
															"value": {
																"name": "_base",
																"nativeSrc": "11263:5:12",
																"nodeType": "YulIdentifier",
																"src": "11263:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11254:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11254:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11312:677:12",
																"nodeType": "YulBlock",
																"src": "11312:677:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "11400:22:12",
																			"nodeType": "YulBlock",
																			"src": "11400:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11402:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "11402:16:12"
																						},
																						"nativeSrc": "11402:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "11402:18:12"
																					},
																					"nativeSrc": "11402:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "11402:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11378:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "11378:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "11388:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "11388:3:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "11393:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "11393:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "11384:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "11384:3:12"
																					},
																					"nativeSrc": "11384:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "11384:14:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11375:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11375:2:12"
																			},
																			"nativeSrc": "11375:24:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11375:24:12"
																		},
																		"nativeSrc": "11372:50:12",
																		"nodeType": "YulIf",
																		"src": "11372:50:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "11467:419:12",
																			"nodeType": "YulBlock",
																			"src": "11467:419:12",
																			"statements": [
																				{
																					"nativeSrc": "11847:25:12",
																					"nodeType": "YulAssignment",
																					"src": "11847:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "11860:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "11860:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "11867:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "11867:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "11856:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "11856:3:12"
																						},
																						"nativeSrc": "11856:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "11856:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "11847:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "11847:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "11442:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "11442:8:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11452:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11452:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11438:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11438:3:12"
																			},
																			"nativeSrc": "11438:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11438:16:12"
																		},
																		"nativeSrc": "11435:451:12",
																		"nodeType": "YulIf",
																		"src": "11435:451:12"
																	},
																	{
																		"nativeSrc": "11899:23:12",
																		"nodeType": "YulAssignment",
																		"src": "11899:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11911:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "11911:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "11917:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "11917:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "11907:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11907:3:12"
																			},
																			"nativeSrc": "11907:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11907:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "11899:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11899:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11935:44:12",
																		"nodeType": "YulAssignment",
																		"src": "11935:44:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "11970:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "11970:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "11947:22:12",
																				"nodeType": "YulIdentifier",
																				"src": "11947:22:12"
																			},
																			"nativeSrc": "11947:32:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11947:32:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "11935:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "11935:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11288:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "11288:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11298:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11298:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11285:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11285:2:12"
																},
																"nativeSrc": "11285:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11285:15:12"
															},
															"nativeSrc": "11277:712:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11301:2:12",
																"nodeType": "YulBlock",
																"src": "11301:2:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "11281:3:12",
																"nodeType": "YulBlock",
																"src": "11281:3:12",
																"statements": []
															},
															"src": "11277:712:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "11147:848:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "11175:6:12",
														"nodeType": "YulTypedName",
														"src": "11175:6:12",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "11183:5:12",
														"nodeType": "YulTypedName",
														"src": "11183:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11190:8:12",
														"nodeType": "YulTypedName",
														"src": "11190:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "11200:3:12",
														"nodeType": "YulTypedName",
														"src": "11200:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11208:5:12",
														"nodeType": "YulTypedName",
														"src": "11208:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "11215:4:12",
														"nodeType": "YulTypedName",
														"src": "11215:4:12",
														"type": ""
													}
												],
												"src": "11147:848:12"
											},
											{
												"body": {
													"nativeSrc": "12061:1013:12",
													"nodeType": "YulBlock",
													"src": "12061:1013:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12256:20:12",
																"nodeType": "YulBlock",
																"src": "12256:20:12",
																"statements": [
																	{
																		"nativeSrc": "12258:10:12",
																		"nodeType": "YulAssignment",
																		"src": "12258:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12267:1:12",
																			"nodeType": "YulLiteral",
																			"src": "12267:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12258:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12258:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12269:5:12",
																		"nodeType": "YulLeave",
																		"src": "12269:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "12246:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "12246:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12239:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12239:6:12"
																},
																"nativeSrc": "12239:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12239:16:12"
															},
															"nativeSrc": "12236:40:12",
															"nodeType": "YulIf",
															"src": "12236:40:12"
														},
														{
															"body": {
																"nativeSrc": "12301:20:12",
																"nodeType": "YulBlock",
																"src": "12301:20:12",
																"statements": [
																	{
																		"nativeSrc": "12303:10:12",
																		"nodeType": "YulAssignment",
																		"src": "12303:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "12312:1:12",
																			"nodeType": "YulLiteral",
																			"src": "12312:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12303:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12303:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "12314:5:12",
																		"nodeType": "YulLeave",
																		"src": "12314:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "12295:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12295:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12288:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:12"
																},
																"nativeSrc": "12288:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12288:12:12"
															},
															"nativeSrc": "12285:36:12",
															"nodeType": "YulIf",
															"src": "12285:36:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12431:20:12",
																		"nodeType": "YulBlock",
																		"src": "12431:20:12",
																		"statements": [
																			{
																				"nativeSrc": "12433:10:12",
																				"nodeType": "YulAssignment",
																				"src": "12433:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12442:1:12",
																					"nodeType": "YulLiteral",
																					"src": "12442:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12433:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "12433:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "12444:5:12",
																				"nodeType": "YulLeave",
																				"src": "12444:5:12"
																			}
																		]
																	},
																	"nativeSrc": "12424:27:12",
																	"nodeType": "YulCase",
																	"src": "12424:27:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12429:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12429:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "12475:176:12",
																		"nodeType": "YulBlock",
																		"src": "12475:176:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "12510:22:12",
																					"nodeType": "YulBlock",
																					"src": "12510:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "12512:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "12512:16:12"
																								},
																								"nativeSrc": "12512:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "12512:18:12"
																							},
																							"nativeSrc": "12512:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "12512:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "12495:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "12495:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12505:3:12",
																							"nodeType": "YulLiteral",
																							"src": "12505:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "12492:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "12492:2:12"
																					},
																					"nativeSrc": "12492:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12492:17:12"
																				},
																				"nativeSrc": "12489:43:12",
																				"nodeType": "YulIf",
																				"src": "12489:43:12"
																			},
																			{
																				"nativeSrc": "12545:25:12",
																				"nodeType": "YulAssignment",
																				"src": "12545:25:12",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12558:1:12",
																							"nodeType": "YulLiteral",
																							"src": "12558:1:12",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "12561:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "12561:8:12"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "12554:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12554:3:12"
																					},
																					"nativeSrc": "12554:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12554:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "12545:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "12545:5:12"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12601:22:12",
																					"nodeType": "YulBlock",
																					"src": "12601:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "12603:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "12603:16:12"
																								},
																								"nativeSrc": "12603:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "12603:18:12"
																							},
																							"nativeSrc": "12603:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "12603:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "12589:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "12589:5:12"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "12596:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "12596:3:12"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "12586:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "12586:2:12"
																					},
																					"nativeSrc": "12586:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12586:14:12"
																				},
																				"nativeSrc": "12583:40:12",
																				"nodeType": "YulIf",
																				"src": "12583:40:12"
																			},
																			{
																				"nativeSrc": "12636:5:12",
																				"nodeType": "YulLeave",
																				"src": "12636:5:12"
																			}
																		]
																	},
																	"nativeSrc": "12460:191:12",
																	"nodeType": "YulCase",
																	"src": "12460:191:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12465:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12465:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "12381:4:12",
																"nodeType": "YulIdentifier",
																"src": "12381:4:12"
															},
															"nativeSrc": "12374:277:12",
															"nodeType": "YulSwitch",
															"src": "12374:277:12"
														},
														{
															"body": {
																"nativeSrc": "12783:123:12",
																"nodeType": "YulBlock",
																"src": "12783:123:12",
																"statements": [
																	{
																		"nativeSrc": "12797:28:12",
																		"nodeType": "YulAssignment",
																		"src": "12797:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "12810:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "12810:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "12816:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "12816:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "12806:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12806:3:12"
																			},
																			"nativeSrc": "12806:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12806:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "12797:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12797:5:12"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12856:22:12",
																			"nodeType": "YulBlock",
																			"src": "12856:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "12858:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "12858:16:12"
																						},
																						"nativeSrc": "12858:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "12858:18:12"
																					},
																					"nativeSrc": "12858:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "12858:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "12844:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "12844:5:12"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "12851:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12851:3:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "12841:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "12841:2:12"
																			},
																			"nativeSrc": "12841:14:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12841:14:12"
																		},
																		"nativeSrc": "12838:40:12",
																		"nodeType": "YulIf",
																		"src": "12838:40:12"
																	},
																	{
																		"nativeSrc": "12891:5:12",
																		"nodeType": "YulLeave",
																		"src": "12891:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "12686:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "12686:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12692:2:12",
																						"nodeType": "YulLiteral",
																						"src": "12692:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12683:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "12683:2:12"
																				},
																				"nativeSrc": "12683:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12683:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "12700:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "12700:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12710:2:12",
																						"nodeType": "YulLiteral",
																						"src": "12710:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12697:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "12697:2:12"
																				},
																				"nativeSrc": "12697:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12697:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12679:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12679:3:12"
																		},
																		"nativeSrc": "12679:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12679:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "12735:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "12735:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12741:3:12",
																						"nodeType": "YulLiteral",
																						"src": "12741:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12732:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "12732:2:12"
																				},
																				"nativeSrc": "12732:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12732:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "12750:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "12750:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12760:2:12",
																						"nodeType": "YulLiteral",
																						"src": "12760:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12747:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "12747:2:12"
																				},
																				"nativeSrc": "12747:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12747:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12728:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12728:3:12"
																		},
																		"nativeSrc": "12728:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12728:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12663:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12663:2:12"
																},
																"nativeSrc": "12663:111:12",
																"nodeType": "YulFunctionCall",
																"src": "12663:111:12"
															},
															"nativeSrc": "12660:246:12",
															"nodeType": "YulIf",
															"src": "12660:246:12"
														},
														{
															"nativeSrc": "12916:57:12",
															"nodeType": "YulAssignment",
															"src": "12916:57:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12950:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12950:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "12953:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12953:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "12959:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "12959:8:12"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "12969:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12969:3:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "12931:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "12931:18:12"
																},
																"nativeSrc": "12931:42:12",
																"nodeType": "YulFunctionCall",
																"src": "12931:42:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "12916:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12916:5:12"
																},
																{
																	"name": "base",
																	"nativeSrc": "12923:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12923:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13012:22:12",
																"nodeType": "YulBlock",
																"src": "13012:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13014:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "13014:16:12"
																			},
																			"nativeSrc": "13014:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13014:18:12"
																		},
																		"nativeSrc": "13014:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13014:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "12989:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12989:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "13000:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13000:3:12"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "13005:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13005:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "12996:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12996:3:12"
																		},
																		"nativeSrc": "12996:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12996:14:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12986:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12986:2:12"
																},
																"nativeSrc": "12986:25:12",
																"nodeType": "YulFunctionCall",
																"src": "12986:25:12"
															},
															"nativeSrc": "12983:51:12",
															"nodeType": "YulIf",
															"src": "12983:51:12"
														},
														{
															"nativeSrc": "13043:25:12",
															"nodeType": "YulAssignment",
															"src": "13043:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "13056:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13056:5:12"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "13063:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13063:4:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13052:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13052:3:12"
																},
																"nativeSrc": "13052:16:12",
																"nodeType": "YulFunctionCall",
																"src": "13052:16:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13043:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13043:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "12001:1073:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "12031:4:12",
														"nodeType": "YulTypedName",
														"src": "12031:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "12037:8:12",
														"nodeType": "YulTypedName",
														"src": "12037:8:12",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "12047:3:12",
														"nodeType": "YulTypedName",
														"src": "12047:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "12055:5:12",
														"nodeType": "YulTypedName",
														"src": "12055:5:12",
														"type": ""
													}
												],
												"src": "12001:1073:12"
											},
											{
												"body": {
													"nativeSrc": "13144:217:12",
													"nodeType": "YulBlock",
													"src": "13144:217:12",
													"statements": [
														{
															"nativeSrc": "13154:31:12",
															"nodeType": "YulAssignment",
															"src": "13154:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13180:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13180:4:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13162:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "13162:17:12"
																},
																"nativeSrc": "13162:23:12",
																"nodeType": "YulFunctionCall",
																"src": "13162:23:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13154:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13154:4:12"
																}
															]
														},
														{
															"nativeSrc": "13194:37:12",
															"nodeType": "YulAssignment",
															"src": "13194:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13222:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "13222:8:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "13206:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "13206:15:12"
																},
																"nativeSrc": "13206:25:12",
																"nodeType": "YulFunctionCall",
																"src": "13206:25:12"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "13194:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "13194:8:12"
																}
															]
														},
														{
															"nativeSrc": "13241:113:12",
															"nodeType": "YulAssignment",
															"src": "13241:113:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "13271:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13271:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "13277:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "13277:8:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13287:66:12",
																		"nodeType": "YulLiteral",
																		"src": "13287:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "13250:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "13250:20:12"
																},
																"nativeSrc": "13250:104:12",
																"nodeType": "YulFunctionCall",
																"src": "13250:104:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13241:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13241:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "13080:281:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "13119:4:12",
														"nodeType": "YulTypedName",
														"src": "13119:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13125:8:12",
														"nodeType": "YulTypedName",
														"src": "13125:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13138:5:12",
														"nodeType": "YulTypedName",
														"src": "13138:5:12",
														"type": ""
													}
												],
												"src": "13080:281:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_enum$_Acceptance_$1480(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Acceptance_$1480(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Acceptance_$1480(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_enum$_Acceptance_$1480(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_enum$_Acceptance_$1480(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae(memPtr) {\n\n        mstore(add(memPtr, 0), \"We sold out\")\n\n    }\n\n    function abi_encode_t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c80635c975abb116100ab5780638da5cb5b1161006f5780638da5cb5b146102b957806395d89b41146102d7578063a9059cbb146102f5578063dd62ed3e14610325578063f2fde38b146103555761011f565b80635c975abb1461023b57806370a0823114610259578063715018a61461028957806379cc6790146102935780638456cb59146102af5761011f565b8063313ce567116100f2578063313ce567146101bf5780633f4ba83a146101dd57806340c10f19146101e757806342966c6814610203578063486590971461021f5761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd1461017157806323b872dd1461018f575b5f80fd5b61012b610371565b6040516101389190611485565b60405180910390f35b61015b60048036038101906101569190611536565b610401565b604051610168919061158e565b60405180910390f35b610179610423565b60405161018691906115b6565b60405180910390f35b6101a960048036038101906101a491906115cf565b61042c565b6040516101b6919061158e565b60405180910390f35b6101c761045a565b6040516101d4919061163a565b60405180910390f35b6101e5610462565b005b61020160048036038101906101fc9190611536565b610474565b005b61021d60048036038101906102189190611653565b6104e1565b005b610239600480360381019061023491906116a1565b6104f5565b005b61024361054e565b604051610250919061158e565b60405180910390f35b610273600480360381019061026e91906116f1565b610563565b60405161028091906115b6565b60405180910390f35b6102916105a8565b005b6102ad60048036038101906102a89190611536565b6105bb565b005b6102b76105db565b005b6102c16105ed565b6040516102ce919061172b565b60405180910390f35b6102df610616565b6040516102ec9190611485565b60405180910390f35b61030f600480360381019061030a9190611536565b6106a6565b60405161031c919061158e565b60405180910390f35b61033f600480360381019061033a9190611744565b6106c8565b60405161034c91906115b6565b60405180910390f35b61036f600480360381019061036a91906116f1565b61074a565b005b606060038054610380906117af565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac906117af565b80156103f75780601f106103ce576101008083540402835291602001916103f7565b820191905f5260205f20905b8154815290600101906020018083116103da57829003601f168201915b5050505050905090565b5f8061040b6107ce565b90506104188185856107d5565b600191505092915050565b5f600254905090565b5f806104366107ce565b90506104438582856107e7565b61044e858585610879565b60019150509392505050565b5f6012905090565b61046a610969565b6104726109f0565b565b61047c610969565b60065481610488610423565b610492919061180c565b11156104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca90611889565b60405180910390fd5b6104dd8282610a51565b5050565b6104f26104ec6107ce565b82610ad0565b50565b5f6105008383610b4f565b905061050c84826106a6565b507ffb5428f39f62fa9aa68d6c0db25fff3552d2958850e862561354749ea2bbef3d308583604051610540939291906118a7565b60405180910390a150505050565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105b0610969565b6105b95f610e43565b565b6105cd826105c76107ce565b836107e7565b6105d78282610ad0565b5050565b6105e3610969565b6105eb610f08565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610625906117af565b80601f0160208091040260200160405190810160405280929190818152602001828054610651906117af565b801561069c5780601f106106735761010080835404028352916020019161069c565b820191905f5260205f20905b81548152906001019060200180831161067f57829003601f168201915b5050505050905090565b5f806106b06107ce565b90506106bd818585610879565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610752610969565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107b9919061172b565b60405180910390fd5b6107cb81610e43565b50565b5f33905090565b6107e28383836001610f6a565b505050565b5f6107f284846106c8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108735781811015610864578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161085b939291906118dc565b60405180910390fd5b61087284848484035f610f6a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108e9575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108e0919061172b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610959575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610950919061172b565b60405180910390fd5b610964838383611139565b505050565b6109716107ce565b73ffffffffffffffffffffffffffffffffffffffff1661098f6105ed565b73ffffffffffffffffffffffffffffffffffffffff16146109ee576109b26107ce565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109e5919061172b565b60405180910390fd5b565b6109f8611149565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610a3a6107ce565b604051610a47919061172b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ac1575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ab8919061172b565b60405180910390fd5b610acc5f8383611139565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b40575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b37919061172b565b60405180910390fd5b610b4b825f83611139565b5050565b5f805f90505f610b5d610423565b905060646019600654610b709190611911565b610b7a919061197f565b8110158015610ba2575060646032600654610b959190611911565b610b9f919061197f565b81105b15610c4f575f6001811115610bba57610bb96119af565b5b846001811115610bcd57610bcc6119af565b5b03610c10576064610bdc61045a565b600a610be89190611b0b565b866002610bf59190611911565b610bff9190611911565b610c09919061197f565b9150610c4a565b6064610c1a61045a565b600a610c269190611b0b565b866001610c339190611911565b610c3d9190611911565b610c47919061197f565b91505b610e38565b60646032600654610c609190611911565b610c6a919061197f565b8110158015610c9257506064604b600654610c859190611911565b610c8f919061197f565b81105b15610d40575f6001811115610caa57610ca96119af565b5b846001811115610cbd57610cbc6119af565b5b03610d00576064610ccc61045a565b600a610cd89190611b0b565b866001610ce59190611911565b610cef9190611911565b610cf9919061197f565b9150610d3b565b6103e8610d0b61045a565b600a610d179190611b0b565b866005610d249190611911565b610d2e9190611911565b610d38919061197f565b91505b610e37565b6064604b600654610d519190611911565b610d5b919061197f565b8110158015610d8357506064605f600654610d769190611911565b610d80919061197f565b81105b15610e32575f6001811115610d9b57610d9a6119af565b5b846001811115610dae57610dad6119af565b5b03610df2576103e8610dbe61045a565b600a610dca9190611b0b565b866005610dd79190611911565b610de19190611911565b610deb919061197f565b9150610e2d565b612710610dfd61045a565b600a610e099190611b0b565b866019610e169190611911565b610e209190611911565b610e2a919061197f565b91505b610e36565b5f91505b5b5b819250505092915050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f10611189565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f536107ce565b604051610f60919061172b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fda575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fd1919061172b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361104a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611041919061172b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611133578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161112a91906115b6565b60405180910390a35b50505050565b6111448383836111ca565b505050565b61115161054e565b611187576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61119161054e565b156111c8576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111d2611189565b6111dd8383836111e2565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611232578060025f828254611226919061180c565b92505081905550611300565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156112bb578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016112b2939291906118dc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611347578060025f8282540392505081905550611391565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113ee91906115b6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611432578082015181840152602081019050611417565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611457826113fb565b6114618185611405565b9350611471818560208601611415565b61147a8161143d565b840191505092915050565b5f6020820190508181035f83015261149d818461144d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114d2826114a9565b9050919050565b6114e2816114c8565b81146114ec575f80fd5b50565b5f813590506114fd816114d9565b92915050565b5f819050919050565b61151581611503565b811461151f575f80fd5b50565b5f813590506115308161150c565b92915050565b5f806040838503121561154c5761154b6114a5565b5b5f611559858286016114ef565b925050602061156a85828601611522565b9150509250929050565b5f8115159050919050565b61158881611574565b82525050565b5f6020820190506115a15f83018461157f565b92915050565b6115b081611503565b82525050565b5f6020820190506115c95f8301846115a7565b92915050565b5f805f606084860312156115e6576115e56114a5565b5b5f6115f3868287016114ef565b9350506020611604868287016114ef565b925050604061161586828701611522565b9150509250925092565b5f60ff82169050919050565b6116348161161f565b82525050565b5f60208201905061164d5f83018461162b565b92915050565b5f60208284031215611668576116676114a5565b5b5f61167584828501611522565b91505092915050565b6002811061168a575f80fd5b50565b5f8135905061169b8161167e565b92915050565b5f805f606084860312156116b8576116b76114a5565b5b5f6116c5868287016114ef565b93505060206116d686828701611522565b92505060406116e78682870161168d565b9150509250925092565b5f60208284031215611706576117056114a5565b5b5f611713848285016114ef565b91505092915050565b611725816114c8565b82525050565b5f60208201905061173e5f83018461171c565b92915050565b5f806040838503121561175a576117596114a5565b5b5f611767858286016114ef565b9250506020611778858286016114ef565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117c657607f821691505b6020821081036117d9576117d8611782565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61181682611503565b915061182183611503565b9250828201905080821115611839576118386117df565b5b92915050565b7f576520736f6c64206f75740000000000000000000000000000000000000000005f82015250565b5f611873600b83611405565b915061187e8261183f565b602082019050919050565b5f6020820190508181035f8301526118a081611867565b9050919050565b5f6060820190506118ba5f83018661171c565b6118c7602083018561171c565b6118d460408301846115a7565b949350505050565b5f6060820190506118ef5f83018661171c565b6118fc60208301856115a7565b61190960408301846115a7565b949350505050565b5f61191b82611503565b915061192683611503565b925082820261193481611503565b9150828204841483151761194b5761194a6117df565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61198982611503565b915061199483611503565b9250826119a4576119a3611952565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115611a3157808604811115611a0d57611a0c6117df565b5b6001851615611a1c5780820291505b8081029050611a2a856119dc565b94506119f1565b94509492505050565b5f82611a495760019050611b04565b81611a56575f9050611b04565b8160018114611a6c5760028114611a7657611aa5565b6001915050611b04565b60ff841115611a8857611a876117df565b5b8360020a915084821115611a9f57611a9e6117df565b5b50611b04565b5060208310610133831016604e8410600b8410161715611ada5782820a905083811115611ad557611ad46117df565b5b611b04565b611ae784848460016119e8565b92509050818404811115611afe57611afd6117df565b5b81810290505b9392505050565b5f611b1582611503565b9150611b208361161f565b9250611b4d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611a3a565b90509291505056fea2646970667358221220682ea60214ed887cc4b9cf3a621e5a293bc8bd7461d8f3a8dfa868900691491b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x355 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2AF JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x48659097 EQ PUSH2 0x21F JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x163A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x5A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH2 0x5DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C1 PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x380 SWAP1 PUSH2 0x17AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AC SWAP1 PUSH2 0x17AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x40B PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x418 DUP2 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x436 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x443 DUP6 DUP3 DUP6 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x44E DUP6 DUP6 DUP6 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0x969 JUMP JUMPDEST PUSH2 0x472 PUSH2 0x9F0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x47C PUSH2 0x969 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 PUSH2 0x488 PUSH2 0x423 JUMP JUMPDEST PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST GT ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0xA51 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4F2 PUSH2 0x4EC PUSH2 0x7CE JUMP JUMPDEST DUP3 PUSH2 0xAD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x500 DUP4 DUP4 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP PUSH2 0x50C DUP5 DUP3 PUSH2 0x6A6 JUMP JUMPDEST POP PUSH32 0xFB5428F39F62FA9AA68D6C0DB25FFF3552D2958850E862561354749EA2BBEF3D ADDRESS DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x540 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B0 PUSH2 0x969 JUMP JUMPDEST PUSH2 0x5B9 PUSH0 PUSH2 0xE43 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5CD DUP3 PUSH2 0x5C7 PUSH2 0x7CE JUMP JUMPDEST DUP4 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x5D7 DUP3 DUP3 PUSH2 0xAD0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5E3 PUSH2 0x969 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0xF08 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x625 SWAP1 PUSH2 0x17AF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x651 SWAP1 PUSH2 0x17AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x69C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x673 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x69C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x67F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6B0 PUSH2 0x7CE JUMP JUMPDEST SWAP1 POP PUSH2 0x6BD DUP2 DUP6 DUP6 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x752 PUSH2 0x969 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7C2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0xE43 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7F2 DUP5 DUP5 PUSH2 0x6C8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x873 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x864 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x872 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF6A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8E9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x959 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x964 DUP4 DUP4 DUP4 PUSH2 0x1139 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x971 PUSH2 0x7CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x98F PUSH2 0x5ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9EE JUMPI PUSH2 0x9B2 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x9F8 PUSH2 0x1149 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xA3A PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACC PUSH0 DUP4 DUP4 PUSH2 0x1139 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB40 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB4B DUP3 PUSH0 DUP4 PUSH2 0x1139 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH0 PUSH2 0xB5D PUSH2 0x423 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 PUSH1 0x19 PUSH1 0x6 SLOAD PUSH2 0xB70 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xB7A SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xBA2 JUMPI POP PUSH1 0x64 PUSH1 0x32 PUSH1 0x6 SLOAD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xC4F JUMPI PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBBA JUMPI PUSH2 0xBB9 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xBCD JUMPI PUSH2 0xBCC PUSH2 0x19AF JUMP JUMPDEST JUMPDEST SUB PUSH2 0xC10 JUMPI PUSH1 0x64 PUSH2 0xBDC PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x2 PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x64 PUSH2 0xC1A PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC47 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x32 PUSH1 0x6 SLOAD PUSH2 0xC60 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC6A SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xC92 JUMPI POP PUSH1 0x64 PUSH1 0x4B PUSH1 0x6 SLOAD PUSH2 0xC85 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xD40 JUMPI PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCAA JUMPI PUSH2 0xCA9 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xCBD JUMPI PUSH2 0xCBC PUSH2 0x19AF JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD00 JUMPI PUSH1 0x64 PUSH2 0xCCC PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH2 0xCE5 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xD0B PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x5 PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xD2E SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x4B PUSH1 0x6 SLOAD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xD83 JUMPI POP PUSH1 0x64 PUSH1 0x5F PUSH1 0x6 SLOAD PUSH2 0xD76 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xD80 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0xE32 JUMPI PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD9B JUMPI PUSH2 0xD9A PUSH2 0x19AF JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDAE JUMPI PUSH2 0xDAD PUSH2 0x19AF JUMP JUMPDEST JUMPDEST SUB PUSH2 0xDF2 JUMPI PUSH2 0x3E8 PUSH2 0xDBE PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x5 PUSH2 0xDD7 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x2710 PUSH2 0xDFD PUSH2 0x45A JUMP JUMPDEST PUSH1 0xA PUSH2 0xE09 SWAP2 SWAP1 PUSH2 0x1B0B JUMP JUMPDEST DUP7 PUSH1 0x19 PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xE20 SWAP2 SWAP1 PUSH2 0x1911 JUMP JUMPDEST PUSH2 0xE2A SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH0 SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF10 PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF53 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x104A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1041 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1133 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1144 DUP4 DUP4 DUP4 PUSH2 0x11CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1151 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1191 PUSH2 0x54E JUMP JUMPDEST ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x11D2 PUSH2 0x1189 JUMP JUMPDEST PUSH2 0x11DD DUP4 DUP4 DUP4 PUSH2 0x11E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1232 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x180C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1300 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12BB JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1347 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1391 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13EE SWAP2 SWAP1 PUSH2 0x15B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1432 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1417 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1457 DUP3 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0x1461 DUP2 DUP6 PUSH2 0x1405 JUMP JUMPDEST SWAP4 POP PUSH2 0x1471 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x147A DUP2 PUSH2 0x143D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149D DUP2 DUP5 PUSH2 0x144D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D2 DUP3 PUSH2 0x14A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E2 DUP2 PUSH2 0x14C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x14EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14FD DUP2 PUSH2 0x14D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1515 DUP2 PUSH2 0x1503 JUMP JUMPDEST DUP2 EQ PUSH2 0x151F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1530 DUP2 PUSH2 0x150C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x154C JUMPI PUSH2 0x154B PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1559 DUP6 DUP3 DUP7 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x156A DUP6 DUP3 DUP7 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1588 DUP2 PUSH2 0x1574 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A1 PUSH0 DUP4 ADD DUP5 PUSH2 0x157F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B0 DUP2 PUSH2 0x1503 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x15A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F3 DUP7 DUP3 DUP8 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1604 DUP7 DUP3 DUP8 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1615 DUP7 DUP3 DUP8 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1634 DUP2 PUSH2 0x161F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x164D PUSH0 DUP4 ADD DUP5 PUSH2 0x162B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1668 JUMPI PUSH2 0x1667 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1675 DUP5 DUP3 DUP6 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x168A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x169B DUP2 PUSH2 0x167E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16B8 JUMPI PUSH2 0x16B7 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C5 DUP7 DUP3 DUP8 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16D6 DUP7 DUP3 DUP8 ADD PUSH2 0x1522 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16E7 DUP7 DUP3 DUP8 ADD PUSH2 0x168D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1713 DUP5 DUP3 DUP6 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1725 DUP2 PUSH2 0x14C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x173E PUSH0 DUP4 ADD DUP5 PUSH2 0x171C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x175A JUMPI PUSH2 0x1759 PUSH2 0x14A5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1767 DUP6 DUP3 DUP7 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1778 DUP6 DUP3 DUP7 ADD PUSH2 0x14EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17D9 JUMPI PUSH2 0x17D8 PUSH2 0x1782 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1816 DUP3 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1821 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1839 JUMPI PUSH2 0x1838 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x576520736F6C64206F7574000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1873 PUSH1 0xB DUP4 PUSH2 0x1405 JUMP JUMPDEST SWAP2 POP PUSH2 0x187E DUP3 PUSH2 0x183F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A0 DUP2 PUSH2 0x1867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18BA PUSH0 DUP4 ADD DUP7 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x18C7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x18D4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15A7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18EF PUSH0 DUP4 ADD DUP7 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x18FC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x1909 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15A7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x191B DUP3 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1926 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1934 DUP2 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x194B JUMPI PUSH2 0x194A PUSH2 0x17DF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1989 DUP3 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1994 DUP4 PUSH2 0x1503 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x19A4 JUMPI PUSH2 0x19A3 PUSH2 0x1952 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1A31 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1A0D JUMPI PUSH2 0x1A0C PUSH2 0x17DF JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1A1C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1A2A DUP6 PUSH2 0x19DC JUMP JUMPDEST SWAP5 POP PUSH2 0x19F1 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1A49 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1B04 JUMP JUMPDEST DUP2 PUSH2 0x1A56 JUMPI PUSH0 SWAP1 POP PUSH2 0x1B04 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1A6C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A76 JUMPI PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1A88 JUMPI PUSH2 0x1A87 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x17DF JUMP JUMPDEST JUMPDEST POP PUSH2 0x1B04 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1ADA JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1AD5 JUMPI PUSH2 0x1AD4 PUSH2 0x17DF JUMP JUMPDEST JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST PUSH2 0x1AE7 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x19E8 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1AFE JUMPI PUSH2 0x1AFD PUSH2 0x17DF JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B15 DUP3 PUSH2 0x1503 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B20 DUP4 PUSH2 0x161F JUMP JUMPDEST SWAP3 POP PUSH2 0x1B4D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1A3A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x2EA60214ED887CC4B9 0xCF GASPRICE PUSH3 0x1E5A29 EXTCODESIZE 0xC8 0xBD PUSH21 0x61D8F3A8DFA868900691491B64736F6C6343000818 STOP CALLER ",
							"sourceMap": "363:2466:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;789:63:10;;;:::i;:::-;;858:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2526:301:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1850:84:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;724:59:10;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;789:63:10:-;1531:13:0;:11;:13::i;:::-;835:10:10::1;:8;:10::i;:::-;789:63::o:0;858:162::-;1531:13:0;:11;:13::i;:::-;961:9:10::1;;951:6;935:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:35;;927:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;996:17;1002:2;1006:6;996:5;:17::i;:::-;858:162:::0;;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2526:301:10:-;2639:22;2664:44;2676:19;2697:10;2664:11;:44::i;:::-;2639:69;;2718:28;2727:2;2731:14;2718:8;:28::i;:::-;;2762:58;2794:4;2801:2;2805:14;2762:58;;;;;;;;:::i;:::-;;;;;;;;2629:198;2526:301;;;:::o;1850:84:8:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;724:59:10:-;1531:13:0;:11;:13::i;:::-;768:8:10::1;:6;:8::i;:::-;724:59::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:8:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;1265:1255:10:-;1365:7;1384:15;1402:1;1384:19;;1413:20;1436:13;:11;:13::i;:::-;1413:36;;1496:3;1491:2;1479:9;;:14;;;;:::i;:::-;:20;;;;:::i;:::-;1462:12;:38;;:79;;;;;1537:3;1532:2;1520:9;;:14;;;;:::i;:::-;:20;;;;:::i;:::-;1504:12;:37;1462:79;1459:1030;;;1574:28;1560:42;;;;;;;;:::i;:::-;;:10;:42;;;;;;;;:::i;:::-;;;1557:214;;1675:3;1661:10;:8;:10::i;:::-;1655:2;:16;;;;:::i;:::-;1634:17;1630:1;:21;;;;:::i;:::-;:42;;;;:::i;:::-;:48;;;;:::i;:::-;1620:58;;1557:214;;;1768:3;1754:10;:8;:10::i;:::-;1748:2;:16;;;;:::i;:::-;1727:17;1723:1;:21;;;;:::i;:::-;:42;;;;:::i;:::-;:48;;;;:::i;:::-;1713:58;;1557:214;1459:1030;;;1825:3;1820:2;1808:9;;:14;;;;:::i;:::-;:20;;;;:::i;:::-;1791:12;:38;;:79;;;;;1866:3;1861:2;1849:9;;:14;;;;:::i;:::-;:20;;;;:::i;:::-;1833:12;:37;1791:79;1788:701;;;1904:28;1890:42;;;;;;;;:::i;:::-;;:10;:42;;;;;;;;:::i;:::-;;;1887:215;;2005:3;1991:10;:8;:10::i;:::-;1985:2;:16;;;;:::i;:::-;1964:17;1960:1;:21;;;;:::i;:::-;:42;;;;:::i;:::-;:48;;;;:::i;:::-;1950:58;;1887:215;;;2098:4;2084:10;:8;:10::i;:::-;2078:2;:16;;;;:::i;:::-;2057:17;2053:1;:21;;;;:::i;:::-;:42;;;;:::i;:::-;:49;;;;:::i;:::-;2043:59;;1887:215;1788:701;;;2156:3;2151:2;2139:9;;:14;;;;:::i;:::-;:20;;;;:::i;:::-;2122:12;:38;;:79;;;;;2197:3;2192:2;2180:9;;:14;;;;:::i;:::-;:20;;;;:::i;:::-;2164:12;:37;2122:79;2119:370;;;2235:28;2221:42;;;;;;;;:::i;:::-;;:10;:42;;;;;;;;:::i;:::-;;;2218:218;;2336:4;2322:10;:8;:10::i;:::-;2316:2;:16;;;;:::i;:::-;2295:17;2291:1;:21;;;;:::i;:::-;:42;;;;:::i;:::-;:49;;;;:::i;:::-;2281:59;;2218:218;;;2431:5;2417:10;:8;:10::i;:::-;2411:2;:16;;;;:::i;:::-;2390:17;2385:2;:22;;;;:::i;:::-;:43;;;;:::i;:::-;:51;;;;:::i;:::-;2375:61;;2218:218;2119:370;;;2477:1;2467:11;;2119:370;1788:701;1459:1030;2506:7;2499:14;;;;1265:1255;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2463:115:8:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7;;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;1094:165:10:-;1222:30;1236:4;1242:2;1246:5;1222:13;:30::i;:::-;1094:165;;;:::o;2202:126:8:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;2002:128::-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;1112:145:5:-;1474:19:8;:17;:19::i;:::-;1220:30:5::1;1234:4;1240:2;1244:5;1220:13;:30::i;:::-;1112:145:::0;;;:::o;6271:1107:2:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:114::-;5276:1;5269:5;5266:12;5256:40;;5292:1;5289;5282:12;5256:40;5188:114;:::o;5308:169::-;5369:5;5407:6;5394:20;5385:29;;5423:48;5465:5;5423:48;:::i;:::-;5308:169;;;;:::o;5483:649::-;5575:6;5583;5591;5640:2;5628:9;5619:7;5615:23;5611:32;5608:119;;;5646:79;;:::i;:::-;5608:119;5766:1;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5737:117;5893:2;5919:53;5964:7;5955:6;5944:9;5940:22;5919:53;:::i;:::-;5909:63;;5864:118;6021:2;6047:68;6107:7;6098:6;6087:9;6083:22;6047:68;:::i;:::-;6037:78;;5992:133;5483:649;;;;;:::o;6138:329::-;6197:6;6246:2;6234:9;6225:7;6221:23;6217:32;6214:119;;;6252:79;;:::i;:::-;6214:119;6372:1;6397:53;6442:7;6433:6;6422:9;6418:22;6397:53;:::i;:::-;6387:63;;6343:117;6138:329;;;;:::o;6473:118::-;6560:24;6578:5;6560:24;:::i;:::-;6555:3;6548:37;6473:118;;:::o;6597:222::-;6690:4;6728:2;6717:9;6713:18;6705:26;;6741:71;6809:1;6798:9;6794:17;6785:6;6741:71;:::i;:::-;6597:222;;;;:::o;6825:474::-;6893:6;6901;6950:2;6938:9;6929:7;6925:23;6921:32;6918:119;;;6956:79;;:::i;:::-;6918:119;7076:1;7101:53;7146:7;7137:6;7126:9;7122:22;7101:53;:::i;:::-;7091:63;;7047:117;7203:2;7229:53;7274:7;7265:6;7254:9;7250:22;7229:53;:::i;:::-;7219:63;;7174:118;6825:474;;;;;:::o;7305:180::-;7353:77;7350:1;7343:88;7450:4;7447:1;7440:15;7474:4;7471:1;7464:15;7491:320;7535:6;7572:1;7566:4;7562:12;7552:22;;7619:1;7613:4;7609:12;7640:18;7630:81;;7696:4;7688:6;7684:17;7674:27;;7630:81;7758:2;7750:6;7747:14;7727:18;7724:38;7721:84;;7777:18;;:::i;:::-;7721:84;7542:269;7491:320;;;:::o;7817:180::-;7865:77;7862:1;7855:88;7962:4;7959:1;7952:15;7986:4;7983:1;7976:15;8003:191;8043:3;8062:20;8080:1;8062:20;:::i;:::-;8057:25;;8096:20;8114:1;8096:20;:::i;:::-;8091:25;;8139:1;8136;8132:9;8125:16;;8160:3;8157:1;8154:10;8151:36;;;8167:18;;:::i;:::-;8151:36;8003:191;;;;:::o;8200:161::-;8340:13;8336:1;8328:6;8324:14;8317:37;8200:161;:::o;8367:366::-;8509:3;8530:67;8594:2;8589:3;8530:67;:::i;:::-;8523:74;;8606:93;8695:3;8606:93;:::i;:::-;8724:2;8719:3;8715:12;8708:19;;8367:366;;;:::o;8739:419::-;8905:4;8943:2;8932:9;8928:18;8920:26;;8992:9;8986:4;8982:20;8978:1;8967:9;8963:17;8956:47;9020:131;9146:4;9020:131;:::i;:::-;9012:139;;8739:419;;;:::o;9164:442::-;9313:4;9351:2;9340:9;9336:18;9328:26;;9364:71;9432:1;9421:9;9417:17;9408:6;9364:71;:::i;:::-;9445:72;9513:2;9502:9;9498:18;9489:6;9445:72;:::i;:::-;9527;9595:2;9584:9;9580:18;9571:6;9527:72;:::i;:::-;9164:442;;;;;;:::o;9612:::-;9761:4;9799:2;9788:9;9784:18;9776:26;;9812:71;9880:1;9869:9;9865:17;9856:6;9812:71;:::i;:::-;9893:72;9961:2;9950:9;9946:18;9937:6;9893:72;:::i;:::-;9975;10043:2;10032:9;10028:18;10019:6;9975:72;:::i;:::-;9612:442;;;;;;:::o;10060:410::-;10100:7;10123:20;10141:1;10123:20;:::i;:::-;10118:25;;10157:20;10175:1;10157:20;:::i;:::-;10152:25;;10212:1;10209;10205:9;10234:30;10252:11;10234:30;:::i;:::-;10223:41;;10413:1;10404:7;10400:15;10397:1;10394:22;10374:1;10367:9;10347:83;10324:139;;10443:18;;:::i;:::-;10324:139;10108:362;10060:410;;;;:::o;10476:180::-;10524:77;10521:1;10514:88;10621:4;10618:1;10611:15;10645:4;10642:1;10635:15;10662:185;10702:1;10719:20;10737:1;10719:20;:::i;:::-;10714:25;;10753:20;10771:1;10753:20;:::i;:::-;10748:25;;10792:1;10782:35;;10797:18;;:::i;:::-;10782:35;10839:1;10836;10832:9;10827:14;;10662:185;;;;:::o;10853:180::-;10901:77;10898:1;10891:88;10998:4;10995:1;10988:15;11022:4;11019:1;11012:15;11039:102;11081:8;11128:5;11125:1;11121:13;11100:34;;11039:102;;;:::o;11147:848::-;11208:5;11215:4;11239:6;11230:15;;11263:5;11254:14;;11277:712;11298:1;11288:8;11285:15;11277:712;;;11393:4;11388:3;11384:14;11378:4;11375:24;11372:50;;;11402:18;;:::i;:::-;11372:50;11452:1;11442:8;11438:16;11435:451;;;11867:4;11860:5;11856:16;11847:25;;11435:451;11917:4;11911;11907:15;11899:23;;11947:32;11970:8;11947:32;:::i;:::-;11935:44;;11277:712;;;11147:848;;;;;;;:::o;12001:1073::-;12055:5;12246:8;12236:40;;12267:1;12258:10;;12269:5;;12236:40;12295:4;12285:36;;12312:1;12303:10;;12314:5;;12285:36;12381:4;12429:1;12424:27;;;;12465:1;12460:191;;;;12374:277;;12424:27;12442:1;12433:10;;12444:5;;;12460:191;12505:3;12495:8;12492:17;12489:43;;;12512:18;;:::i;:::-;12489:43;12561:8;12558:1;12554:16;12545:25;;12596:3;12589:5;12586:14;12583:40;;;12603:18;;:::i;:::-;12583:40;12636:5;;;12374:277;;12760:2;12750:8;12747:16;12741:3;12735:4;12732:13;12728:36;12710:2;12700:8;12697:16;12692:2;12686:4;12683:12;12679:35;12663:111;12660:246;;;12816:8;12810:4;12806:19;12797:28;;12851:3;12844:5;12841:14;12838:40;;;12858:18;;:::i;:::-;12838:40;12891:5;;12660:246;12931:42;12969:3;12959:8;12953:4;12950:1;12931:42;:::i;:::-;12916:57;;;;13005:4;13000:3;12996:14;12989:5;12986:25;12983:51;;;13014:18;;:::i;:::-;12983:51;13063:4;13056:5;13052:16;13043:25;;12001:1073;;;;;;:::o;13080:281::-;13138:5;13162:23;13180:4;13162:23;:::i;:::-;13154:31;;13206:25;13222:8;13206:25;:::i;:::-;13194:37;;13250:104;13287:66;13277:8;13271:4;13250:104;:::i;:::-;13241:113;;13080:281;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1410200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "361",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2588",
								"pause()": "infinite",
								"paused()": "2496",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferTokens(address,uint256,uint8)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite",
								"tokenReward(uint256,enum Types.Acceptance)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 363,
									"end": 2829,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 483,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 491,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 491,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 483,
									"end": 493,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 483,
									"end": 493,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 483,
									"end": 493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 483,
									"end": 493,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 493,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 477,
									"end": 479,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 477,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 477,
									"end": 493,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 477,
									"end": 493,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 477,
									"end": 493,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 477,
									"end": 493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 477,
									"end": 493,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 477,
									"end": 493,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 465,
									"end": 473,
									"name": "PUSH",
									"source": 10,
									"value": "989680"
								},
								{
									"begin": 465,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 465,
									"end": 494,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 465,
									"end": 494,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 465,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 465,
									"end": 494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 465,
									"end": 494,
									"name": "tag",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 465,
									"end": 494,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 436,
									"end": 494,
									"name": "PUSH",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 436,
									"end": 494,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 528,
									"end": 718,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 528,
									"end": 718,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 528,
									"end": 718,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 528,
									"end": 718,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 528,
									"end": 718,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 528,
									"end": 718,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 528,
									"end": 718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 528,
									"end": 718,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 612,
									"end": 624,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4765656B546F6B656E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "47544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 685,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 646,
									"end": 656,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 674,
									"end": 684,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 674,
									"end": 682,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 674,
									"end": 682,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 674,
									"end": 682,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 674,
									"end": 684,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 674,
									"end": 684,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 674,
									"end": 684,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 674,
									"end": 684,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 674,
									"end": 684,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 668,
									"end": 670,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 668,
									"end": 684,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 668,
									"end": 684,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 668,
									"end": 684,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 668,
									"end": 684,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 668,
									"end": 684,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 668,
									"end": 684,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 668,
									"end": 684,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 658,
									"end": 665,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "2625A0"
								},
								{
									"begin": 658,
									"end": 684,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 658,
									"end": 684,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 658,
									"end": 684,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 658,
									"end": 684,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 658,
									"end": 684,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 658,
									"end": 684,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 658,
									"end": 684,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 640,
									"end": 645,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 640,
									"end": 645,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 640,
									"end": 645,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 640,
									"end": 685,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 640,
									"end": 685,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 640,
									"end": 685,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 640,
									"end": 685,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 640,
									"end": 685,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1259,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1094,
									"end": 1259,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1236,
									"end": 1240,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1242,
									"end": 1244,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1246,
									"end": 1251,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1222,
									"end": 1235,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1222,
									"end": 1235,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1252,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1222,
									"end": 1252,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1252,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1222,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1094,
									"end": 1259,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1094,
									"end": 1259,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1094,
									"end": 1259,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1094,
									"end": 1259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1491,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1474,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1234,
									"end": 1238,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1242,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1244,
									"end": 1249,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1233,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1250,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1220,
									"end": 1250,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1257,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2002,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 2067,
									"end": 2075,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "D93C066500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2098,
									"end": 2113,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2063,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2130,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1897,
									"end": 1901,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1920,
									"end": 1927,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1913,
									"end": 1927,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1850,
									"end": 1934,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1850,
									"end": 1934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 193,
									"end": 295,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 193,
									"end": 295,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 235,
									"end": 243,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 287,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 279,
									"end": 280,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 275,
									"end": 288,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 254,
									"end": 288,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 254,
									"end": 288,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 193,
									"end": 295,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 193,
									"end": 295,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 193,
									"end": 295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 362,
									"end": 367,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 373,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 393,
									"end": 399,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 384,
									"end": 399,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 384,
									"end": 399,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 417,
									"end": 422,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 408,
									"end": 422,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 408,
									"end": 422,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 452,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 442,
									"end": 450,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 439,
									"end": 454,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 547,
									"end": 551,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 542,
									"end": 545,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 538,
									"end": 552,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 532,
									"end": 536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 529,
									"end": 553,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 526,
									"end": 576,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 526,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 556,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 556,
									"end": 574,
									"name": "tag",
									"source": 12,
									"value": "107"
								},
								{
									"begin": 556,
									"end": 574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 526,
									"end": 576,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 526,
									"end": 576,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 606,
									"end": 607,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 604,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 592,
									"end": 608,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1025,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1010,
									"end": 1026,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1026,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 589,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1071,
									"end": 1075,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1061,
									"end": 1076,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1053,
									"end": 1076,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1124,
									"end": 1132,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1101,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 1101,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 1089,
									"end": 1133,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 431,
									"end": 1143,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 301,
									"end": 1149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1209,
									"end": 1214,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1408,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1421,
									"end": 1422,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1412,
									"end": 1422,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1423,
									"end": 1428,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 1390,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1449,
									"end": 1453,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1466,
									"end": 1467,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1457,
									"end": 1467,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 1439,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1583,
									"end": 1584,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1619,
									"end": 1620,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 1578,
									"end": 1605,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1596,
									"end": 1597,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1587,
									"end": 1597,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1598,
									"end": 1603,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 1614,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1659,
									"end": 1662,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 1649,
									"end": 1657,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1646,
									"end": 1663,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1666,
									"end": 1684,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 1666,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 1643,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1715,
									"end": 1723,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1708,
									"end": 1724,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1699,
									"end": 1724,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1743,
									"end": 1748,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1754,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1757,
									"end": 1775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 1757,
									"end": 1775,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 1737,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1790,
									"end": 1795,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1805,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1904,
									"end": 1912,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1901,
									"end": 1917,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1895,
									"end": 1898,
									"name": "PUSH",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1882,
									"end": 1918,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1864,
									"end": 1866,
									"name": "PUSH",
									"source": 12,
									"value": "4E"
								},
								{
									"begin": 1854,
									"end": 1862,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1851,
									"end": 1867,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1833,
									"end": 1868,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1817,
									"end": 1928,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1970,
									"end": 1978,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1964,
									"end": 1968,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1951,
									"end": 1979,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2005,
									"end": 2008,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1998,
									"end": 2003,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1995,
									"end": 2009,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2012,
									"end": 2030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 2012,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 1992,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 2045,
									"end": 2050,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 1814,
									"end": 2060,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2113,
									"end": 2121,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2107,
									"end": 2111,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2104,
									"end": 2105,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2085,
									"end": 2127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 2085,
									"end": 2127,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2070,
									"end": 2127,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2159,
									"end": 2163,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2154,
									"end": 2157,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2150,
									"end": 2164,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 2143,
									"end": 2148,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2140,
									"end": 2165,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 2168,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 2168,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 2137,
									"end": 2188,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2217,
									"end": 2221,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2210,
									"end": 2215,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2206,
									"end": 2222,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2197,
									"end": 2222,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 2228,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1155,
									"end": 2228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2305,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2289,
									"end": 2305,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2311,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2234,
									"end": 2311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2352,
									"end": 2359,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2396,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2385,
									"end": 2390,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2381,
									"end": 2397,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2370,
									"end": 2397,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2317,
									"end": 2403,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2317,
									"end": 2403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "tag",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2472,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 2509,
									"end": 2513,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2491,
									"end": 2514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "tag",
									"source": 12,
									"value": "129"
								},
								{
									"begin": 2491,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2483,
									"end": 2514,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 2551,
									"end": 2559,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2535,
									"end": 2560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "tag",
									"source": 12,
									"value": "130"
								},
								{
									"begin": 2535,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2523,
									"end": 2560,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 2616,
									"end": 2682,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2614,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2600,
									"end": 2604,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2579,
									"end": 2683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "tag",
									"source": 12,
									"value": "131"
								},
								{
									"begin": 2579,
									"end": 2683,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2570,
									"end": 2683,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2409,
									"end": 2690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "tag",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2736,
									"end": 2743,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 2777,
									"end": 2778,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2759,
									"end": 2779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 2759,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2754,
									"end": 2779,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 2811,
									"end": 2812,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2793,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 2793,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2788,
									"end": 2813,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2845,
									"end": 2846,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2841,
									"end": 2850,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 2888,
									"end": 2899,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2870,
									"end": 2900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "tag",
									"source": 12,
									"value": "135"
								},
								{
									"begin": 2870,
									"end": 2900,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2900,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3049,
									"end": 3050,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3040,
									"end": 3047,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3051,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3052,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3010,
									"end": 3011,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3003,
									"end": 3012,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2983,
									"end": 3066,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 3079,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "tag",
									"source": 12,
									"value": "137"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 2960,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2744,
									"end": 3106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2696,
									"end": 3106,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2696,
									"end": 3106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3193,
									"end": 3310,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3193,
									"end": 3310,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3302,
									"end": 3303,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3299,
									"end": 3300,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3292,
									"end": 3304,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3476,
									"end": 3483,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3516,
									"end": 3558,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3509,
									"end": 3514,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3505,
									"end": 3559,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3494,
									"end": 3559,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3494,
									"end": 3559,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3565,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3608,
									"end": 3615,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 3655,
									"end": 3660,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 3637,
									"end": 3661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "tag",
									"source": 12,
									"value": "143"
								},
								{
									"begin": 3637,
									"end": 3661,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3626,
									"end": 3661,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3626,
									"end": 3661,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3667,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 3764,
									"end": 3769,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3746,
									"end": 3770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "tag",
									"source": 12,
									"value": "145"
								},
								{
									"begin": 3746,
									"end": 3770,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3739,
									"end": 3744,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3736,
									"end": 3771,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3785,
									"end": 3786,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3782,
									"end": 3783,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3775,
									"end": 3787,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "tag",
									"source": 12,
									"value": "146"
								},
								{
									"begin": 3726,
									"end": 3789,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3673,
									"end": 3795,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3673,
									"end": 3795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3858,
									"end": 3863,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3889,
									"end": 3895,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3883,
									"end": 3896,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3874,
									"end": 3896,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3874,
									"end": 3896,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 3932,
									"end": 3937,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 3905,
									"end": 3938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "tag",
									"source": 12,
									"value": "148"
								},
								{
									"begin": 3905,
									"end": 3938,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3944,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3801,
									"end": 3944,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4301,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 3950,
									"end": 4301,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4020,
									"end": 4026,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4069,
									"end": 4071,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4057,
									"end": 4066,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4048,
									"end": 4055,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4044,
									"end": 4067,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4040,
									"end": 4072,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 4037,
									"end": 4156,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4037,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 4037,
									"end": 4156,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4075,
									"end": 4154,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 4075,
									"end": 4154,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 4075,
									"end": 4154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4075,
									"end": 4154,
									"name": "tag",
									"source": 12,
									"value": "151"
								},
								{
									"begin": 4075,
									"end": 4154,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4037,
									"end": 4156,
									"name": "tag",
									"source": 12,
									"value": "150"
								},
								{
									"begin": 4037,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4195,
									"end": 4196,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4220,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 4276,
									"end": 4283,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4267,
									"end": 4273,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4256,
									"end": 4265,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4252,
									"end": 4274,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4220,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 4220,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4220,
									"end": 4284,
									"name": "tag",
									"source": 12,
									"value": "152"
								},
								{
									"begin": 4220,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4210,
									"end": 4284,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4210,
									"end": 4284,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4166,
									"end": 4294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4301,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4301,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4301,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4301,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3950,
									"end": 4301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4307,
									"end": 4406,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 4307,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4359,
									"end": 4365,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4393,
									"end": 4398,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4387,
									"end": 4399,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4377,
									"end": 4399,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4377,
									"end": 4399,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4307,
									"end": 4406,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4307,
									"end": 4406,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4307,
									"end": 4406,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4307,
									"end": 4406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4412,
									"end": 4592,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 4412,
									"end": 4592,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4460,
									"end": 4537,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4457,
									"end": 4458,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4450,
									"end": 4538,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4557,
									"end": 4561,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 4554,
									"end": 4555,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4547,
									"end": 4562,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4581,
									"end": 4585,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4578,
									"end": 4579,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4571,
									"end": 4586,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4598,
									"end": 4778,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4598,
									"end": 4778,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4646,
									"end": 4723,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4643,
									"end": 4644,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4636,
									"end": 4724,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4743,
									"end": 4747,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 4740,
									"end": 4741,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4733,
									"end": 4748,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4767,
									"end": 4771,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4764,
									"end": 4765,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4757,
									"end": 4772,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4784,
									"end": 5104,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 4784,
									"end": 5104,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4828,
									"end": 4834,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4865,
									"end": 4866,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4859,
									"end": 4863,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4855,
									"end": 4867,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4845,
									"end": 4867,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4845,
									"end": 4867,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4912,
									"end": 4913,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4906,
									"end": 4910,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4902,
									"end": 4914,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4933,
									"end": 4951,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4923,
									"end": 5004,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 4923,
									"end": 5004,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4989,
									"end": 4993,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 4981,
									"end": 4987,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4977,
									"end": 4994,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4967,
									"end": 4994,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4967,
									"end": 4994,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4923,
									"end": 5004,
									"name": "tag",
									"source": 12,
									"value": "157"
								},
								{
									"begin": 4923,
									"end": 5004,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5051,
									"end": 5053,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5043,
									"end": 5049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5040,
									"end": 5054,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5020,
									"end": 5038,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5017,
									"end": 5055,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 5014,
									"end": 5098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 5014,
									"end": 5098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5070,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 5070,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 5070,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5070,
									"end": 5088,
									"name": "tag",
									"source": 12,
									"value": "159"
								},
								{
									"begin": 5070,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5014,
									"end": 5098,
									"name": "tag",
									"source": 12,
									"value": "158"
								},
								{
									"begin": 5014,
									"end": 5098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4835,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4784,
									"end": 5104,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4784,
									"end": 5104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4784,
									"end": 5104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4784,
									"end": 5104,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5251,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 5110,
									"end": 5251,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5159,
									"end": 5163,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5182,
									"end": 5185,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5174,
									"end": 5185,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5174,
									"end": 5185,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5205,
									"end": 5208,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5202,
									"end": 5203,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5195,
									"end": 5209,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5239,
									"end": 5243,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5236,
									"end": 5237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5226,
									"end": 5244,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 5218,
									"end": 5244,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5218,
									"end": 5244,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5251,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5251,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5251,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5110,
									"end": 5251,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5257,
									"end": 5350,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 5257,
									"end": 5350,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5294,
									"end": 5300,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5341,
									"end": 5343,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5336,
									"end": 5338,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5329,
									"end": 5334,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5325,
									"end": 5339,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5321,
									"end": 5344,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 5311,
									"end": 5344,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5311,
									"end": 5344,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5257,
									"end": 5350,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5257,
									"end": 5350,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5257,
									"end": 5350,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5257,
									"end": 5350,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5356,
									"end": 5463,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 5356,
									"end": 5463,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5400,
									"end": 5408,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5440,
									"end": 5456,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 5419,
									"end": 5456,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5419,
									"end": 5456,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5356,
									"end": 5463,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5356,
									"end": 5463,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5356,
									"end": 5463,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5356,
									"end": 5463,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5356,
									"end": 5463,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5862,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 5469,
									"end": 5862,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5538,
									"end": 5544,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5588,
									"end": 5589,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 5576,
									"end": 5586,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5572,
									"end": 5590,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 5611,
									"end": 5708,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 5641,
									"end": 5707,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5630,
									"end": 5639,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5611,
									"end": 5708,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 5611,
									"end": 5708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5611,
									"end": 5708,
									"name": "tag",
									"source": 12,
									"value": "164"
								},
								{
									"begin": 5611,
									"end": 5708,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5729,
									"end": 5768,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 5759,
									"end": 5767,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5748,
									"end": 5757,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5729,
									"end": 5768,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 5729,
									"end": 5768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5729,
									"end": 5768,
									"name": "tag",
									"source": 12,
									"value": "165"
								},
								{
									"begin": 5729,
									"end": 5768,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5717,
									"end": 5768,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 5717,
									"end": 5768,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5801,
									"end": 5805,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5797,
									"end": 5806,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5790,
									"end": 5795,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5786,
									"end": 5807,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5777,
									"end": 5807,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5777,
									"end": 5807,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5850,
									"end": 5854,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 5840,
									"end": 5848,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5836,
									"end": 5855,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5829,
									"end": 5834,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5826,
									"end": 5856,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 5816,
									"end": 5856,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5816,
									"end": 5856,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5545,
									"end": 5862,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5545,
									"end": 5862,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5862,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5862,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5862,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5862,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5862,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5469,
									"end": 5862,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5868,
									"end": 5928,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 5868,
									"end": 5928,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5896,
									"end": 5899,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5917,
									"end": 5922,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5910,
									"end": 5922,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5910,
									"end": 5922,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5868,
									"end": 5928,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5868,
									"end": 5928,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5868,
									"end": 5928,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5868,
									"end": 5928,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5934,
									"end": 6076,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 5934,
									"end": 6076,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5984,
									"end": 5993,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6017,
									"end": 6070,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 6035,
									"end": 6069,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 6044,
									"end": 6068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 6062,
									"end": 6067,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6044,
									"end": 6068,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 6044,
									"end": 6068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6044,
									"end": 6068,
									"name": "tag",
									"source": 12,
									"value": "170"
								},
								{
									"begin": 6044,
									"end": 6068,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6035,
									"end": 6069,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 6035,
									"end": 6069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6035,
									"end": 6069,
									"name": "tag",
									"source": 12,
									"value": "169"
								},
								{
									"begin": 6035,
									"end": 6069,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6017,
									"end": 6070,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 6017,
									"end": 6070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6017,
									"end": 6070,
									"name": "tag",
									"source": 12,
									"value": "168"
								},
								{
									"begin": 6017,
									"end": 6070,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6004,
									"end": 6070,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6004,
									"end": 6070,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5934,
									"end": 6076,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5934,
									"end": 6076,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5934,
									"end": 6076,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5934,
									"end": 6076,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6082,
									"end": 6157,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 6082,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6125,
									"end": 6128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6146,
									"end": 6151,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6139,
									"end": 6151,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6139,
									"end": 6151,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6082,
									"end": 6157,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6082,
									"end": 6157,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6082,
									"end": 6157,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6082,
									"end": 6157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6163,
									"end": 6432,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 6163,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6273,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 6304,
									"end": 6311,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6273,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 6273,
									"end": 6312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6273,
									"end": 6312,
									"name": "tag",
									"source": 12,
									"value": "173"
								},
								{
									"begin": 6273,
									"end": 6312,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6334,
									"end": 6425,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 6383,
									"end": 6424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 6407,
									"end": 6423,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6383,
									"end": 6424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 6383,
									"end": 6424,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6383,
									"end": 6424,
									"name": "tag",
									"source": 12,
									"value": "175"
								},
								{
									"begin": 6383,
									"end": 6424,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6375,
									"end": 6381,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6368,
									"end": 6372,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6362,
									"end": 6373,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 6334,
									"end": 6425,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 6334,
									"end": 6425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6334,
									"end": 6425,
									"name": "tag",
									"source": 12,
									"value": "174"
								},
								{
									"begin": 6334,
									"end": 6425,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6328,
									"end": 6332,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6321,
									"end": 6426,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6239,
									"end": 6432,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6163,
									"end": 6432,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6163,
									"end": 6432,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6163,
									"end": 6432,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6163,
									"end": 6432,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6511,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 6438,
									"end": 6511,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6483,
									"end": 6486,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6438,
									"end": 6511,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6438,
									"end": 6511,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6517,
									"end": 6706,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 6517,
									"end": 6706,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6594,
									"end": 6626,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "178"
								},
								{
									"begin": 6594,
									"end": 6626,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 6594,
									"end": 6626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6594,
									"end": 6626,
									"name": "tag",
									"source": 12,
									"value": "178"
								},
								{
									"begin": 6594,
									"end": 6626,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6635,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 6693,
									"end": 6699,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6685,
									"end": 6691,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6679,
									"end": 6683,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6635,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 6635,
									"end": 6700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6635,
									"end": 6700,
									"name": "tag",
									"source": 12,
									"value": "179"
								},
								{
									"begin": 6635,
									"end": 6700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6570,
									"end": 6706,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6517,
									"end": 6706,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6517,
									"end": 6706,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6517,
									"end": 6706,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6712,
									"end": 6898,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 6712,
									"end": 6898,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "tag",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6789,
									"end": 6792,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6782,
									"end": 6787,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6779,
									"end": 6793,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6843,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 6880,
									"end": 6881,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6873,
									"end": 6878,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6843,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 6843,
									"end": 6882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6843,
									"end": 6882,
									"name": "tag",
									"source": 12,
									"value": "184"
								},
								{
									"begin": 6843,
									"end": 6882,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6816,
									"end": 6817,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6809,
									"end": 6814,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6805,
									"end": 6818,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6796,
									"end": 6818,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6796,
									"end": 6818,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "181"
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "tag",
									"source": 12,
									"value": "183"
								},
								{
									"begin": 6772,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6712,
									"end": 6898,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6712,
									"end": 6898,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6712,
									"end": 6898,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6904,
									"end": 7447,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 6904,
									"end": 7447,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7005,
									"end": 7007,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 7000,
									"end": 7003,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6997,
									"end": 7008,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 6994,
									"end": 7440,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6994,
									"end": 7440,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 6994,
									"end": 7440,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7039,
									"end": 7077,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 7071,
									"end": 7076,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7039,
									"end": 7077,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 7039,
									"end": 7077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7039,
									"end": 7077,
									"name": "tag",
									"source": 12,
									"value": "187"
								},
								{
									"begin": 7039,
									"end": 7077,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7123,
									"end": 7152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 7141,
									"end": 7151,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7123,
									"end": 7152,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 7123,
									"end": 7152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7123,
									"end": 7152,
									"name": "tag",
									"source": 12,
									"value": "188"
								},
								{
									"begin": 7123,
									"end": 7152,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7113,
									"end": 7121,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7109,
									"end": 7153,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7306,
									"end": 7308,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 7294,
									"end": 7304,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7291,
									"end": 7309,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7337,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7337,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 7288,
									"end": 7337,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 7327,
									"end": 7335,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 7312,
									"end": 7335,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7312,
									"end": 7335,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7288,
									"end": 7337,
									"name": "tag",
									"source": 12,
									"value": "189"
								},
								{
									"begin": 7288,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7350,
									"end": 7430,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "190"
								},
								{
									"begin": 7406,
									"end": 7428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 7424,
									"end": 7427,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 7406,
									"end": 7428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 7406,
									"end": 7428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7406,
									"end": 7428,
									"name": "tag",
									"source": 12,
									"value": "191"
								},
								{
									"begin": 7406,
									"end": 7428,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7396,
									"end": 7404,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7392,
									"end": 7429,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7379,
									"end": 7390,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7350,
									"end": 7430,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 7350,
									"end": 7430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7350,
									"end": 7430,
									"name": "tag",
									"source": 12,
									"value": "190"
								},
								{
									"begin": 7350,
									"end": 7430,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7009,
									"end": 7440,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7009,
									"end": 7440,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6994,
									"end": 7440,
									"name": "tag",
									"source": 12,
									"value": "186"
								},
								{
									"begin": 6994,
									"end": 7440,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6904,
									"end": 7447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6904,
									"end": 7447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6904,
									"end": 7447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6904,
									"end": 7447,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7453,
									"end": 7570,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 7453,
									"end": 7570,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7507,
									"end": 7515,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7562,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7551,
									"end": 7555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 7547,
									"end": 7563,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 7526,
									"end": 7563,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7526,
									"end": 7563,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7453,
									"end": 7570,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7453,
									"end": 7570,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7453,
									"end": 7570,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7453,
									"end": 7570,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7453,
									"end": 7570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7576,
									"end": 7745,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 7576,
									"end": 7745,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7620,
									"end": 7626,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7653,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 7701,
									"end": 7702,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7697,
									"end": 7703,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7689,
									"end": 7694,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 7686,
									"end": 7687,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 7682,
									"end": 7695,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 7653,
									"end": 7704,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 7653,
									"end": 7704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7653,
									"end": 7704,
									"name": "tag",
									"source": 12,
									"value": "194"
								},
								{
									"begin": 7653,
									"end": 7704,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7649,
									"end": 7705,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 7734,
									"end": 7738,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 7728,
									"end": 7732,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7724,
									"end": 7739,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 7714,
									"end": 7739,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7714,
									"end": 7739,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7627,
									"end": 7745,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7576,
									"end": 7745,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7576,
									"end": 7745,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7576,
									"end": 7745,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7576,
									"end": 7745,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7576,
									"end": 7745,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7750,
									"end": 8045,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 7750,
									"end": 8045,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 7972,
									"end": 8001,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 7997,
									"end": 8000,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7991,
									"end": 7995,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 7972,
									"end": 8001,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 7972,
									"end": 8001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7972,
									"end": 8001,
									"name": "tag",
									"source": 12,
									"value": "196"
								},
								{
									"begin": 7972,
									"end": 8001,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 7964,
									"end": 8001,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7964,
									"end": 8001,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8034,
									"end": 8037,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8031,
									"end": 8032,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 8027,
									"end": 8038,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 8021,
									"end": 8025,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8018,
									"end": 8039,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 8010,
									"end": 8039,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8010,
									"end": 8039,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7750,
									"end": 8045,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 7750,
									"end": 8045,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 7750,
									"end": 8045,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7750,
									"end": 8045,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7750,
									"end": 8045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8050,
									"end": 9445,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 8050,
									"end": 9445,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8167,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 8200,
									"end": 8203,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8167,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 8167,
									"end": 8204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8167,
									"end": 8204,
									"name": "tag",
									"source": 12,
									"value": "198"
								},
								{
									"begin": 8167,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8269,
									"end": 8287,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8261,
									"end": 8267,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8258,
									"end": 8288,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8255,
									"end": 8311,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8255,
									"end": 8311,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 8255,
									"end": 8311,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8291,
									"end": 8309,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 8291,
									"end": 8309,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 8291,
									"end": 8309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8291,
									"end": 8309,
									"name": "tag",
									"source": 12,
									"value": "200"
								},
								{
									"begin": 8291,
									"end": 8309,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8255,
									"end": 8311,
									"name": "tag",
									"source": 12,
									"value": "199"
								},
								{
									"begin": 8255,
									"end": 8311,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8335,
									"end": 8373,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 8367,
									"end": 8371,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8361,
									"end": 8372,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 8335,
									"end": 8373,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 8335,
									"end": 8373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8335,
									"end": 8373,
									"name": "tag",
									"source": 12,
									"value": "201"
								},
								{
									"begin": 8335,
									"end": 8373,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8420,
									"end": 8487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 8480,
									"end": 8486,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8472,
									"end": 8478,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8466,
									"end": 8470,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8420,
									"end": 8487,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 8420,
									"end": 8487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8420,
									"end": 8487,
									"name": "tag",
									"source": 12,
									"value": "202"
								},
								{
									"begin": 8420,
									"end": 8487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8514,
									"end": 8515,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8538,
									"end": 8542,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8525,
									"end": 8542,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8525,
									"end": 8542,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8570,
									"end": 8572,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8562,
									"end": 8568,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8559,
									"end": 8573,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 8587,
									"end": 8588,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8582,
									"end": 9200,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8582,
									"end": 9200,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 8582,
									"end": 9200,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 8582,
									"end": 9200,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9244,
									"end": 9245,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9261,
									"end": 9267,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9258,
									"end": 9335,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9258,
									"end": 9335,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 9258,
									"end": 9335,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9310,
									"end": 9319,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9305,
									"end": 9308,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 9301,
									"end": 9320,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9295,
									"end": 9321,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9286,
									"end": 9321,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9286,
									"end": 9321,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9258,
									"end": 9335,
									"name": "tag",
									"source": 12,
									"value": "205"
								},
								{
									"begin": 9258,
									"end": 9335,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9361,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 9421,
									"end": 9427,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 9414,
									"end": 9419,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9361,
									"end": 9428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 9361,
									"end": 9428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9361,
									"end": 9428,
									"name": "tag",
									"source": 12,
									"value": "206"
								},
								{
									"begin": 9361,
									"end": 9428,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9355,
									"end": 9359,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 9348,
									"end": 9429,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 9217,
									"end": 9439,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8552,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 8552,
									"end": 9439,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8582,
									"end": 9200,
									"name": "tag",
									"source": 12,
									"value": "204"
								},
								{
									"begin": 8582,
									"end": 9200,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8634,
									"end": 8638,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 8630,
									"end": 8639,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 8622,
									"end": 8628,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8618,
									"end": 8640,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 8668,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "207"
								},
								{
									"begin": 8700,
									"end": 8704,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8668,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 8668,
									"end": 8705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8668,
									"end": 8705,
									"name": "tag",
									"source": 12,
									"value": "207"
								},
								{
									"begin": 8668,
									"end": 8705,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8727,
									"end": 8728,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "tag",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8755,
									"end": 8762,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8752,
									"end": 8753,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8749,
									"end": 8763,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 8834,
									"end": 8843,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 8829,
									"end": 8832,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 8825,
									"end": 8844,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8819,
									"end": 8845,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 8811,
									"end": 8817,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8804,
									"end": 8846,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8885,
									"end": 8886,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 8877,
									"end": 8883,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 8873,
									"end": 8887,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8863,
									"end": 8887,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 8863,
									"end": 8887,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8932,
									"end": 8934,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8921,
									"end": 8930,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 8917,
									"end": 8935,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8904,
									"end": 8935,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 8904,
									"end": 8935,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8778,
									"end": 8782,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 8775,
									"end": 8776,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 8771,
									"end": 8783,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 8766,
									"end": 8783,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 8766,
									"end": 8783,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "208"
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "tag",
									"source": 12,
									"value": "210"
								},
								{
									"begin": 8741,
									"end": 8949,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8977,
									"end": 8983,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 8968,
									"end": 8975,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 8965,
									"end": 8984,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 8962,
									"end": 9141,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 8962,
									"end": 9141,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "211"
								},
								{
									"begin": 8962,
									"end": 9141,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9035,
									"end": 9044,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9030,
									"end": 9033,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 9026,
									"end": 9045,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9020,
									"end": 9046,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 9078,
									"end": 9126,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "212"
								},
								{
									"begin": 9120,
									"end": 9124,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 9112,
									"end": 9118,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 9108,
									"end": 9125,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 9097,
									"end": 9106,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9078,
									"end": 9126,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 9078,
									"end": 9126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9078,
									"end": 9126,
									"name": "tag",
									"source": 12,
									"value": "212"
								},
								{
									"begin": 9078,
									"end": 9126,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9070,
									"end": 9076,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9063,
									"end": 9127,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8985,
									"end": 9141,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8962,
									"end": 9141,
									"name": "tag",
									"source": 12,
									"value": "211"
								},
								{
									"begin": 8962,
									"end": 9141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9187,
									"end": 9188,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 9183,
									"end": 9184,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 9175,
									"end": 9181,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9171,
									"end": 9185,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 9167,
									"end": 9189,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9161,
									"end": 9165,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 9154,
									"end": 9190,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 8589,
									"end": 9200,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8589,
									"end": 9200,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8589,
									"end": 9200,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8552,
									"end": 9439,
									"name": "tag",
									"source": 12,
									"value": "203"
								},
								{
									"begin": 8552,
									"end": 9439,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 8552,
									"end": 9439,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8142,
									"end": 9445,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8142,
									"end": 9445,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8142,
									"end": 9445,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8050,
									"end": 9445,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8050,
									"end": 9445,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 8050,
									"end": 9445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 9556,
									"end": 9561,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 9538,
									"end": 9562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "tag",
									"source": 12,
									"value": "214"
								},
								{
									"begin": 9538,
									"end": 9562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9533,
									"end": 9536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9526,
									"end": 9563,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9451,
									"end": 9569,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9451,
									"end": 9569,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9668,
									"end": 9672,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9706,
									"end": 9708,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 9695,
									"end": 9704,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9691,
									"end": 9709,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9683,
									"end": 9709,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "216"
								},
								{
									"begin": 9787,
									"end": 9788,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9776,
									"end": 9785,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9772,
									"end": 9789,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9763,
									"end": 9769,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 9719,
									"end": 9790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "tag",
									"source": 12,
									"value": "216"
								},
								{
									"begin": 9719,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9575,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 12,
									"value": "218"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 12,
									"value": "219"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "220"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 12,
									"value": "221"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 12,
									"value": "220"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "223"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 12,
									"value": "223"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "225"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 12,
									"value": "225"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 12,
									"value": "226"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "227"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 12,
									"value": "227"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "229"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 12,
									"value": "229"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 2829,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220682ea60214ed887cc4b9cf3a621e5a293bc8bd7461d8f3a8dfa868900691491b64736f6c63430008180033",
									".code": [
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "79CC6790"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "48659097"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 2829,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 789,
											"end": 852,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 789,
											"end": 852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 789,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 789,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 789,
											"end": 852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 789,
											"end": 852,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 789,
											"end": 852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 789,
											"end": 852,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 858,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 858,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2526,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2526,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 724,
											"end": 783,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 724,
											"end": 783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 724,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 724,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 724,
											"end": 783,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 724,
											"end": 783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 783,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 789,
											"end": 852,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 789,
											"end": 852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 835,
											"end": 845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 835,
											"end": 843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 835,
											"end": 845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 835,
											"end": 845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 835,
											"end": 845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 789,
											"end": 852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 961,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 961,
											"end": 970,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 951,
											"end": 957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 935,
											"end": 948,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 935,
											"end": 946,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 935,
											"end": 948,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 935,
											"end": 948,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 935,
											"end": 948,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 935,
											"end": 957,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 935,
											"end": 957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 935,
											"end": 957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 935,
											"end": 957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 935,
											"end": 957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 935,
											"end": 957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 970,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 935,
											"end": 970,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 927,
											"end": 986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 927,
											"end": 986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1002,
											"end": 1004,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1012,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 996,
											"end": 1013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 996,
											"end": 1013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 996,
											"end": 1013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 858,
											"end": 1020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2661,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2676,
											"end": 2695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2664,
											"end": 2708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2708,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2664,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2708,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2718,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2746,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2718,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "PUSH",
											"source": 10,
											"value": "FB5428F39F62FA9AA68D6C0DB25FFF3552D2958850E862561354749EA2BBEF3D"
										},
										{
											"begin": 2794,
											"end": 2798,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2762,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2762,
											"end": 2820,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 724,
											"end": 783,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 724,
											"end": 783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 768,
											"end": 774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 768,
											"end": 776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 768,
											"end": 776,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 768,
											"end": 776,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1265,
											"end": 2520,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1265,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1365,
											"end": 1372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1399,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1413,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1436,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1436,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1436,
											"end": 1449,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1436,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1413,
											"end": 1449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1413,
											"end": 1449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1496,
											"end": 1499,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1479,
											"end": 1488,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1479,
											"end": 1488,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1479,
											"end": 1493,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1479,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1493,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1479,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1479,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1474,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1500,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1500,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1541,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1541,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1462,
											"end": 1541,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1532,
											"end": 1534,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1520,
											"end": 1529,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1520,
											"end": 1534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1520,
											"end": 1534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1534,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1520,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1520,
											"end": 1540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1516,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1541,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1541,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1462,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1574,
											"end": 1602,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1560,
											"end": 1602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1570,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1560,
											"end": 1602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1602,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1557,
											"end": 1771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1678,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1661,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1661,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1661,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1661,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1661,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1657,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1655,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1655,
											"end": 1671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1655,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1655,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1655,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1634,
											"end": 1651,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1631,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1630,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1630,
											"end": 1651,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1651,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1630,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1651,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 1630,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1630,
											"end": 1672,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1630,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1672,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1630,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1630,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 1630,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1557,
											"end": 1771,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1557,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1754,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1754,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1754,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1764,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1754,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1748,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1744,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1723,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1723,
											"end": 1744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1723,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1744,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1723,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1723,
											"end": 1765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1723,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1765,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1723,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1723,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1723,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1723,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1771,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1557,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1828,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1808,
											"end": 1817,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1808,
											"end": 1822,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1808,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1822,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1808,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1808,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1829,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1829,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1869,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1861,
											"end": 1863,
											"name": "PUSH",
											"source": 10,
											"value": "4B"
										},
										{
											"begin": 1849,
											"end": 1858,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1849,
											"end": 1858,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1849,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1849,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1849,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1849,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1870,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1890,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1900,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1890,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1932,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1887,
											"end": 2102,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2005,
											"end": 2008,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1991,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1991,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1991,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2001,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1991,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 1987,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1985,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1985,
											"end": 2001,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1985,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2001,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1985,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1981,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1961,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1960,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1960,
											"end": 2002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1960,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1960,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1960,
											"end": 2008,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2008,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1960,
											"end": 2008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2008,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 1960,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2008,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1950,
											"end": 2008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1887,
											"end": 2102,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 2102,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1887,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2102,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 2084,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2084,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2084,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2094,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2084,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2080,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2078,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2078,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2057,
											"end": 2074,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2054,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2053,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2053,
											"end": 2095,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2053,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2095,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2053,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2053,
											"end": 2102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2053,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2102,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2053,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 2102,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 1887,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2156,
											"end": 2159,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2151,
											"end": 2153,
											"name": "PUSH",
											"source": 10,
											"value": "4B"
										},
										{
											"begin": 2139,
											"end": 2148,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2139,
											"end": 2148,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2139,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2139,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2139,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2139,
											"end": 2159,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2139,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2159,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2139,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2134,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2160,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2160,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2201,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2201,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2122,
											"end": 2201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2197,
											"end": 2200,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "PUSH",
											"source": 10,
											"value": "5F"
										},
										{
											"begin": 2180,
											"end": 2189,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2180,
											"end": 2189,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2180,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2180,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2180,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2201,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2201,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2122,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2221,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2231,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2221,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2221,
											"end": 2263,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2218,
											"end": 2436,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2340,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 2322,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2322,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2322,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2332,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2322,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2316,
											"end": 2318,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2316,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2316,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2312,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2291,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2291,
											"end": 2333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2333,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2291,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2333,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2291,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2291,
											"end": 2340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2340,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2291,
											"end": 2340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2291,
											"end": 2340,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2291,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2281,
											"end": 2340,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2218,
											"end": 2436,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2436,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2218,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2431,
											"end": 2436,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2417,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2417,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2411,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2407,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2385,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2385,
											"end": 2428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2428,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2385,
											"end": 2428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2428,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 2385,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2385,
											"end": 2436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2436,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 2385,
											"end": 2436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2385,
											"end": 2436,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 2385,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2436,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2218,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 2119,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1788,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 1459,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2506,
											"end": 2513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2513,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 2520,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 2520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 2520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 2520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1259,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1094,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1236,
											"end": 1240,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1244,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1222,
											"end": 1252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1252,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1222,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 1234,
											"end": 1238,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1244,
											"end": 1249,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 1220,
											"end": 1250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 1220,
											"end": 1250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5302,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 5188,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5277,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5269,
											"end": 5274,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5266,
											"end": 5278,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 5256,
											"end": 5296,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5292,
											"end": 5293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5296,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 5256,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5477,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5308,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5369,
											"end": 5374,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5413,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5394,
											"end": 5414,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5385,
											"end": 5414,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5385,
											"end": 5414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 5465,
											"end": 5470,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 5423,
											"end": 5471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5471,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 5423,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5477,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5308,
											"end": 5477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 6132,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 5483,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5642,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5628,
											"end": 5637,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5619,
											"end": 5626,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5611,
											"end": 5643,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5608,
											"end": 5727,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5608,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5608,
											"end": 5727,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5646,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5646,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 5646,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5646,
											"end": 5725,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5646,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5608,
											"end": 5727,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5608,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5766,
											"end": 5767,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5737,
											"end": 5854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5964,
											"end": 5971,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5955,
											"end": 5961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 5953,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 5962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5919,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 5919,
											"end": 5972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5919,
											"end": 5972,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5919,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5909,
											"end": 5972,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5909,
											"end": 5972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6023,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6047,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 6107,
											"end": 6114,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6087,
											"end": 6096,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6047,
											"end": 6115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 6047,
											"end": 6115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6047,
											"end": 6115,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 6047,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6115,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6037,
											"end": 6115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5992,
											"end": 6125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 6132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 6132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 6132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 6132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 6132,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 6132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6467,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 6138,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6197,
											"end": 6203,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6234,
											"end": 6243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6232,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6221,
											"end": 6244,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6217,
											"end": 6249,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6252,
											"end": 6331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6372,
											"end": 6373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 6442,
											"end": 6449,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6433,
											"end": 6439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6418,
											"end": 6440,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 6397,
											"end": 6450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6387,
											"end": 6450,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6387,
											"end": 6450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6343,
											"end": 6460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6467,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6467,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6138,
											"end": 6467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6591,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 6473,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 6578,
											"end": 6583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 6560,
											"end": 6584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6584,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 6560,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6555,
											"end": 6558,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6473,
											"end": 6591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6819,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 6597,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6690,
											"end": 6694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6730,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6713,
											"end": 6731,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6705,
											"end": 6731,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6705,
											"end": 6731,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6809,
											"end": 6810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6807,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6794,
											"end": 6811,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6785,
											"end": 6791,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 6741,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6741,
											"end": 6812,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6741,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6819,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6819,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7299,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 6825,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6950,
											"end": 6952,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6936,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6925,
											"end": 6948,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 7037,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6918,
											"end": 7037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6956,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6956,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 6956,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6956,
											"end": 7035,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6956,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6918,
											"end": 7037,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6918,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7076,
											"end": 7077,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 7146,
											"end": 7153,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7137,
											"end": 7143,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7126,
											"end": 7135,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7122,
											"end": 7144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7101,
											"end": 7154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7154,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 7101,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7091,
											"end": 7154,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7091,
											"end": 7154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7047,
											"end": 7164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7203,
											"end": 7205,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7254,
											"end": 7263,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7272,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7229,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 7229,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7229,
											"end": 7282,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 7229,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7174,
											"end": 7292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7299,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7299,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7299,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7299,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7299,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7305,
											"end": 7485,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7305,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7353,
											"end": 7430,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7431,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 7447,
											"end": 7448,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7440,
											"end": 7455,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7479,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7811,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 7491,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7535,
											"end": 7541,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7566,
											"end": 7570,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7574,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7552,
											"end": 7574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7552,
											"end": 7574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7619,
											"end": 7620,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7613,
											"end": 7617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7609,
											"end": 7621,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7658,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7630,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 7630,
											"end": 7711,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7696,
											"end": 7700,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7684,
											"end": 7701,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7674,
											"end": 7701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7674,
											"end": 7701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7630,
											"end": 7711,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 7630,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7756,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7747,
											"end": 7761,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7724,
											"end": 7762,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7721,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 7721,
											"end": 7805,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7777,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 7777,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7777,
											"end": 7795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7777,
											"end": 7795,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 7777,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7721,
											"end": 7805,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 7721,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7542,
											"end": 7811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7811,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7817,
											"end": 7997,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 7817,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7865,
											"end": 7942,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7862,
											"end": 7863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7855,
											"end": 7943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 7959,
											"end": 7960,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8194,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 8003,
											"end": 8194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8043,
											"end": 8046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 8080,
											"end": 8081,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 8062,
											"end": 8082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 8062,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8057,
											"end": 8082,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8057,
											"end": 8082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 8096,
											"end": 8116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8116,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 8096,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8091,
											"end": 8116,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8091,
											"end": 8116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8140,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8132,
											"end": 8141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8125,
											"end": 8141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8125,
											"end": 8141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8160,
											"end": 8163,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8157,
											"end": 8158,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8154,
											"end": 8164,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8187,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 8151,
											"end": 8187,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 8167,
											"end": 8185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8167,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8187,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 8151,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8194,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8003,
											"end": 8194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8200,
											"end": 8361,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 8200,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8340,
											"end": 8353,
											"name": "PUSH",
											"source": 12,
											"value": "576520736F6C64206F7574000000000000000000000000000000000000000000"
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8334,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8324,
											"end": 8338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8317,
											"end": 8354,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8200,
											"end": 8361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8200,
											"end": 8361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8733,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 8367,
											"end": 8733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 8594,
											"end": 8596,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 8530,
											"end": 8597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8597,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 8530,
											"end": 8597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8523,
											"end": 8597,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8523,
											"end": 8597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8606,
											"end": 8699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8695,
											"end": 8698,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8606,
											"end": 8699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 8606,
											"end": 8699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8606,
											"end": 8699,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 8606,
											"end": 8699,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8719,
											"end": 8722,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8708,
											"end": 8727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8708,
											"end": 8727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8733,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8733,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 9158,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 8739,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8905,
											"end": 8909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8945,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8932,
											"end": 8941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8928,
											"end": 8946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8920,
											"end": 8946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8920,
											"end": 8946,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9001,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8986,
											"end": 8990,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8967,
											"end": 8976,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8963,
											"end": 8980,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8956,
											"end": 9003,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9020,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 9146,
											"end": 9150,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9020,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 9020,
											"end": 9151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9020,
											"end": 9151,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 9020,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9151,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9012,
											"end": 9151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 9158,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 9158,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 9158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 9158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9353,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9340,
											"end": 9349,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9336,
											"end": 9354,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9328,
											"end": 9354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9328,
											"end": 9354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9430,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9417,
											"end": 9434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9408,
											"end": 9414,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9364,
											"end": 9435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9435,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 9364,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9445,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9502,
											"end": 9511,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9498,
											"end": 9516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9489,
											"end": 9495,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9445,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9445,
											"end": 9517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9445,
											"end": 9517,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 9445,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9527,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 9595,
											"end": 9597,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9593,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9580,
											"end": 9598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9571,
											"end": 9577,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9527,
											"end": 9599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 9527,
											"end": 9599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9527,
											"end": 9599,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 9527,
											"end": 9599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9606,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9164,
											"end": 9606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 10054,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 9612,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9761,
											"end": 9765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9799,
											"end": 9801,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9788,
											"end": 9797,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9776,
											"end": 9802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9776,
											"end": 9802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 9880,
											"end": 9881,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9878,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9865,
											"end": 9882,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9856,
											"end": 9862,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9812,
											"end": 9883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9812,
											"end": 9883,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 9812,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 9961,
											"end": 9963,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9950,
											"end": 9959,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9937,
											"end": 9943,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 9893,
											"end": 9965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9893,
											"end": 9965,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 9893,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 10043,
											"end": 10045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10019,
											"end": 10025,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 9975,
											"end": 10047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 9975,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 10054,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 10054,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 10054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 10054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 10054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 10054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9612,
											"end": 10054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10060,
											"end": 10470,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 10060,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10100,
											"end": 10107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 10141,
											"end": 10142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10123,
											"end": 10143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10143,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10118,
											"end": 10143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 10175,
											"end": 10176,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10157,
											"end": 10177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10177,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10152,
											"end": 10177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10212,
											"end": 10213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10205,
											"end": 10214,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10234,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 10252,
											"end": 10263,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10234,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10234,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10234,
											"end": 10264,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 10234,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10413,
											"end": 10414,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10404,
											"end": 10411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10400,
											"end": 10415,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10397,
											"end": 10398,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10416,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10374,
											"end": 10375,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10367,
											"end": 10376,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10347,
											"end": 10430,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 10324,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 10324,
											"end": 10463,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 10443,
											"end": 10461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 10443,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10324,
											"end": 10463,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 10324,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10108,
											"end": 10470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10060,
											"end": 10470,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10060,
											"end": 10470,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10060,
											"end": 10470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10060,
											"end": 10470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10060,
											"end": 10470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10476,
											"end": 10656,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 10476,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10601,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10521,
											"end": 10522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10514,
											"end": 10602,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10621,
											"end": 10625,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 10618,
											"end": 10619,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10611,
											"end": 10626,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10645,
											"end": 10649,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10642,
											"end": 10643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10650,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10847,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 10662,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10702,
											"end": 10703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 10737,
											"end": 10738,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10719,
											"end": 10739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 10719,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10739,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 10771,
											"end": 10772,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 10753,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10773,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10748,
											"end": 10773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10792,
											"end": 10793,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10782,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 10782,
											"end": 10817,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 10797,
											"end": 10815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10782,
											"end": 10817,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 10782,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10839,
											"end": 10840,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10836,
											"end": 10837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10832,
											"end": 10841,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10827,
											"end": 10841,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10827,
											"end": 10841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10847,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 11033,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 10853,
											"end": 11033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10901,
											"end": 10978,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10898,
											"end": 10899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10891,
											"end": 10979,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11002,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 10995,
											"end": 10996,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10988,
											"end": 11003,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11022,
											"end": 11026,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11019,
											"end": 11020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11141,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 11039,
											"end": 11141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11133,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11125,
											"end": 11126,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11121,
											"end": 11134,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 11100,
											"end": 11134,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11100,
											"end": 11134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11141,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11141,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11141,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11039,
											"end": 11141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11208,
											"end": 11213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11215,
											"end": 11219,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11239,
											"end": 11245,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11263,
											"end": 11268,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11254,
											"end": 11268,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11254,
											"end": 11268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11298,
											"end": 11299,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11288,
											"end": 11296,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11285,
											"end": 11300,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11393,
											"end": 11397,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11384,
											"end": 11398,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11378,
											"end": 11382,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11399,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11372,
											"end": 11422,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11372,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 11372,
											"end": 11422,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11402,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 11402,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 11402,
											"end": 11420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11402,
											"end": 11420,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 11402,
											"end": 11420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11372,
											"end": 11422,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 11372,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11452,
											"end": 11453,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11442,
											"end": 11450,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11438,
											"end": 11454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11435,
											"end": 11886,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11435,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 11435,
											"end": 11886,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11867,
											"end": 11871,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11860,
											"end": 11865,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11856,
											"end": 11872,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11872,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11847,
											"end": 11872,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11435,
											"end": 11886,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 11435,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11917,
											"end": 11921,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11911,
											"end": 11915,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11907,
											"end": 11922,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11899,
											"end": 11922,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11899,
											"end": 11922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11947,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 11970,
											"end": 11978,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11947,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 11947,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11947,
											"end": 11979,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 11947,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11935,
											"end": 11979,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11935,
											"end": 11979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 11277,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12055,
											"end": 12060,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12246,
											"end": 12254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12236,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12236,
											"end": 12276,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12267,
											"end": 12268,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12258,
											"end": 12268,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12258,
											"end": 12268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12269,
											"end": 12274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 12269,
											"end": 12274,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12236,
											"end": 12276,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12236,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12295,
											"end": 12299,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12285,
											"end": 12321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 12285,
											"end": 12321,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12312,
											"end": 12313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12303,
											"end": 12313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12314,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 12314,
											"end": 12319,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12285,
											"end": 12321,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 12285,
											"end": 12321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12381,
											"end": 12385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12430,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12424,
											"end": 12451,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12451,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 12424,
											"end": 12451,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12465,
											"end": 12466,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12460,
											"end": 12651,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12651,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 12460,
											"end": 12651,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12374,
											"end": 12651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12374,
											"end": 12651,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12451,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 12424,
											"end": 12451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12433,
											"end": 12443,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12433,
											"end": 12443,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12444,
											"end": 12449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12444,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 12444,
											"end": 12449,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12651,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 12460,
											"end": 12651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12508,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12495,
											"end": 12503,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12492,
											"end": 12509,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 12532,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 12532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 12489,
											"end": 12532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 12512,
											"end": 12530,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 12512,
											"end": 12530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12512,
											"end": 12530,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 12512,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12489,
											"end": 12532,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 12489,
											"end": 12532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12561,
											"end": 12569,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12558,
											"end": 12559,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12554,
											"end": 12570,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 12545,
											"end": 12570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12545,
											"end": 12570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12596,
											"end": 12599,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12589,
											"end": 12594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12586,
											"end": 12600,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12623,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 12583,
											"end": 12623,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 12603,
											"end": 12621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 12603,
											"end": 12621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12623,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 12583,
											"end": 12623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12636,
											"end": 12641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12636,
											"end": 12641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 12636,
											"end": 12641,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12374,
											"end": 12651,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12374,
											"end": 12651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12374,
											"end": 12651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12762,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12750,
											"end": 12758,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12747,
											"end": 12763,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12741,
											"end": 12744,
											"name": "PUSH",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 12735,
											"end": 12739,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12732,
											"end": 12745,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12728,
											"end": 12764,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12710,
											"end": 12712,
											"name": "PUSH",
											"source": 12,
											"value": "4E"
										},
										{
											"begin": 12700,
											"end": 12708,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12697,
											"end": 12713,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12692,
											"end": 12694,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 12686,
											"end": 12690,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12683,
											"end": 12695,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12679,
											"end": 12714,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12663,
											"end": 12774,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12906,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 12660,
											"end": 12906,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12816,
											"end": 12824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12810,
											"end": 12814,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12806,
											"end": 12825,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 12797,
											"end": 12825,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12797,
											"end": 12825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12851,
											"end": 12854,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12844,
											"end": 12849,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12841,
											"end": 12855,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12838,
											"end": 12878,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12838,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 12838,
											"end": 12878,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 12858,
											"end": 12876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 12858,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12838,
											"end": 12878,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 12838,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 12896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 12891,
											"end": 12896,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12660,
											"end": 12906,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 12660,
											"end": 12906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12931,
											"end": 12973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 12969,
											"end": 12972,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12959,
											"end": 12967,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12953,
											"end": 12957,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12950,
											"end": 12951,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12931,
											"end": 12973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 12931,
											"end": 12973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12931,
											"end": 12973,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 12931,
											"end": 12973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12973,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13005,
											"end": 13009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13000,
											"end": 13003,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 13010,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12989,
											"end": 12994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 13011,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13034,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 12983,
											"end": 13034,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13014,
											"end": 13032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 13014,
											"end": 13032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 13014,
											"end": 13032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13014,
											"end": 13032,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 13014,
											"end": 13032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13034,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 12983,
											"end": 13034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13063,
											"end": 13067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13056,
											"end": 13061,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13052,
											"end": 13068,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13043,
											"end": 13068,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13043,
											"end": 13068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 13074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 13074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13361,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 13080,
											"end": 13361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13138,
											"end": 13143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 13180,
											"end": 13184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 13162,
											"end": 13185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13154,
											"end": 13185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13154,
											"end": 13185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13206,
											"end": 13231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 13222,
											"end": 13230,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13206,
											"end": 13231,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 13206,
											"end": 13231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13206,
											"end": 13231,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 13206,
											"end": 13231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13194,
											"end": 13231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13194,
											"end": 13231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13250,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 13287,
											"end": 13353,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13277,
											"end": 13285,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13271,
											"end": 13275,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13250,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 13250,
											"end": 13354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13250,
											"end": 13354,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 13250,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13241,
											"end": 13354,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13241,
											"end": 13354,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13361,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13361,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13080,
											"end": 13361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"contracts/GeekToken/Events.sol",
								"contracts/GeekToken/GeekToken.sol",
								"contracts/GeekToken/Types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferTokens(address,uint256,uint8)": "48659097",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"TransferedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cargoInsurableValue\",\"type\":\"uint256\"},{\"internalType\":\"enum Types.Acceptance\",\"name\":\"acceptance\",\"type\":\"uint8\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GeekToken/GeekToken.sol\":\"GeekToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"contracts/GeekToken/Events.sol\":{\"keccak256\":\"0xaeb3f20e537bf461954b1c8a958458239598f588032371563de9b52277b2a655\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://685ab03cd0028686e0268aaba92b17655dc98a3ad27fba7817fb19ced8d236c6\",\"dweb:/ipfs/QmVWD2DAGonLPXACXk7dc9LWa7VgXqsze6WvhGesmYe3Qg\"]},\"contracts/GeekToken/GeekToken.sol\":{\"keccak256\":\"0xe67469da0f018b9e12533b389b4b4fa7b6d9a4dcce08954fe6c2bf721884dfd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://646111a2cf682aa8ed6f717716ada737604ad3518cff01d91ca6542f475cb44a\",\"dweb:/ipfs/QmQoiifHSgWGvvjBRamWQMWEdU1nePCFHLQ6aRNPEjfYM2\"]},\"contracts/GeekToken/Types.sol\":{\"keccak256\":\"0xeb05c2508f793408ec61712af784be0280ddf764b838cf388109773160e5535b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45a2a1902937067118f9b418a4cfff2d71173ea4bb5606db9c909052a0b2ec2\",\"dweb:/ipfs/QmdvJq7FGZGS1FF6wNmRHcwkzECjEgMofptCe3gKnmbLqV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/GeekToken/GeekToken.sol:GeekToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/GeekToken/GeekToken.sol:GeekToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/GeekToken/GeekToken.sol:GeekToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/GeekToken/GeekToken.sol:GeekToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/GeekToken/GeekToken.sol:GeekToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1022,
								"contract": "contracts/GeekToken/GeekToken.sol:GeekToken",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "contracts/GeekToken/GeekToken.sol:GeekToken",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1166,
								"contract": "contracts/GeekToken/GeekToken.sol:GeekToken",
								"label": "maxSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GeekToken/Types.sol": {
				"Types": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GeekToken/Types.sol\":58:138  library Types {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GeekToken/Types.sol\":58:138  library Types {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054544404861343e2724a3183b2eba6a83b84bfe070f8bbaa806b64f8e39dbe5664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122054544404861343e2724a3183b2eba6a83b84bfe070f8bbaa806b64f8e39dbe5664736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD SLOAD PREVRANDAO DIV DUP7 SGT NUMBER 0xE2 PUSH19 0x4A3183B2EBA6A83B84BFE070F8BBAA806B64F8 0xE3 SWAP14 0xBE JUMP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "58:80:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122054544404861343e2724a3183b2eba6a83b84bfe070f8bbaa806b64f8e39dbe5664736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD SLOAD PREVRANDAO DIV DUP7 SGT NUMBER 0xE2 PUSH19 0x4A3183B2EBA6A83B84BFE070F8BBAA806B64F8 0xE3 SWAP14 0xBE JUMP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "58:80:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 58,
									"end": 138,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 58,
									"end": 138,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054544404861343e2724a3183b2eba6a83b84bfe070f8bbaa806b64f8e39dbe5664736f6c63430008180033",
									".code": [
										{
											"begin": 58,
											"end": 138,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 58,
											"end": 138,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 58,
											"end": 138,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 58,
											"end": 138,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 138,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 138,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 58,
											"end": 138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 138,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 58,
											"end": 138,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"contracts/GeekToken/Events.sol",
								"contracts/GeekToken/GeekToken.sol",
								"contracts/GeekToken/Types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GeekToken/Types.sol\":\"Types\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GeekToken/Types.sol\":{\"keccak256\":\"0xeb05c2508f793408ec61712af784be0280ddf764b838cf388109773160e5535b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45a2a1902937067118f9b418a4cfff2d71173ea4bb5606db9c909052a0b2ec2\",\"dweb:/ipfs/QmdvJq7FGZGS1FF6wNmRHcwkzECjEgMofptCe3gKnmbLqV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1013
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1014,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1013,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1013,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1013
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1013
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							983
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 984,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 983,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1014,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1013,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1013,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 983,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								983,
								877,
								1013
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										970
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										976
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										982
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1013
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 1014,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1013,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1013,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								983,
								877,
								1013
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Pausable": [
							957
						],
						"Pausable": [
							1130
						]
					},
					"id": 958,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 958,
							"sourceUnit": 800,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 958,
							"sourceUnit": 1131,
							"src": "186:53:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 928,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1130,
										"src": "194:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 931,
										"name": "ERC20",
										"nameLocations": [
											"964:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "964:5:5"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "964:5:5"
								},
								{
									"baseName": {
										"id": 933,
										"name": "Pausable",
										"nameLocations": [
											"971:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "971:8:5"
									},
									"id": 934,
									"nodeType": "InheritanceSpecifier",
									"src": "971:8:5"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 930,
								"nodeType": "StructuredDocumentation",
								"src": "241:687:5",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 957,
							"linearizedBaseContracts": [
								957,
								1130,
								799,
								189,
								983,
								877,
								1013
							],
							"name": "ERC20Pausable",
							"nameLocation": "947:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 955,
										"nodeType": "Block",
										"src": "1210:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 950,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "1234:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "1240:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "1244:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 947,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1220:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$957_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1226:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "1220:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1220:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "1220:30:5"
											}
										]
									},
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "986:121:5",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 956,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 945,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 944,
												"name": "whenNotPaused",
												"nameLocations": [
													"1196:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1055,
												"src": "1196:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:13:5"
										}
									],
									"name": "_update",
									"nameLocation": "1121:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 943,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1187:8:5"
									},
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1137:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1129:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1151:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1143:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:41:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1210:0:5"
									},
									"scope": 957,
									"src": "1112:145:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 958,
							"src": "929:330:5",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188,
								1035,
								1038
							],
							"usedEvents": [
								811,
								820,
								1027,
								1032
							]
						}
					],
					"src": "124:1136:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							983
						]
					},
					"id": 984,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 959,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 961,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 984,
							"sourceUnit": 878,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 960,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 963,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:6"
									},
									"id": 964,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 962,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 983,
							"linearizedBaseContracts": [
								983,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 967,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 983,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 983,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 982,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 979,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 983,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 984,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1013
						]
					},
					"id": 1014,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 985,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 986,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1013,
							"linearizedBaseContracts": [
								1013
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 991,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 990,
												"id": 993,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1013,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1000,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 999,
												"id": 1002,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1013,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1008,
												"id": 1010,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1013,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1014,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1013
						],
						"Pausable": [
							1130
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1015,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1017,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 1014,
							"src": "128:45:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1016,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1013,
										"src": "136:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1019,
										"name": "Context",
										"nameLocations": [
											"645:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1013,
										"src": "645:7:8"
									},
									"id": 1020,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:8"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:8",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130,
								1013
							],
							"name": "Pausable",
							"nameLocation": "633:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1022,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1130,
									"src": "659:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1021,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:8",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1027,
									"name": "Paused",
									"nameLocation": "770:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "777:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:8"
									},
									"src": "764:30:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:8",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1032,
									"name": "Unpaused",
									"nameLocation": "881:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "890:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:8"
									},
									"src": "875:32:8"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:8",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1035,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:8"
									},
									"src": "994:22:8"
								},
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:8",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1038,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:8"
									},
									"src": "1107:22:8"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "1221:32:8",
										"statements": [
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1042,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "1231:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:8"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:8",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1047,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:8"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:8"
									},
									"scope": 1130,
									"src": "1207:46:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "1464:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1050,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1474:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:8"
											},
											{
												"id": 1053,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:8"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:8",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1055,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:8"
									},
									"src": "1439:72:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "1711:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1058,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "1721:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:8"
											},
											{
												"id": 1061,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:8"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:8",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1063,
									"name": "whenPaused",
									"nameLocation": "1698:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:8"
									},
									"src": "1689:66:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "1903:31:8",
										"statements": [
											{
												"expression": {
													"id": 1069,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "1920:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1070,
												"nodeType": "Return",
												"src": "1913:14:8"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:8",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:8"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1897:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:8"
									},
									"scope": 1130,
									"src": "1850:84:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "2053:77:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1076,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "2067:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "2063:61:8",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "2077:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1078,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "2098:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1080,
															"nodeType": "RevertStatement",
															"src": "2091:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:8",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:8"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:8"
									},
									"scope": 1130,
									"src": "2002:128:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "2250:78:8",
										"statements": [
											{
												"condition": {
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:8",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1088,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "2265:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "2260:62:8",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "2275:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1091,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "2296:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "RevertStatement",
															"src": "2289:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:8",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:8"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:8"
									},
									"scope": 1130,
									"src": "2202:126:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "2512:66:8",
										"statements": [
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1103,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "2522:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1108,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "2558:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1107,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "2551:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "EmitStatement",
												"src": "2546:25:8"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:8",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1101,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1100,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1055,
												"src": "2498:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:8"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:8"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:8"
									},
									"scope": 1130,
									"src": "2463:115:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2758:69:8",
										"statements": [
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1119,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "2768:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "2807:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1123,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "2798:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "EmitStatement",
												"src": "2793:27:8"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:8",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1117,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1116,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1063,
												"src": "2747:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:8"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:8"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:8"
									},
									"scope": 1130,
									"src": "2710:117:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1131,
							"src": "615:2214:8",
							"usedErrors": [
								1035,
								1038
							],
							"usedEvents": [
								1027,
								1032
							]
						}
					],
					"src": "102:2728:8"
				},
				"id": 8
			},
			"contracts/GeekToken/Events.sol": {
				"ast": {
					"absolutePath": "contracts/GeekToken/Events.sol",
					"exportedSymbols": {
						"Events": [
							1141
						]
					},
					"id": 1142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Events",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1141,
							"linearizedBaseContracts": [
								1141
							],
							"name": "Events",
							"nameLocation": "66:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "fb5428f39f62fa9aa68d6c0db25fff3552d2958850e862561354749ea2bbef3d",
									"id": 1140,
									"name": "TransferedTokens",
									"nameLocation": "85:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "110:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "102:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "124:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "116:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "136:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "128:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "128:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:42:9"
									},
									"src": "79:65:9"
								}
							],
							"scope": 1142,
							"src": "58:88:9",
							"usedErrors": [],
							"usedEvents": [
								1140
							]
						}
					],
					"src": "32:114:9"
				},
				"id": 9
			},
			"contracts/GeekToken/GeekToken.sol": {
				"ast": {
					"absolutePath": "contracts/GeekToken/GeekToken.sol",
					"exportedSymbols": {
						"Context": [
							1013
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"ERC20Pausable": [
							957
						],
						"Events": [
							1141
						],
						"GeekToken": [
							1475
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							983
						],
						"Ownable": [
							147
						],
						"Pausable": [
							1130
						],
						"Types": [
							1481
						]
					},
					"id": 1476,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1476,
							"sourceUnit": 800,
							"src": "58:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1476,
							"sourceUnit": 924,
							"src": "114:74:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 1146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1476,
							"sourceUnit": 958,
							"src": "189:74:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1476,
							"sourceUnit": 148,
							"src": "264:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/GeekToken/Types.sol",
							"file": "./Types.sol",
							"id": 1148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1476,
							"sourceUnit": 1482,
							"src": "317:21:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/GeekToken/Events.sol",
							"file": "./Events.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1476,
							"sourceUnit": 1142,
							"src": "339:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1150,
										"name": "ERC20",
										"nameLocations": [
											"385:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "385:5:10"
									},
									"id": 1151,
									"nodeType": "InheritanceSpecifier",
									"src": "385:5:10"
								},
								{
									"baseName": {
										"id": 1152,
										"name": "ERC20Burnable",
										"nameLocations": [
											"392:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "392:13:10"
									},
									"id": 1153,
									"nodeType": "InheritanceSpecifier",
									"src": "392:13:10"
								},
								{
									"baseName": {
										"id": 1154,
										"name": "ERC20Pausable",
										"nameLocations": [
											"407:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 957,
										"src": "407:13:10"
									},
									"id": 1155,
									"nodeType": "InheritanceSpecifier",
									"src": "407:13:10"
								},
								{
									"baseName": {
										"id": 1156,
										"name": "Ownable",
										"nameLocations": [
											"422:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "422:7:10"
									},
									"id": 1157,
									"nodeType": "InheritanceSpecifier",
									"src": "422:7:10"
								}
							],
							"canonicalName": "GeekToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1475,
							"linearizedBaseContracts": [
								1475,
								147,
								957,
								1130,
								923,
								799,
								189,
								983,
								877,
								1013
							],
							"name": "GeekToken",
							"nameLocation": "372:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "453:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1475,
									"src": "436:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "436:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1165,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130303030303030",
											"id": 1159,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "465:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "477:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1161,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "483:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																"typeString": "function () view returns (uint8)"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "483:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "477:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1164,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "476:18:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "465:29:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "630:88:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1179,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "646:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "650:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "646:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32353030303030",
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "658:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2500000_by_1",
																	"typeString": "int_const 2500000"
																},
																"value": "2500000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "668:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1183,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "674:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "674:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "668:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "658:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1178,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "640:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "640:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "640:45:10"
											}
										]
									},
									"id": 1190,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4765656b546f6b656e",
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "576:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_00559136708b5188f6b42ff3cb4768aeddcc35afe93a887eb1822a39b2483b0d",
														"typeString": "literal_string \"GeekToken\""
													},
													"value": "GeekToken"
												},
												{
													"hexValue": "47544b",
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "589:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6dda2092ae6ad3f43403d1f7af3a933257d0bf39e5a73d2dce39d671ab9dde5a",
														"typeString": "literal_string \"GTK\""
													},
													"value": "GTK"
												}
											],
											"id": 1173,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1170,
												"name": "ERC20",
												"nameLocations": [
													"570:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "570:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "570:25:10"
										},
										{
											"arguments": [
												{
													"id": 1175,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1168,
													"src": "612:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1176,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1174,
												"name": "Ownable",
												"nameLocations": [
													"604:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "604:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "604:21:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "548:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "540:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:22:10"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:0:10"
									},
									"scope": 1475,
									"src": "528:190:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "758:25:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1195,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "768:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "768:8:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1192,
												"name": "onlyOwner",
												"nameLocations": [
													"748:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "748:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "748:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "733:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:2:10"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:10"
									},
									"scope": 1475,
									"src": "724:59:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "825:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1204,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "835:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "835:10:10"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1201,
												"name": "onlyOwner",
												"nameLocations": [
													"815:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "815:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "815:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "798:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:10"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:10"
									},
									"scope": 1475,
									"src": "789:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "917:103:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1218,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "935:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "935:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1220,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "951:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "935:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1222,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "961:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "935:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576520736f6c64206f7574",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "972:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae",
																"typeString": "literal_string \"We sold out\""
															},
															"value": "We sold out"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f17ea573277e4e832cf716abb4c32e483f3ff35390f6f915356610b1a5790aae",
																"typeString": "literal_string \"We sold out\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "927:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "927:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "927:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1228,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "1002:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1229,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "1006:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1227,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "996:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "996:17:10"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1215,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1214,
												"name": "onlyOwner",
												"nameLocations": [
													"907:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "907:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "907:9:10"
										}
									],
									"name": "mint",
									"nameLocation": "867:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "880:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "872:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "892:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "884:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:28:10"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:0:10"
									},
									"scope": 1475,
									"src": "858:162:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										606,
										956
									],
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "1212:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1248,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "1236:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "1242:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "1246:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1245,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1222:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_GeekToken_$1475_$",
																"typeString": "type(contract super GeekToken)"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1228:7:10",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "1222:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1222:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1222:30:10"
											}
										]
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1103:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1243,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1241,
												"name": "ERC20",
												"nameLocations": [
													"1186:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1186:5:10"
											},
											{
												"id": 1242,
												"name": "ERC20Pausable",
												"nameLocations": [
													"1193:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "1193:13:10"
											}
										],
										"src": "1177:30:10"
									},
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1119:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1111:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1133:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1125:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1145:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1137:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:41:10"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1212:0:10"
									},
									"scope": 1475,
									"src": "1094:165:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "1374:1146:10",
										"statements": [
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "_reward",
														"nameLocation": "1392:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "1384:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1384:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1267,
												"initialValue": {
													"hexValue": "30",
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1402:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1384:19:10"
											},
											{
												"assignments": [
													1269
												],
												"declarations": [
													{
														"constant": false,
														"id": 1269,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "1421:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1439,
														"src": "1413:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1413:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1270,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1436:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1436:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1413:36:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1273,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "1462:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1274,
																			"name": "maxSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "1479:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3235",
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1491:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "25"
																		},
																		"src": "1479:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1496:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1479:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1279,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1478:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1462:38:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1281,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "1504:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1282,
																			"name": "maxSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "1520:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3530",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1532:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_50_by_1",
																				"typeString": "int_const 50"
																			},
																			"value": "50"
																		},
																		"src": "1520:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1537:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1520:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1287,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1519:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1504:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1462:79:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "1791:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1326,
																				"name": "maxSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1166,
																				"src": "1808:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3530",
																				"id": 1327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1820:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_50_by_1",
																					"typeString": "int_const 50"
																				},
																				"value": "50"
																			},
																			"src": "1808:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1825:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "1808:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1807:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1791:38:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1333,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "1833:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1334,
																				"name": "maxSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1166,
																				"src": "1849:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3735",
																				"id": 1335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1861:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_75_by_1",
																					"typeString": "int_const 75"
																				},
																				"value": "75"
																			},
																			"src": "1849:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1866:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "1849:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1339,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1848:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1833:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1791:79:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1377,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2122:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1378,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "2139:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3735",
																					"id": 1379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2151:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_75_by_1",
																						"typeString": "int_const 75"
																					},
																					"value": "75"
																				},
																				"src": "2139:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2156:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "2139:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1383,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2138:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2122:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1385,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "2164:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1386,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "2180:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3935",
																					"id": 1387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2192:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_95_by_1",
																						"typeString": "int_const 95"
																					},
																					"value": "95"
																				},
																				"src": "2180:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2197:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "2180:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1391,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2179:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2164:37:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2122:79:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1433,
															"nodeType": "Block",
															"src": "2453:36:10",
															"statements": [
																{
																	"expression": {
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1429,
																			"name": "_reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "2467:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "30",
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2477:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2467:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1432,
																	"nodeType": "ExpressionStatement",
																	"src": "2467:11:10"
																}
															]
														},
														"id": 1434,
														"nodeType": "IfStatement",
														"src": "2119:370:10",
														"trueBody": {
															"id": 1428,
															"nodeType": "Block",
															"src": "2203:244:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Acceptance_$1480",
																			"typeString": "enum Types.Acceptance"
																		},
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1394,
																			"name": "acceptance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "2221:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Acceptance_$1480",
																				"typeString": "enum Types.Acceptance"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"id": 1395,
																					"name": "Types",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1481,
																					"src": "2235:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Types_$1481_$",
																						"typeString": "type(library Types)"
																					}
																				},
																				"id": 1396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2241:10:10",
																				"memberName": "Acceptance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1480,
																				"src": "2235:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Acceptance_$1480_$",
																					"typeString": "type(enum Types.Acceptance)"
																				}
																			},
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2252:11:10",
																			"memberName": "CONDITIONAL",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1478,
																			"src": "2235:28:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Acceptance_$1480",
																				"typeString": "enum Types.Acceptance"
																			}
																		},
																		"src": "2221:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"expression": {
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1413,
																				"name": "_reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "2375:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1416,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3235",
																							"id": 1414,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2385:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_25_by_1",
																								"typeString": "int_const 25"
																							},
																							"value": "25"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1415,
																							"name": "cargoInsuredValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1256,
																							"src": "2390:17:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2385:22:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1420,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1417,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2411:2:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"id": 1418,
																										"name": "decimals",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 363,
																										"src": "2417:8:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																											"typeString": "function () view returns (uint8)"
																										}
																									},
																									"id": 1419,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "2417:10:10",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "2411:16:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1421,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2410:18:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2385:43:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "3130303030",
																					"id": 1423,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2431:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10000_by_1",
																						"typeString": "int_const 10000"
																					},
																					"value": "10000"
																				},
																				"src": "2385:51:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2375:61:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1426,
																		"nodeType": "ExpressionStatement",
																		"src": "2375:61:10"
																	},
																	"id": 1427,
																	"nodeType": "IfStatement",
																	"src": "2218:218:10",
																	"trueBody": {
																		"expression": {
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1399,
																				"name": "_reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "2281:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "35",
																							"id": 1400,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2291:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_5_by_1",
																								"typeString": "int_const 5"
																							},
																							"value": "5"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1401,
																							"name": "cargoInsuredValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1256,
																							"src": "2295:17:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2291:21:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1406,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "3130",
																									"id": 1403,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2316:2:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"arguments": [],
																									"expression": {
																										"argumentTypes": [],
																										"id": 1404,
																										"name": "decimals",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 363,
																										"src": "2322:8:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																											"typeString": "function () view returns (uint8)"
																										}
																									},
																									"id": 1405,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "2322:10:10",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "2316:16:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1407,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2315:18:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2291:42:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2336:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "2291:49:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2281:59:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1412,
																		"nodeType": "ExpressionStatement",
																		"src": "2281:59:10"
																	}
																}
															]
														}
													},
													"id": 1435,
													"nodeType": "IfStatement",
													"src": "1788:701:10",
													"trueBody": {
														"id": 1376,
														"nodeType": "Block",
														"src": "1872:241:10",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Acceptance_$1480",
																		"typeString": "enum Types.Acceptance"
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1342,
																		"name": "acceptance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "1890:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Acceptance_$1480",
																			"typeString": "enum Types.Acceptance"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 1343,
																				"name": "Types",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1481,
																				"src": "1904:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Types_$1481_$",
																					"typeString": "type(library Types)"
																				}
																			},
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1910:10:10",
																			"memberName": "Acceptance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1480,
																			"src": "1904:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Acceptance_$1480_$",
																				"typeString": "type(enum Types.Acceptance)"
																			}
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1921:11:10",
																		"memberName": "CONDITIONAL",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1478,
																		"src": "1904:28:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Acceptance_$1480",
																			"typeString": "enum Types.Acceptance"
																		}
																	},
																	"src": "1890:42:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"expression": {
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1361,
																			"name": "_reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "2043:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "35",
																						"id": 1362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2053:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_5_by_1",
																							"typeString": "int_const 5"
																						},
																						"value": "5"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1363,
																						"name": "cargoInsuredValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "2057:17:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2053:21:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1368,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 1365,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2078:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1366,
																									"name": "decimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 363,
																									"src": "2084:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																										"typeString": "function () view returns (uint8)"
																									}
																								},
																								"id": 1367,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2084:10:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "2078:16:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1369,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2077:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2053:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "31303030",
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2098:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "1000"
																			},
																			"src": "2053:49:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2043:59:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1374,
																	"nodeType": "ExpressionStatement",
																	"src": "2043:59:10"
																},
																"id": 1375,
																"nodeType": "IfStatement",
																"src": "1887:215:10",
																"trueBody": {
																	"expression": {
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1347,
																			"name": "_reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "1950:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1350,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1348,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1960:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1349,
																						"name": "cargoInsuredValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "1964:17:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1960:21:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1354,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 1351,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1985:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 1352,
																									"name": "decimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 363,
																									"src": "1991:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																										"typeString": "function () view returns (uint8)"
																									}
																								},
																								"id": 1353,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1991:10:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "1985:16:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1355,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1984:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1960:42:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 1357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2005:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "1960:48:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1950:58:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1360,
																	"nodeType": "ExpressionStatement",
																	"src": "1950:58:10"
																}
															}
														]
													}
												},
												"id": 1436,
												"nodeType": "IfStatement",
												"src": "1459:1030:10",
												"trueBody": {
													"id": 1324,
													"nodeType": "Block",
													"src": "1543:239:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Acceptance_$1480",
																	"typeString": "enum Types.Acceptance"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1290,
																	"name": "acceptance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "1560:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Acceptance_$1480",
																		"typeString": "enum Types.Acceptance"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1291,
																			"name": "Types",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1481,
																			"src": "1574:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Types_$1481_$",
																				"typeString": "type(library Types)"
																			}
																		},
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1580:10:10",
																		"memberName": "Acceptance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1480,
																		"src": "1574:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Acceptance_$1480_$",
																			"typeString": "type(enum Types.Acceptance)"
																		}
																	},
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1591:11:10",
																	"memberName": "CONDITIONAL",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1478,
																	"src": "1574:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Acceptance_$1480",
																		"typeString": "enum Types.Acceptance"
																	}
																},
																"src": "1560:42:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1309,
																		"name": "_reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "1713:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1723:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1311,
																					"name": "cargoInsuredValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "1727:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1723:21:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1316,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1313,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1748:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1314,
																								"name": "decimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 363,
																								"src": "1754:8:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																									"typeString": "function () view returns (uint8)"
																								}
																							},
																							"id": 1315,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1754:10:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "1748:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1317,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1747:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1723:42:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1768:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "1723:48:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1713:58:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1322,
																"nodeType": "ExpressionStatement",
																"src": "1713:58:10"
															},
															"id": 1323,
															"nodeType": "IfStatement",
															"src": "1557:214:10",
															"trueBody": {
																"expression": {
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1295,
																		"name": "_reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "1620:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "32",
																					"id": 1296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1630:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1297,
																					"name": "cargoInsuredValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "1634:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1630:21:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1299,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1655:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1300,
																								"name": "decimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 363,
																								"src": "1661:8:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																									"typeString": "function () view returns (uint8)"
																								}
																							},
																							"id": 1301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1661:10:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "1655:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1303,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1654:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1630:42:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1675:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "1630:48:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1620:58:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1308,
																"nodeType": "ExpressionStatement",
																"src": "1620:58:10"
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1437,
													"name": "_reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1265,
													"src": "2506:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1438,
												"nodeType": "Return",
												"src": "2499:14:10"
											}
										]
									},
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenReward",
									"nameLocation": "1274:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "cargoInsuredValue",
												"nameLocation": "1294:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1286:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "acceptance",
												"nameLocation": "1330:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1313:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Acceptance_$1480",
													"typeString": "enum Types.Acceptance"
												},
												"typeName": {
													"id": 1258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1257,
														"name": "Types.Acceptance",
														"nameLocations": [
															"1313:5:10",
															"1319:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1480,
														"src": "1313:16:10"
													},
													"referencedDeclaration": 1480,
													"src": "1313:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Acceptance_$1480",
														"typeString": "enum Types.Acceptance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:56:10"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1365:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:9:10"
									},
									"scope": 1475,
									"src": "1265:1255:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "2629:198:10",
										"statements": [
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "tokensToReward",
														"nameLocation": "2647:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "2639:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1450,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2639:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"arguments": [
														{
															"id": 1453,
															"name": "cargoInsurableValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "2676:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1454,
															"name": "acceptance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "2697:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Acceptance_$1480",
																"typeString": "enum Types.Acceptance"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_Acceptance_$1480",
																"typeString": "enum Types.Acceptance"
															}
														],
														"id": 1452,
														"name": "tokenReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "2664:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_enum$_Acceptance_$1480_$returns$_t_uint256_$",
															"typeString": "function (uint256,enum Types.Acceptance) view returns (uint256)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:69:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "2727:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "tokensToReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "2731:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1457,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2718:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "2718:28:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1467,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2794:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GeekToken_$1475",
																		"typeString": "contract GeekToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GeekToken_$1475",
																		"typeString": "contract GeekToken"
																	}
																],
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2786:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1465,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2786:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2786:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1469,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "2801:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1470,
															"name": "tokensToReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "2805:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1462,
															"name": "Events",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "2762:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Events_$1141_$",
																"typeString": "type(library Events)"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2769:16:10",
														"memberName": "TransferedTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1140,
														"src": "2762:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2762:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "EmitStatement",
												"src": "2757:63:10"
											}
										]
									},
									"functionSelector": "48659097",
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "2535:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2558:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "2550:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2550:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "cargoInsurableValue",
												"nameLocation": "2570:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "2562:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "acceptance",
												"nameLocation": "2608:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "2591:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Acceptance_$1480",
													"typeString": "enum Types.Acceptance"
												},
												"typeName": {
													"id": 1446,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1445,
														"name": "Types.Acceptance",
														"nameLocations": [
															"2591:5:10",
															"2597:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1480,
														"src": "2591:16:10"
													},
													"referencedDeclaration": 1480,
													"src": "2591:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Acceptance_$1480",
														"typeString": "enum Types.Acceptance"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:70:10"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:0:10"
									},
									"scope": 1475,
									"src": "2526:301:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1476,
							"src": "363:2466:10",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1035,
								1038
							],
							"usedEvents": [
								24,
								811,
								820,
								1027,
								1032,
								1140
							]
						}
					],
					"src": "32:2798:10"
				},
				"id": 10
			},
			"contracts/GeekToken/Types.sol": {
				"ast": {
					"absolutePath": "contracts/GeekToken/Types.sol",
					"exportedSymbols": {
						"Types": [
							1481
						]
					},
					"id": 1482,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1477,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Types",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1481,
							"linearizedBaseContracts": [
								1481
							],
							"name": "Types",
							"nameLocation": "66:5:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Types.Acceptance",
									"id": 1480,
									"members": [
										{
											"id": 1478,
											"name": "CONDITIONAL",
											"nameLocation": "104:11:11",
											"nodeType": "EnumValue",
											"src": "104:11:11"
										},
										{
											"id": 1479,
											"name": "UNCONDITIONAL",
											"nameLocation": "117:13:11",
											"nodeType": "EnumValue",
											"src": "117:13:11"
										}
									],
									"name": "Acceptance",
									"nameLocation": "83:10:11",
									"nodeType": "EnumDefinition",
									"src": "78:58:11"
								}
							],
							"scope": 1482,
							"src": "58:80:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:106:11"
				},
				"id": 11
			}
		}
	}
}